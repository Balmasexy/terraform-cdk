{
  "version": "0.1",
  "language": "go",
  "metadata": {
    "packageName": "cdktf",
    "packageVersion": "0.0.0"
  },
  "apiReference": {
    "constructs": [
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.App.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.Initializer.parameter.options",
              "displayName": "options",
              "id": "cdktf.App.Initializer.parameter.options",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.AppOptions",
                    "displayName": "AppOptions",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {
                "summary": "configuration options."
              }
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewApp(options AppOptions) App"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.ToString",
            "displayName": "ToString",
            "id": "cdktf.App.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.CrossStackReference",
            "displayName": "CrossStackReference",
            "id": "cdktf.App.crossStackReference",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.CrossStackReference.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.App.crossStackReference.parameter.fromStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.CrossStackReference.parameter.toStack",
                "displayName": "toStack",
                "id": "cdktf.App.crossStackReference.parameter.toStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.CrossStackReference.parameter.identifier",
                "displayName": "identifier",
                "id": "cdktf.App.crossStackReference.parameter.identifier",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a reference from one stack to another, invoked on prepareStack since it creates extra resources."
            },
            "usage": "func CrossStackReference(fromStack TerraformStack, toStack TerraformStack, identifier *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.Synth",
            "displayName": "Synth",
            "id": "cdktf.App.synth",
            "parameters": [],
            "docs": {
              "summary": "Synthesizes all resources to the output directory."
            },
            "usage": "func Synth()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.App.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.App.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.App_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.IsApp",
            "displayName": "IsApp",
            "id": "cdktf.App.isApp",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.IsApp.parameter.x",
                "displayName": "x",
                "id": "cdktf.App.isApp.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.App_IsApp(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.Of",
            "displayName": "Of",
            "id": "cdktf.App.of",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.Of.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.App.of.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.App_Of(construct IConstruct) App"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.property.Node",
            "displayName": "Node",
            "id": "cdktf.App.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.property.Manifest",
            "displayName": "Manifest",
            "id": "cdktf.App.property.manifest",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.Manifest",
                  "displayName": "Manifest",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Manifest() Manifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.property.Outdir",
            "displayName": "Outdir",
            "id": "cdktf.App.property.outdir",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The output directory into which resources will be synthesized."
            },
            "usage": "func Outdir() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.property.SkipValidation",
            "displayName": "SkipValidation",
            "id": "cdktf.App.property.skipValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Whether to skip the validation during synthesis of the app."
            },
            "usage": "func SkipValidation() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App.property.TargetStackId",
            "displayName": "TargetStackId",
            "id": "cdktf.App.property.targetStackId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The stack which will be synthesized.",
              "remarks": "If not set, all stacks will be synthesized."
            },
            "usage": "func TargetStackId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App",
        "displayName": "App",
        "id": "cdktf.App",
        "docs": {
          "summary": "Represents a cdktf application."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ArtifactoryBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ArtifactoryBackendProps",
                    "displayName": "ArtifactoryBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewArtifactoryBackend(scope Construct, props ArtifactoryBackendProps) ArtifactoryBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.ArtifactoryBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.ArtifactoryBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.ArtifactoryBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.ArtifactoryBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.ArtifactoryBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.ArtifactoryBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.ArtifactoryBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.ArtifactoryBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.ArtifactoryBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.ArtifactoryBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.ArtifactoryBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ArtifactoryBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.ArtifactoryBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.ArtifactoryBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ArtifactoryBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.ArtifactoryBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.ArtifactoryBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ArtifactoryBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.ArtifactoryBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackend",
        "displayName": "ArtifactoryBackend",
        "id": "cdktf.ArtifactoryBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AzurermBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.AzurermBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.AzurermBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.AzurermBackendProps",
                    "displayName": "AzurermBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewAzurermBackend(scope Construct, props AzurermBackendProps) AzurermBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.AzurermBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.AzurermBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.AzurermBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.AzurermBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.AzurermBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.AzurermBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.AzurermBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.AzurermBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.AzurermBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.AzurermBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.AzurermBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.AzurermBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.AzurermBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.AzurermBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.AzurermBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.AzurermBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.AzurermBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.AzurermBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.AzurermBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.AzurermBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackend",
        "displayName": "AzurermBackend",
        "id": "cdktf.AzurermBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CloudBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.CloudBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.CloudBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.CloudBackendProps",
                    "displayName": "CloudBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewCloudBackend(scope Construct, props CloudBackendProps) CloudBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.CloudBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.CloudBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.CloudBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.CloudBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.CloudBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.CloudBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.CloudBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.CloudBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.CloudBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.CloudBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.CloudBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.CloudBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.CloudBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.CloudBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.CloudBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.CloudBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.CloudBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.CloudBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.CloudBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.CloudBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackend",
        "displayName": "CloudBackend",
        "id": "cdktf.CloudBackend",
        "docs": {
          "summary": "The Cloud Backend synthesizes a {@link https://www.terraform.io/cli/cloud/settings#the-cloud-block cloud block}. The cloud block is a nested block within the top-level terraform settings block. It specifies which Terraform Cloud workspaces to use for the current working directory. The cloud block only affects Terraform CLI's behavior. When Terraform Cloud uses a configuration that contains a cloud block - for example, when a workspace is configured to use a VCS provider directly - it ignores the block and behaves according to its own workspace settings."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ConsulBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.ConsulBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.ConsulBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ConsulBackendProps",
                    "displayName": "ConsulBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewConsulBackend(scope Construct, props ConsulBackendProps) ConsulBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.ConsulBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.ConsulBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.ConsulBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.ConsulBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.ConsulBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.ConsulBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.ConsulBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.ConsulBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.ConsulBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.ConsulBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.ConsulBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.ConsulBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ConsulBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.ConsulBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.ConsulBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ConsulBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.ConsulBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.ConsulBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ConsulBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.ConsulBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackend",
        "displayName": "ConsulBackend",
        "id": "cdktf.ConsulBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CosBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.CosBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.CosBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.CosBackendProps",
                    "displayName": "CosBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewCosBackend(scope Construct, props CosBackendProps) CosBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.CosBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.CosBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.CosBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.CosBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.CosBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.CosBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.CosBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.CosBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.CosBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.CosBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.CosBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.CosBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.CosBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.CosBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.CosBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.CosBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.CosBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.CosBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.CosBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.CosBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackend",
        "displayName": "CosBackend",
        "id": "cdktf.CosBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteState.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateRemoteConfig",
                    "displayName": "DataTerraformRemoteStateRemoteConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteState(scope Construct, id *string, config DataTerraformRemoteStateRemoteConfig) DataTerraformRemoteState"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteState.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteState.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteState.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteState.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteState.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteState.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteState.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteState.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteState.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteState.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteState.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteState.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteState.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteState.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteState.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteState_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteState.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteState.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteState.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteState.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteState.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState",
        "displayName": "DataTerraformRemoteState",
        "id": "cdktf.DataTerraformRemoteState",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig",
                    "displayName": "DataTerraformRemoteStateArtifactoryConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateArtifactory(scope Construct, id *string, config DataTerraformRemoteStateArtifactoryConfig) DataTerraformRemoteStateArtifactory"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateArtifactory_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory",
        "displayName": "DataTerraformRemoteStateArtifactory",
        "id": "cdktf.DataTerraformRemoteStateArtifactory",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateAzurermConfig",
                    "displayName": "DataTerraformRemoteStateAzurermConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateAzurerm(scope Construct, id *string, config DataTerraformRemoteStateAzurermConfig) DataTerraformRemoteStateAzurerm"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateAzurerm_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm",
        "displayName": "DataTerraformRemoteStateAzurerm",
        "id": "cdktf.DataTerraformRemoteStateAzurerm",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateConsul.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateConsulConfig",
                    "displayName": "DataTerraformRemoteStateConsulConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateConsul(scope Construct, id *string, config DataTerraformRemoteStateConsulConfig) DataTerraformRemoteStateConsul"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateConsul.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateConsul.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateConsul.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateConsul.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateConsul.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateConsul.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateConsul.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateConsul.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateConsul.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateConsul.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateConsul.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateConsul.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateConsul.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateConsul.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateConsul_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul",
        "displayName": "DataTerraformRemoteStateConsul",
        "id": "cdktf.DataTerraformRemoteStateConsul",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateCos.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateCosConfig",
                    "displayName": "DataTerraformRemoteStateCosConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateCos(scope Construct, id *string, config DataTerraformRemoteStateCosConfig) DataTerraformRemoteStateCos"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateCos.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateCos.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateCos.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateCos.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateCos.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateCos.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateCos.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateCos.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateCos.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateCos.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateCos.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateCos.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateCos.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateCos.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateCos.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateCos.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateCos_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateCos.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateCos.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateCos.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateCos.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateCos.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos",
        "displayName": "DataTerraformRemoteStateCos",
        "id": "cdktf.DataTerraformRemoteStateCos",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateEtcdConfig",
                    "displayName": "DataTerraformRemoteStateEtcdConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateEtcd(scope Construct, id *string, config DataTerraformRemoteStateEtcdConfig) DataTerraformRemoteStateEtcd"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateEtcd.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateEtcd.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateEtcd.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateEtcd_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd",
        "displayName": "DataTerraformRemoteStateEtcd",
        "id": "cdktf.DataTerraformRemoteStateEtcd",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateEtcdV3Config",
                    "displayName": "DataTerraformRemoteStateEtcdV3Config",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateEtcdV3(scope Construct, id *string, config DataTerraformRemoteStateEtcdV3Config) DataTerraformRemoteStateEtcdV3"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateEtcdV3_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3",
        "displayName": "DataTerraformRemoteStateEtcdV3",
        "id": "cdktf.DataTerraformRemoteStateEtcdV3",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateGcs.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateGcsConfig",
                    "displayName": "DataTerraformRemoteStateGcsConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateGcs(scope Construct, id *string, config DataTerraformRemoteStateGcsConfig) DataTerraformRemoteStateGcs"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateGcs.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateGcs.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateGcs.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateGcs.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateGcs.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateGcs.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateGcs.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateGcs.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateGcs.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateGcs.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateGcs.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateGcs.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateGcs.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateGcs.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateGcs_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs",
        "displayName": "DataTerraformRemoteStateGcs",
        "id": "cdktf.DataTerraformRemoteStateGcs",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateHttp.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateHttpConfig",
                    "displayName": "DataTerraformRemoteStateHttpConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateHttp(scope Construct, id *string, config DataTerraformRemoteStateHttpConfig) DataTerraformRemoteStateHttp"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateHttp.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateHttp.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateHttp.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateHttp.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateHttp.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateHttp.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateHttp.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateHttp.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateHttp.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateHttp.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateHttp.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateHttp.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateHttp.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateHttp.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateHttp_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp",
        "displayName": "DataTerraformRemoteStateHttp",
        "id": "cdktf.DataTerraformRemoteStateHttp",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateLocal.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateLocalConfig",
                    "displayName": "DataTerraformRemoteStateLocalConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateLocal(scope Construct, id *string, config DataTerraformRemoteStateLocalConfig) DataTerraformRemoteStateLocal"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateLocal.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateLocal.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateLocal.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateLocal.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateLocal.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateLocal.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateLocal.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateLocal.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateLocal.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateLocal.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateLocal.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateLocal.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateLocal.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateLocal.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateLocal_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal",
        "displayName": "DataTerraformRemoteStateLocal",
        "id": "cdktf.DataTerraformRemoteStateLocal",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateManta.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateMantaConfig",
                    "displayName": "DataTerraformRemoteStateMantaConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateManta(scope Construct, id *string, config DataTerraformRemoteStateMantaConfig) DataTerraformRemoteStateManta"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateManta.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateManta.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateManta.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateManta.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateManta.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateManta.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateManta.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateManta.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateManta.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateManta.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateManta.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateManta.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateManta.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateManta.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateManta.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateManta.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateManta_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateManta.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateManta.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateManta.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateManta.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateManta.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta",
        "displayName": "DataTerraformRemoteStateManta",
        "id": "cdktf.DataTerraformRemoteStateManta",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateOss.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateOssConfig",
                    "displayName": "DataTerraformRemoteStateOssConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateOss(scope Construct, id *string, config DataTerraformRemoteStateOssConfig) DataTerraformRemoteStateOss"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateOss.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateOss.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateOss.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateOss.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateOss.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateOss.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateOss.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateOss.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateOss.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateOss.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateOss.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateOss.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateOss.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateOss.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateOss.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateOss.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateOss_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateOss.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateOss.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateOss.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateOss.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateOss.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss",
        "displayName": "DataTerraformRemoteStateOss",
        "id": "cdktf.DataTerraformRemoteStateOss",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStatePg.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStatePgConfig",
                    "displayName": "DataTerraformRemoteStatePgConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStatePg(scope Construct, id *string, config DataTerraformRemoteStatePgConfig) DataTerraformRemoteStatePg"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStatePg.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStatePg.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStatePg.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStatePg.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStatePg.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStatePg.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStatePg.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStatePg.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStatePg.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStatePg.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStatePg.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStatePg.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStatePg.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStatePg.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStatePg.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStatePg.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStatePg_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStatePg.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStatePg.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStatePg.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStatePg.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStatePg.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg",
        "displayName": "DataTerraformRemoteStatePg",
        "id": "cdktf.DataTerraformRemoteStatePg",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateS3.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateS3Config",
                    "displayName": "DataTerraformRemoteStateS3Config",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateS3(scope Construct, id *string, config DataTerraformRemoteStateS3Config) DataTerraformRemoteStateS3"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateS3.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateS3.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateS3.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateS3.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateS3.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateS3.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateS3.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateS3.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateS3.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateS3.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateS3.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateS3.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateS3.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateS3.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateS3.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateS3.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateS3_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateS3.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateS3.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateS3.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateS3.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateS3.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3",
        "displayName": "DataTerraformRemoteStateS3",
        "id": "cdktf.DataTerraformRemoteStateS3",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateSwift.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateSwiftConfig",
                    "displayName": "DataTerraformRemoteStateSwiftConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDataTerraformRemoteStateSwift(scope Construct, id *string, config DataTerraformRemoteStateSwiftConfig) DataTerraformRemoteStateSwift"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.ToString",
            "displayName": "ToString",
            "id": "cdktf.DataTerraformRemoteStateSwift.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.DataTerraformRemoteStateSwift.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateSwift.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateSwift.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateSwift.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.DataTerraformRemoteStateSwift.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.DataTerraformRemoteStateSwift.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Get",
            "displayName": "Get",
            "id": "cdktf.DataTerraformRemoteStateSwift.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.DataTerraformRemoteStateSwift.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetList",
            "displayName": "GetList",
            "id": "cdktf.DataTerraformRemoteStateSwift.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.DataTerraformRemoteStateSwift.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetString",
            "displayName": "GetString",
            "id": "cdktf.DataTerraformRemoteStateSwift.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.DataTerraformRemoteStateSwift.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateSwift.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.DataTerraformRemoteStateSwift_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.property.Node",
            "displayName": "Node",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift",
        "displayName": "DataTerraformRemoteStateSwift",
        "id": "cdktf.DataTerraformRemoteStateSwift",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.EtcdBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.EtcdBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.EtcdBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.EtcdBackendProps",
                    "displayName": "EtcdBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewEtcdBackend(scope Construct, props EtcdBackendProps) EtcdBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.EtcdBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.EtcdBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.EtcdBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.EtcdBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.EtcdBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.EtcdBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.EtcdBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.EtcdBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.EtcdBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.EtcdBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.EtcdBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.EtcdBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.EtcdBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.EtcdBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.EtcdBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.EtcdBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.EtcdBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.EtcdBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackend",
        "displayName": "EtcdBackend",
        "id": "cdktf.EtcdBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.EtcdV3Backend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.EtcdV3BackendProps",
                    "displayName": "EtcdV3BackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewEtcdV3Backend(scope Construct, props EtcdV3BackendProps) EtcdV3Backend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.ToString",
            "displayName": "ToString",
            "id": "cdktf.EtcdV3Backend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.EtcdV3Backend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.EtcdV3Backend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.EtcdV3Backend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.EtcdV3Backend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.EtcdV3Backend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.EtcdV3Backend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.EtcdV3Backend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.EtcdV3Backend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.EtcdV3Backend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdV3Backend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.EtcdV3Backend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.EtcdV3Backend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdV3Backend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.EtcdV3Backend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.property.Node",
            "displayName": "Node",
            "id": "cdktf.EtcdV3Backend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.EtcdV3Backend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.EtcdV3Backend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.EtcdV3Backend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3Backend",
        "displayName": "EtcdV3Backend",
        "id": "cdktf.EtcdV3Backend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.GcsBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.GcsBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.GcsBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.GcsBackendProps",
                    "displayName": "GcsBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewGcsBackend(scope Construct, props GcsBackendProps) GcsBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.GcsBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.GcsBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.GcsBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.GcsBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.GcsBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.GcsBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.GcsBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.GcsBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.GcsBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.GcsBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.GcsBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.GcsBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.GcsBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.GcsBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.GcsBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.GcsBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.GcsBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.GcsBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.GcsBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.GcsBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackend",
        "displayName": "GcsBackend",
        "id": "cdktf.GcsBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.HttpBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.HttpBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.HttpBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.HttpBackendProps",
                    "displayName": "HttpBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewHttpBackend(scope Construct, props HttpBackendProps) HttpBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.HttpBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.HttpBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.HttpBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.HttpBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.HttpBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.HttpBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.HttpBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.HttpBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.HttpBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.HttpBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.HttpBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.HttpBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.HttpBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.HttpBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.HttpBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.HttpBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.HttpBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.HttpBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.HttpBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.HttpBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackend",
        "displayName": "HttpBackend",
        "id": "cdktf.HttpBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.LocalBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.LocalBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.LocalBackend.Initializer.parameter.props",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.LocalBackendProps",
                    "displayName": "LocalBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewLocalBackend(scope Construct, props LocalBackendProps) LocalBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.LocalBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.LocalBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.LocalBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.LocalBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.LocalBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.LocalBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.LocalBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.LocalBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.LocalBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.LocalBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.GetRemoteStateDataSource.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.LocalBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.LocalBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.LocalBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.LocalBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.LocalBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.LocalBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.LocalBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.LocalBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.LocalBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.LocalBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackend",
        "displayName": "LocalBackend",
        "id": "cdktf.LocalBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.MantaBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.MantaBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.MantaBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.MantaBackendProps",
                    "displayName": "MantaBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewMantaBackend(scope Construct, props MantaBackendProps) MantaBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.MantaBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.MantaBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.MantaBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.MantaBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.MantaBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.MantaBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.MantaBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.MantaBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.MantaBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.MantaBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.MantaBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.MantaBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.MantaBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.MantaBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.MantaBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.MantaBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.MantaBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.MantaBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.MantaBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.MantaBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackend",
        "displayName": "MantaBackend",
        "id": "cdktf.MantaBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.OssBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.OssBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.OssBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.OssBackendProps",
                    "displayName": "OssBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewOssBackend(scope Construct, props OssBackendProps) OssBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.OssBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.OssBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.OssBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.OssBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.OssBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.OssBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.OssBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.OssBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.OssBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.OssBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.OssBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.OssBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.OssBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.OssBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.OssBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.OssBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.OssBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.OssBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.OssBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.OssBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackend",
        "displayName": "OssBackend",
        "id": "cdktf.OssBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.PgBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.PgBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.PgBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.PgBackendProps",
                    "displayName": "PgBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewPgBackend(scope Construct, props PgBackendProps) PgBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.PgBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.PgBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.PgBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.PgBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.PgBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.PgBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.PgBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.PgBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.PgBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.PgBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.PgBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.PgBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.PgBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.PgBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.PgBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.PgBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.PgBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.PgBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.PgBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.PgBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackend",
        "displayName": "PgBackend",
        "id": "cdktf.PgBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.RemoteBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.RemoteBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.RemoteBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.RemoteBackendProps",
                    "displayName": "RemoteBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewRemoteBackend(scope Construct, props RemoteBackendProps) RemoteBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.RemoteBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.RemoteBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.RemoteBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.RemoteBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.RemoteBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.RemoteBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.RemoteBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.RemoteBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.RemoteBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.RemoteBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.RemoteBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.RemoteBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.RemoteBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.RemoteBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.RemoteBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.RemoteBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.RemoteBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.RemoteBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.RemoteBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.RemoteBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackend",
        "displayName": "RemoteBackend",
        "id": "cdktf.RemoteBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Resource.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.Resource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.Resource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewResource(scope Construct, id *string) Resource"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResource",
            "displayName": "IResource",
            "id": "cdktf.IResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.ToString",
            "displayName": "ToString",
            "id": "cdktf.Resource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.Resource.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.Resource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Resource_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.property.Node",
            "displayName": "Node",
            "id": "cdktf.Resource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource.property.Stack",
            "displayName": "Stack",
            "id": "cdktf.Resource.property.stack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The stack in which this resource is defined.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "func Stack() TerraformStack"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource",
        "displayName": "Resource",
        "id": "cdktf.Resource",
        "docs": {
          "summary": "A construct which represents a resource.",
          "deprecated": true,
          "deprecationReason": "- Please use Construct from the constructs package instead."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.S3Backend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.S3Backend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.S3Backend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.S3BackendProps",
                    "displayName": "S3BackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewS3Backend(scope Construct, props S3BackendProps) S3Backend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.ToString",
            "displayName": "ToString",
            "id": "cdktf.S3Backend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.S3Backend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.S3Backend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.S3Backend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.S3Backend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.S3Backend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.S3Backend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.S3Backend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.S3Backend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.S3Backend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.S3Backend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.S3Backend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.S3Backend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.S3Backend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.S3Backend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.S3Backend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.property.Node",
            "displayName": "Node",
            "id": "cdktf.S3Backend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.S3Backend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.S3Backend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.S3Backend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3Backend",
        "displayName": "S3Backend",
        "id": "cdktf.S3Backend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.SwiftBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.SwiftBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.Initializer.parameter.props",
              "displayName": "props",
              "id": "cdktf.SwiftBackend.Initializer.parameter.props",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.SwiftBackendProps",
                    "displayName": "SwiftBackendProps",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewSwiftBackend(scope Construct, props SwiftBackendProps) SwiftBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.SwiftBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.SwiftBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.SwiftBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.SwiftBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.SwiftBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.SwiftBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.SwiftBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.SwiftBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.SwiftBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.SwiftBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.GetRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, _fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.SwiftBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.SwiftBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.SwiftBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.SwiftBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.SwiftBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.SwiftBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.SwiftBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.SwiftBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.SwiftBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.SwiftBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackend",
        "displayName": "SwiftBackend",
        "id": "cdktf.SwiftBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformAsset.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformAsset.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformAsset.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformAsset.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformAssetConfig",
                    "displayName": "TerraformAssetConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAssetConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformAsset(scope Construct, id *string, config TerraformAssetConfig) TerraformAsset"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformAsset.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformAsset.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformAsset.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformAsset_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformAsset.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.property.FileName",
            "displayName": "FileName",
            "id": "cdktf.TerraformAsset.property.fileName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Name of the asset."
            },
            "usage": "func FileName() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.property.Path",
            "displayName": "Path",
            "id": "cdktf.TerraformAsset.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The path relative to the root of the terraform directory in posix format Use this property to reference the asset."
            },
            "usage": "func Path() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.property.AssetHash",
            "displayName": "AssetHash",
            "id": "cdktf.TerraformAsset.property.assetHash",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func AssetHash() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset.property.Type",
            "displayName": "Type",
            "id": "cdktf.TerraformAsset.property.type",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AssetType",
                  "displayName": "AssetType",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Type() AssetType"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAsset",
        "displayName": "TerraformAsset",
        "id": "cdktf.TerraformAsset",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformBackend.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformBackend.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.TerraformBackend.Initializer.parameter.name",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformBackend(scope Construct, id *string, name *string) TerraformBackend"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformBackend.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.GetRemoteStateDataSource",
            "displayName": "GetRemoteStateDataSource",
            "id": "cdktf.TerraformBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.GetRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.GetRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.GetRemoteStateDataSource.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.fromStack",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "func GetRemoteStateDataSource(scope Construct, name *string, fromStack *string) TerraformRemoteState"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformBackend.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformBackend_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.IsBackend",
            "displayName": "IsBackend",
            "id": "cdktf.TerraformBackend.isBackend",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.IsBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformBackend_IsBackend(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformBackend.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformBackend",
        "displayName": "TerraformBackend",
        "id": "cdktf.TerraformBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformDataSource.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformResourceConfig",
                    "displayName": "TerraformResourceConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformDataSource(scope Construct, id *string, config TerraformResourceConfig) TerraformDataSource"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformDataSource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformDataSource.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformDataSource.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformDataSource.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformDataSource.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformDataSource.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformDataSource.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformDataSource.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformDataSource.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetAnyMapAttribute",
            "displayName": "GetAnyMapAttribute",
            "id": "cdktf.TerraformDataSource.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetAnyMapAttribute(terraformAttribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetBooleanAttribute",
            "displayName": "GetBooleanAttribute",
            "id": "cdktf.TerraformDataSource.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanAttribute(terraformAttribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetBooleanMapAttribute",
            "displayName": "GetBooleanMapAttribute",
            "id": "cdktf.TerraformDataSource.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMapAttribute(terraformAttribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetListAttribute",
            "displayName": "GetListAttribute",
            "id": "cdktf.TerraformDataSource.getListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetListAttribute(terraformAttribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberAttribute",
            "displayName": "GetNumberAttribute",
            "id": "cdktf.TerraformDataSource.getNumberAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberAttribute(terraformAttribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberListAttribute",
            "displayName": "GetNumberListAttribute",
            "id": "cdktf.TerraformDataSource.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberListAttribute(terraformAttribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberMapAttribute",
            "displayName": "GetNumberMapAttribute",
            "id": "cdktf.TerraformDataSource.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberMapAttribute(terraformAttribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetStringAttribute",
            "displayName": "GetStringAttribute",
            "id": "cdktf.TerraformDataSource.getStringAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringAttribute(terraformAttribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetStringMapAttribute",
            "displayName": "GetStringMapAttribute",
            "id": "cdktf.TerraformDataSource.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.GetStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringMapAttribute(terraformAttribute *string) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.TerraformDataSource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.InterpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(terraformAttribute *string) IResolvable"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformDataSource.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformDataSource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformDataSource_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformDataSource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformDataSource.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformDataSource.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformDataSource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.TerraformMetaArguments",
            "displayName": "TerraformMetaArguments",
            "id": "cdktf.TerraformDataSource.property.terraformMetaArguments",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "func TerraformMetaArguments() *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.TerraformDataSource.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TerraformResourceType() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.TerraformGeneratorMetadata",
            "displayName": "TerraformGeneratorMetadata",
            "id": "cdktf.TerraformDataSource.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func TerraformGeneratorMetadata() TerraformProviderGeneratorMetadata"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.Count",
            "displayName": "Count",
            "id": "cdktf.TerraformDataSource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "func Count() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformDataSource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformDataSource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func ForEach() ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.Lifecycle",
            "displayName": "Lifecycle",
            "id": "cdktf.TerraformDataSource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Lifecycle() TerraformResourceLifecycle"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.TerraformDataSource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Provider() TerraformProvider"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource",
        "displayName": "TerraformDataSource",
        "id": "cdktf.TerraformDataSource",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformElement.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformElement.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformElement.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.Initializer.parameter.elementType",
              "displayName": "elementType",
              "id": "cdktf.TerraformElement.Initializer.parameter.elementType",
              "optional": true,
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformElement(scope Construct, id *string, elementType *string) TerraformElement"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformElement.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformElement.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformElement.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformElement.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformElement.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformElement.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformElement.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformElement.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformElement.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformElement.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformElement.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformElement_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformElement.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformElement.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformElement.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformElement.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement",
        "displayName": "TerraformElement",
        "id": "cdktf.TerraformElement",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformHclModule.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Initializer.parameter.options",
              "displayName": "options",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.options",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformHclModuleOptions",
                    "displayName": "TerraformHclModuleOptions",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformHclModule(scope Construct, id *string, options TerraformHclModuleOptions) TerraformHclModule"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformHclModule.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformHclModule.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformHclModule.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformHclModule.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformHclModule.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformHclModule.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformHclModule.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformHclModule.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformHclModule.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.AddProvider",
            "displayName": "AddProvider",
            "id": "cdktf.TerraformHclModule.addProvider",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.AddProvider.parameter.provider",
                "displayName": "provider",
                "id": "cdktf.TerraformHclModule.addProvider.parameter.provider",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddProvider(provider interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetString",
            "displayName": "GetString",
            "id": "cdktf.TerraformHclModule.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.InterpolationForOutput",
            "displayName": "InterpolationForOutput",
            "id": "cdktf.TerraformHclModule.interpolationForOutput",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.InterpolationForOutput.parameter.moduleOutput",
                "displayName": "moduleOutput",
                "id": "cdktf.TerraformHclModule.interpolationForOutput.parameter.moduleOutput",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForOutput(moduleOutput *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Get",
            "displayName": "Get",
            "id": "cdktf.TerraformHclModule.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.TerraformHclModule.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetList",
            "displayName": "GetList",
            "id": "cdktf.TerraformHclModule.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.TerraformHclModule.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Set",
            "displayName": "Set",
            "id": "cdktf.TerraformHclModule.set",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Set.parameter.variable",
                "displayName": "variable",
                "id": "cdktf.TerraformHclModule.set.parameter.variable",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.Set.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformHclModule.set.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Set(variable *string, value interface{})"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformHclModule.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformHclModule.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformHclModule_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformHclModule.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformHclModule.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformHclModule.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformHclModule.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Source",
            "displayName": "Source",
            "id": "cdktf.TerraformHclModule.property.source",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Source() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Providers",
            "displayName": "Providers",
            "id": "cdktf.TerraformHclModule.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Providers() *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.SkipAssetCreationFromLocalModules",
            "displayName": "SkipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformHclModule.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func SkipAssetCreationFromLocalModules() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Version",
            "displayName": "Version",
            "id": "cdktf.TerraformHclModule.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Version() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformHclModule.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformHclModule.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func ForEach() ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule.property.Variables",
            "displayName": "Variables",
            "id": "cdktf.TerraformHclModule.property.variables",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "func Variables() *map[string]interface{}"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule",
        "displayName": "TerraformHclModule",
        "id": "cdktf.TerraformHclModule",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformLocal.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformLocal.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformLocal.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.Initializer.parameter.expression",
              "displayName": "expression",
              "id": "cdktf.TerraformLocal.Initializer.parameter.expression",
              "type": {
                "formattingPattern": "interface{}"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformLocal(scope Construct, id *string, expression interface{}) TerraformLocal"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformLocal.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformLocal.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformLocal.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformLocal.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformLocal.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformLocal.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformLocal.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformLocal.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformLocal.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformLocal.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformLocal.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformLocal_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformLocal.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformLocal.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformLocal.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformLocal.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.AsBoolean",
            "displayName": "AsBoolean",
            "id": "cdktf.TerraformLocal.property.asBoolean",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func AsBoolean() IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.AsList",
            "displayName": "AsList",
            "id": "cdktf.TerraformLocal.property.asList",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func AsList() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.AsNumber",
            "displayName": "AsNumber",
            "id": "cdktf.TerraformLocal.property.asNumber",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "func AsNumber() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.AsString",
            "displayName": "AsString",
            "id": "cdktf.TerraformLocal.property.asString",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func AsString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal.property.Expression",
            "displayName": "Expression",
            "id": "cdktf.TerraformLocal.property.expression",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "func Expression() interface{}"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal",
        "displayName": "TerraformLocal",
        "id": "cdktf.TerraformLocal",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformModule.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformModule.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformModule.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.Initializer.parameter.options",
              "displayName": "options",
              "id": "cdktf.TerraformModule.Initializer.parameter.options",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformModuleOptions",
                    "displayName": "TerraformModuleOptions",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformModule(scope Construct, id *string, options TerraformModuleOptions) TerraformModule"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformModule.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformModule.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformModule.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformModule.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformModule.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformModule.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformModule.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformModule.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformModule.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.AddProvider",
            "displayName": "AddProvider",
            "id": "cdktf.TerraformModule.addProvider",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.AddProvider.parameter.provider",
                "displayName": "provider",
                "id": "cdktf.TerraformModule.addProvider.parameter.provider",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddProvider(provider interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.GetString",
            "displayName": "GetString",
            "id": "cdktf.TerraformModule.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformModule.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.InterpolationForOutput",
            "displayName": "InterpolationForOutput",
            "id": "cdktf.TerraformModule.interpolationForOutput",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.InterpolationForOutput.parameter.moduleOutput",
                "displayName": "moduleOutput",
                "id": "cdktf.TerraformModule.interpolationForOutput.parameter.moduleOutput",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForOutput(moduleOutput *string) IResolvable"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformModule.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformModule.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformModule_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformModule.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformModule.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformModule.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformModule.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.Source",
            "displayName": "Source",
            "id": "cdktf.TerraformModule.property.source",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Source() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.Providers",
            "displayName": "Providers",
            "id": "cdktf.TerraformModule.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Providers() *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.SkipAssetCreationFromLocalModules",
            "displayName": "SkipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModule.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func SkipAssetCreationFromLocalModules() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.Version",
            "displayName": "Version",
            "id": "cdktf.TerraformModule.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Version() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformModule.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformModule.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func ForEach() ITerraformIterator"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule",
        "displayName": "TerraformModule",
        "id": "cdktf.TerraformModule",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformOutput.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformOutput.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformOutput.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformOutput.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformOutputConfig",
                    "displayName": "TerraformOutputConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformOutput(scope Construct, id *string, config TerraformOutputConfig) TerraformOutput"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformOutput.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformOutput.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformOutput.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformOutput.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformOutput.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformOutput.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformOutput.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformOutput.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformOutput.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformOutput.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformOutput.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformOutput_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.IsTerrafromOutput",
            "displayName": "IsTerrafromOutput",
            "id": "cdktf.TerraformOutput.isTerrafromOutput",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.IsTerrafromOutput.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformOutput.isTerrafromOutput.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformOutput_IsTerrafromOutput(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformOutput.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformOutput.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformOutput.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformOutput.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.StaticId",
            "displayName": "StaticId",
            "id": "cdktf.TerraformOutput.property.staticId",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func StaticId() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.Value",
            "displayName": "Value",
            "id": "cdktf.TerraformOutput.property.value",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "func Value() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformOutput.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.Description",
            "displayName": "Description",
            "id": "cdktf.TerraformOutput.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Description() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput.property.Sensitive",
            "displayName": "Sensitive",
            "id": "cdktf.TerraformOutput.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func Sensitive() *bool"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutput",
        "displayName": "TerraformOutput",
        "id": "cdktf.TerraformOutput",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformProvider.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformProvider.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformProvider.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformProvider.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProviderConfig",
                    "displayName": "TerraformProviderConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformProvider(scope Construct, id *string, config TerraformProviderConfig) TerraformProvider"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformProvider.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformProvider.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformProvider.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformProvider.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformProvider.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformProvider.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformProvider.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformProvider.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformProvider.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformProvider.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformProvider.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformProvider_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformProvider.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformProvider.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformProvider.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformProvider.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.MetaAttributes",
            "displayName": "MetaAttributes",
            "id": "cdktf.TerraformProvider.property.metaAttributes",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "func MetaAttributes() *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.TerraformProvider.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TerraformResourceType() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.TerraformGeneratorMetadata",
            "displayName": "TerraformGeneratorMetadata",
            "id": "cdktf.TerraformProvider.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func TerraformGeneratorMetadata() TerraformProviderGeneratorMetadata"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.TerraformProviderSource",
            "displayName": "TerraformProviderSource",
            "id": "cdktf.TerraformProvider.property.terraformProviderSource",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TerraformProviderSource() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider.property.Alias",
            "displayName": "Alias",
            "id": "cdktf.TerraformProvider.property.alias",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Alias() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
        "displayName": "TerraformProvider",
        "id": "cdktf.TerraformProvider",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformRemoteState.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Initializer.parameter.backend",
              "displayName": "backend",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.backend",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.DataTerraformRemoteStateConfig",
                    "displayName": "DataTerraformRemoteStateConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformRemoteState(scope Construct, id *string, backend *string, config DataTerraformRemoteStateConfig) TerraformRemoteState"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformRemoteState.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformRemoteState.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformRemoteState.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformRemoteState.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformRemoteState.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformRemoteState.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformRemoteState.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformRemoteState.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Get",
            "displayName": "Get",
            "id": "cdktf.TerraformRemoteState.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.Get.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.get.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.TerraformRemoteState.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(output *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetList",
            "displayName": "GetList",
            "id": "cdktf.TerraformRemoteState.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetList.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getList.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetList(output *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.TerraformRemoteState.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumber(output *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetString",
            "displayName": "GetString",
            "id": "cdktf.TerraformRemoteState.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.GetString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getString.parameter.output",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetString(output *string) *string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformRemoteState.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformRemoteState.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformRemoteState_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.TerraformRemoteState.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TfResourceType() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformRemoteState.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformRemoteState.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformRemoteState.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformRemoteState.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState",
        "displayName": "TerraformRemoteState",
        "id": "cdktf.TerraformRemoteState",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformResource.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformResource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformResource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformResource.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformResourceConfig",
                    "displayName": "TerraformResourceConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformResource(scope Construct, id *string, config TerraformResourceConfig) TerraformResource"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformResource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformResource.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformResource.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformResource.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformResource.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformResource.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformResource.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformResource.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformResource.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetAnyMapAttribute",
            "displayName": "GetAnyMapAttribute",
            "id": "cdktf.TerraformResource.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetAnyMapAttribute(terraformAttribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetBooleanAttribute",
            "displayName": "GetBooleanAttribute",
            "id": "cdktf.TerraformResource.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanAttribute(terraformAttribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetBooleanMapAttribute",
            "displayName": "GetBooleanMapAttribute",
            "id": "cdktf.TerraformResource.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMapAttribute(terraformAttribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetListAttribute",
            "displayName": "GetListAttribute",
            "id": "cdktf.TerraformResource.getListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetListAttribute(terraformAttribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberAttribute",
            "displayName": "GetNumberAttribute",
            "id": "cdktf.TerraformResource.getNumberAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberAttribute(terraformAttribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberListAttribute",
            "displayName": "GetNumberListAttribute",
            "id": "cdktf.TerraformResource.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberListAttribute(terraformAttribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberMapAttribute",
            "displayName": "GetNumberMapAttribute",
            "id": "cdktf.TerraformResource.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberMapAttribute(terraformAttribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetStringAttribute",
            "displayName": "GetStringAttribute",
            "id": "cdktf.TerraformResource.getStringAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringAttribute(terraformAttribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetStringMapAttribute",
            "displayName": "GetStringMapAttribute",
            "id": "cdktf.TerraformResource.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.GetStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringMapAttribute(terraformAttribute *string) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.TerraformResource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.InterpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(terraformAttribute *string) IResolvable"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformResource.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformResource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformResource_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformResource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformResource.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformResource.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformResource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.TerraformMetaArguments",
            "displayName": "TerraformMetaArguments",
            "id": "cdktf.TerraformResource.property.terraformMetaArguments",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "func TerraformMetaArguments() *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.TerraformResource.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TerraformResourceType() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.TerraformGeneratorMetadata",
            "displayName": "TerraformGeneratorMetadata",
            "id": "cdktf.TerraformResource.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func TerraformGeneratorMetadata() TerraformProviderGeneratorMetadata"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Connection",
            "displayName": "Connection",
            "id": "cdktf.TerraformResource.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Connection() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Count",
            "displayName": "Count",
            "id": "cdktf.TerraformResource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "func Count() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformResource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformResource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func ForEach() ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Lifecycle",
            "displayName": "Lifecycle",
            "id": "cdktf.TerraformResource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Lifecycle() TerraformResourceLifecycle"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.TerraformResource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Provider() TerraformProvider"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource.property.Provisioners",
            "displayName": "Provisioners",
            "id": "cdktf.TerraformResource.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Provisioners() *[]interface{}"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource",
        "displayName": "TerraformResource",
        "id": "cdktf.TerraformResource",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformStack.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformStack.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformStack.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformStack(scope Construct, id *string) TerraformStack"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformStack.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AddDependency",
            "displayName": "AddDependency",
            "id": "cdktf.TerraformStack.addDependency",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AddDependency.parameter.dependency",
                "displayName": "dependency",
                "id": "cdktf.TerraformStack.addDependency.parameter.dependency",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddDependency(dependency TerraformStack)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformStack.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformStack.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformStack.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.AllProviders",
            "displayName": "AllProviders",
            "id": "cdktf.TerraformStack.allProviders",
            "parameters": [],
            "docs": {},
            "usage": "func AllProviders() *[]TerraformProvider"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformStack.dependsOn",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.DependsOn.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.TerraformStack.dependsOn.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func DependsOn(stack TerraformStack) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.EnsureBackendExists",
            "displayName": "EnsureBackendExists",
            "id": "cdktf.TerraformStack.ensureBackendExists",
            "parameters": [],
            "docs": {},
            "usage": "func EnsureBackendExists() TerraformBackend"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.GetLogicalId",
            "displayName": "GetLogicalId",
            "id": "cdktf.TerraformStack.getLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.GetLogicalId.parameter.tfElement",
                "displayName": "tfElement",
                "id": "cdktf.TerraformStack.getLogicalId.parameter.tfElement",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformElement",
                          "displayName": "TerraformElement",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElement",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "constructs.Node",
                          "displayName": "Node",
                          "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                          "packageName": "constructs",
                          "packageVersion": "10.1.45"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetLogicalId(tfElement interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.PrepareStack",
            "displayName": "PrepareStack",
            "id": "cdktf.TerraformStack.prepareStack",
            "parameters": [],
            "docs": {},
            "usage": "func PrepareStack()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.RegisterIncomingCrossStackReference",
            "displayName": "RegisterIncomingCrossStackReference",
            "id": "cdktf.TerraformStack.registerIncomingCrossStackReference",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.RegisterIncomingCrossStackReference.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.TerraformStack.registerIncomingCrossStackReference.parameter.fromStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func RegisterIncomingCrossStackReference(fromStack TerraformStack) TerraformRemoteState"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.RegisterOutgoingCrossStackReference",
            "displayName": "RegisterOutgoingCrossStackReference",
            "id": "cdktf.TerraformStack.registerOutgoingCrossStackReference",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.RegisterOutgoingCrossStackReference.parameter.identifier",
                "displayName": "identifier",
                "id": "cdktf.TerraformStack.registerOutgoingCrossStackReference.parameter.identifier",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func RegisterOutgoingCrossStackReference(identifier *string) TerraformOutput"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.RunAllValidations",
            "displayName": "RunAllValidations",
            "id": "cdktf.TerraformStack.runAllValidations",
            "parameters": [],
            "docs": {
              "summary": "Run all validations on the stack."
            },
            "usage": "func RunAllValidations()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformStack.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformStack.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformStack.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformStack_IsConstruct(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.IsStack",
            "displayName": "IsStack",
            "id": "cdktf.TerraformStack.isStack",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.IsStack.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformStack.isStack.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformStack_IsStack(x interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.Of",
            "displayName": "Of",
            "id": "cdktf.TerraformStack.of",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.Of.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.TerraformStack.of.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformStack_Of(construct IConstruct) TerraformStack"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformStack.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.property.Dependencies",
            "displayName": "Dependencies",
            "id": "cdktf.TerraformStack.property.dependencies",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Dependencies() *[]TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack.property.Synthesizer",
            "displayName": "Synthesizer",
            "id": "cdktf.TerraformStack.property.synthesizer",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IStackSynthesizer",
                  "displayName": "IStackSynthesizer",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStackSynthesizer",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Synthesizer() IStackSynthesizer"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
        "displayName": "TerraformStack",
        "id": "cdktf.TerraformStack",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformVariable.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformVariable.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "github.com/aws/constructs-go/constructs/v10.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformVariable.Initializer.parameter.id",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.Initializer.parameter.config",
              "displayName": "config",
              "id": "cdktf.TerraformVariable.Initializer.parameter.config",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformVariableConfig",
                    "displayName": "TerraformVariableConfig",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformVariable(scope Construct, id *string, config TerraformVariableConfig) TerraformVariable"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.ToString",
            "displayName": "ToString",
            "id": "cdktf.TerraformVariable.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "func ToString() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.AddOverride",
            "displayName": "AddOverride",
            "id": "cdktf.TerraformVariable.addOverride",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.AddOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformVariable.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.AddOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformVariable.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddOverride(path *string, value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.OverrideLogicalId",
            "displayName": "OverrideLogicalId",
            "id": "cdktf.TerraformVariable.overrideLogicalId",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.OverrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformVariable.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "func OverrideLogicalId(newLogicalId *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.ResetOverrideLogicalId",
            "displayName": "ResetOverrideLogicalId",
            "id": "cdktf.TerraformVariable.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "func ResetOverrideLogicalId()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.ToMetadata",
            "displayName": "ToMetadata",
            "id": "cdktf.TerraformVariable.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "func ToMetadata() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TerraformVariable.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.AddValidation",
            "displayName": "AddValidation",
            "id": "cdktf.TerraformVariable.addValidation",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.AddValidation.parameter.validation",
                "displayName": "validation",
                "id": "cdktf.TerraformVariable.addValidation.parameter.validation",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddValidation(validation TerraformVariableValidationConfig)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.SynthesizeAttributes",
            "displayName": "SynthesizeAttributes",
            "id": "cdktf.TerraformVariable.synthesizeAttributes",
            "parameters": [],
            "docs": {},
            "usage": "func SynthesizeAttributes() *map[string]interface{}"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.IsConstruct",
            "displayName": "IsConstruct",
            "id": "cdktf.TerraformVariable.isConstruct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.IsConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformVariable.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformVariable_IsConstruct(x interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Node",
            "displayName": "Node",
            "id": "cdktf.TerraformVariable.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.CdktfStack",
            "displayName": "CdktfStack",
            "id": "cdktf.TerraformVariable.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func CdktfStack() TerraformStack"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.TerraformVariable.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.TerraformVariable.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.BooleanValue",
            "displayName": "BooleanValue",
            "id": "cdktf.TerraformVariable.property.booleanValue",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func BooleanValue() IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.ListValue",
            "displayName": "ListValue",
            "id": "cdktf.TerraformVariable.property.listValue",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func ListValue() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.NumberValue",
            "displayName": "NumberValue",
            "id": "cdktf.TerraformVariable.property.numberValue",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "func NumberValue() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.StringValue",
            "displayName": "StringValue",
            "id": "cdktf.TerraformVariable.property.stringValue",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func StringValue() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Value",
            "displayName": "Value",
            "id": "cdktf.TerraformVariable.property.value",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "func Value() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Default",
            "displayName": "Default",
            "id": "cdktf.TerraformVariable.property.default",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "func Default() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Description",
            "displayName": "Description",
            "id": "cdktf.TerraformVariable.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Description() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Nullable",
            "displayName": "Nullable",
            "id": "cdktf.TerraformVariable.property.nullable",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func Nullable() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Sensitive",
            "displayName": "Sensitive",
            "id": "cdktf.TerraformVariable.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func Sensitive() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Type",
            "displayName": "Type",
            "id": "cdktf.TerraformVariable.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Type() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable.property.Validation",
            "displayName": "Validation",
            "id": "cdktf.TerraformVariable.property.validation",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Validation() *[]TerraformVariableValidationConfig"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable",
        "displayName": "TerraformVariable",
        "id": "cdktf.TerraformVariable",
        "docs": {}
      }
    ],
    "classes": [
      {
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddError",
            "displayName": "AddError",
            "id": "cdktf.Annotations.addError",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddError.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addError.parameter.message",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The error message."
                }
              }
            ],
            "docs": {
              "summary": "Adds an { \"error\": <message> } metadata entry to this construct.",
              "remarks": "The toolkit will fail synthesis when errors are reported."
            },
            "usage": "func AddError(message *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddInfo",
            "displayName": "AddInfo",
            "id": "cdktf.Annotations.addInfo",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddInfo.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addInfo.parameter.message",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The info message."
                }
              }
            ],
            "docs": {
              "summary": "Adds an info metadata entry to this construct.",
              "remarks": "The CLI will display the info message when apps are synthesized."
            },
            "usage": "func AddInfo(message *string)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddWarning",
            "displayName": "AddWarning",
            "id": "cdktf.Annotations.addWarning",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.AddWarning.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addWarning.parameter.message",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "The warning message."
                }
              }
            ],
            "docs": {
              "summary": "Adds a warning metadata entry to this construct.",
              "remarks": "The CLI will display the warning when an app is synthesized.\nIn a future release the CLI might introduce a --strict flag which\nwill then fail the synthesis if it encounters a warning."
            },
            "usage": "func AddWarning(message *string)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.Of",
            "displayName": "Of",
            "id": "cdktf.Annotations.of",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations.Of.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.Annotations.of.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {
                  "summary": "The scope."
                }
              }
            ],
            "docs": {
              "summary": "Returns the annotations API for a construct scope."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Annotations_Of(scope IConstruct) Annotations"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Annotations",
        "displayName": "Annotations",
        "id": "cdktf.Annotations",
        "docs": {
          "summary": "Includes API for attaching annotations such as warning messages to constructs."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AnyMap.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.AnyMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.AnyMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewAnyMap(terraformResource IInterpolatingParent, terraformAttribute *string) AnyMap"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.AnyMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Lookup",
            "displayName": "Lookup",
            "id": "cdktf.AnyMap.lookup",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.AnyMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Lookup(key *string) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.AnyMap.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.AnyMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.ToString",
            "displayName": "ToString",
            "id": "cdktf.AnyMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.AnyMap.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.AnyMap.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap",
        "displayName": "AnyMap",
        "id": "cdktf.AnyMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AnyMapList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.AnyMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.AnyMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.AnyMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewAnyMapList(terraformResource IInterpolatingParent, terraformAttribute *string, wrapsSet *bool) AnyMapList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.AnyMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Get",
            "displayName": "Get",
            "id": "cdktf.AnyMapList.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Get.parameter.index",
                "displayName": "index",
                "id": "cdktf.AnyMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(index *f64) AnyMap"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.AnyMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.AnyMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.AnyMapList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.AnyMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.ToString",
            "displayName": "ToString",
            "id": "cdktf.AnyMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.AnyMapList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.AnyMapList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
        "displayName": "AnyMapList",
        "id": "cdktf.AnyMapList",
        "docs": {}
      },
      {
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects.Add",
            "displayName": "Add",
            "id": "cdktf.Aspects.add",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects.Add.parameter.aspect",
                "displayName": "aspect",
                "id": "cdktf.Aspects.add.parameter.aspect",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAspect",
                      "displayName": "IAspect",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The aspect to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds an aspect to apply this scope before synthesis."
            },
            "usage": "func Add(aspect IAspect)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects.Of",
            "displayName": "Of",
            "id": "cdktf.Aspects.of",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects.Of.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.Aspects.of.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {
                  "summary": "The scope for which these aspects will apply."
                }
              }
            ],
            "docs": {
              "summary": "Returns the `Aspects` object associated with a construct scope."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Aspects_Of(scope IConstruct) Aspects"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects.property.All",
            "displayName": "All",
            "id": "cdktf.Aspects.property.all",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAspect",
                      "displayName": "IAspect",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "The list of aspects which were directly applied on this scope."
            },
            "usage": "func All() *[]IAspect"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Aspects",
        "displayName": "Aspects",
        "id": "cdktf.Aspects",
        "docs": {
          "summary": "Aspects can be applied to CDK tree scopes and can operate on the tree before synthesis."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.testingMatchers.AssertionReturn.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn.Initializer.parameter.message",
              "displayName": "message",
              "id": "cdktf.testingMatchers.AssertionReturn.Initializer.parameter.message",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn.Initializer.parameter.pass",
              "displayName": "pass",
              "id": "cdktf.testingMatchers.AssertionReturn.Initializer.parameter.pass",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf/testingmatchers\"\n\ntestingmatchers.NewAssertionReturn(message *string, pass *bool) AssertionReturn"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn.property.Message",
            "displayName": "Message",
            "id": "cdktf.testingMatchers.AssertionReturn.property.message",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Message() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn.property.Pass",
            "displayName": "Pass",
            "id": "cdktf.testingMatchers.AssertionReturn.property.pass",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func Pass() *bool"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.AssertionReturn",
        "displayName": "AssertionReturn",
        "id": "cdktf.testingMatchers.AssertionReturn",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.BooleanMap.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.BooleanMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.BooleanMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewBooleanMap(terraformResource IInterpolatingParent, terraformAttribute *string) BooleanMap"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.BooleanMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Lookup",
            "displayName": "Lookup",
            "id": "cdktf.BooleanMap.lookup",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.BooleanMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Lookup(key *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.BooleanMap.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.BooleanMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.ToString",
            "displayName": "ToString",
            "id": "cdktf.BooleanMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.BooleanMap.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.BooleanMap.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap",
        "displayName": "BooleanMap",
        "id": "cdktf.BooleanMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.BooleanMapList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.BooleanMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.BooleanMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.BooleanMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewBooleanMapList(terraformResource IInterpolatingParent, terraformAttribute *string, wrapsSet *bool) BooleanMapList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.BooleanMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Get",
            "displayName": "Get",
            "id": "cdktf.BooleanMapList.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Get.parameter.index",
                "displayName": "index",
                "id": "cdktf.BooleanMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(index *f64) BooleanMap"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.BooleanMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.BooleanMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.BooleanMapList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.BooleanMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.ToString",
            "displayName": "ToString",
            "id": "cdktf.BooleanMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.BooleanMapList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.BooleanMapList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
        "displayName": "BooleanMapList",
        "id": "cdktf.BooleanMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CloudWorkspace.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewCloudWorkspace() CloudWorkspace"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudWorkspace.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.CloudWorkspace.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudWorkspace",
        "displayName": "CloudWorkspace",
        "id": "cdktf.CloudWorkspace",
        "docs": {
          "summary": "A cloud workspace can either be a single named workspace, or a list of tagged workspaces."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexComputedList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Initializer.parameter.complexComputedListIndex",
              "displayName": "complexComputedListIndex",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.complexComputedListIndex",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.wrapsSet",
              "optional": true,
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewComplexComputedList(terraformResource IInterpolatingParent, terraformAttribute *string, complexComputedListIndex *string, wrapsSet *bool) ComplexComputedList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.ComplexComputedList.computeFqn",
            "parameters": [],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetAnyMapAttribute",
            "displayName": "GetAnyMapAttribute",
            "id": "cdktf.ComplexComputedList.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetAnyMapAttribute(terraformAttribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetBooleanAttribute",
            "displayName": "GetBooleanAttribute",
            "id": "cdktf.ComplexComputedList.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetBooleanAttribute(terraformAttribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetBooleanMapAttribute",
            "displayName": "GetBooleanMapAttribute",
            "id": "cdktf.ComplexComputedList.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetBooleanMapAttribute(terraformAttribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetListAttribute",
            "displayName": "GetListAttribute",
            "id": "cdktf.ComplexComputedList.getListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetListAttribute(terraformAttribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberAttribute",
            "displayName": "GetNumberAttribute",
            "id": "cdktf.ComplexComputedList.getNumberAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetNumberAttribute(terraformAttribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberListAttribute",
            "displayName": "GetNumberListAttribute",
            "id": "cdktf.ComplexComputedList.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetNumberListAttribute(terraformAttribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberMapAttribute",
            "displayName": "GetNumberMapAttribute",
            "id": "cdktf.ComplexComputedList.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetNumberMapAttribute(terraformAttribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetStringAttribute",
            "displayName": "GetStringAttribute",
            "id": "cdktf.ComplexComputedList.getStringAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetStringAttribute(terraformAttribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetStringMapAttribute",
            "displayName": "GetStringMapAttribute",
            "id": "cdktf.ComplexComputedList.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.GetStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func GetStringMapAttribute(terraformAttribute *string) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.ComplexComputedList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.ComplexComputedList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.ComplexComputedList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexComputedList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.ToString",
            "displayName": "ToString",
            "id": "cdktf.ComplexComputedList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.ComplexComputedList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ComplexComputedList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList",
        "displayName": "ComplexComputedList",
        "id": "cdktf.ComplexComputedList",
        "docs": {
          "deprecated": true,
          "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.ComplexList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewComplexList(terraformResource IInterpolatingParent, terraformAttribute *string, wrapsSet *bool) ComplexList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.ComplexList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.ComplexList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.ToString",
            "displayName": "ToString",
            "id": "cdktf.ComplexList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.ComplexList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ComplexList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
        "displayName": "ComplexList",
        "id": "cdktf.ComplexList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexMap.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewComplexMap(terraformResource IInterpolatingParent, terraformAttribute *string) ComplexMap"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.ComplexMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.ComplexMap.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.ToString",
            "displayName": "ToString",
            "id": "cdktf.ComplexMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.ComplexMap.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ComplexMap.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
        "displayName": "ComplexMap",
        "id": "cdktf.ComplexMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexObject.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexObject.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexObject.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Initializer.parameter.complexObjectIsFromSet",
              "displayName": "complexObjectIsFromSet",
              "id": "cdktf.ComplexObject.Initializer.parameter.complexObjectIsFromSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {
                "summary": "set to true if this item is from inside a set and needs tolist() for accessing it set to \"0\" for single list items."
              }
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Initializer.parameter.complexObjectIndex",
              "displayName": "complexObjectIndex",
              "id": "cdktf.ComplexObject.Initializer.parameter.complexObjectIndex",
              "optional": true,
              "type": {
                "formattingPattern": "interface{}",
                "types": [
                  {
                    "formattingPattern": "*string"
                  },
                  {
                    "formattingPattern": "*f64"
                  }
                ]
              },
              "docs": {
                "summary": "the index of the complex object in a list."
              }
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewComplexObject(terraformResource IInterpolatingParent, terraformAttribute *string, complexObjectIsFromSet *bool, complexObjectIndex interface{}) ComplexObject"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.ComplexObject.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetAnyMapAttribute",
            "displayName": "GetAnyMapAttribute",
            "id": "cdktf.ComplexObject.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetAnyMapAttribute(terraformAttribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetBooleanAttribute",
            "displayName": "GetBooleanAttribute",
            "id": "cdktf.ComplexObject.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanAttribute(terraformAttribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetBooleanMapAttribute",
            "displayName": "GetBooleanMapAttribute",
            "id": "cdktf.ComplexObject.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMapAttribute(terraformAttribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetListAttribute",
            "displayName": "GetListAttribute",
            "id": "cdktf.ComplexObject.getListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetListAttribute(terraformAttribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberAttribute",
            "displayName": "GetNumberAttribute",
            "id": "cdktf.ComplexObject.getNumberAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberAttribute(terraformAttribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberListAttribute",
            "displayName": "GetNumberListAttribute",
            "id": "cdktf.ComplexObject.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberListAttribute(terraformAttribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberMapAttribute",
            "displayName": "GetNumberMapAttribute",
            "id": "cdktf.ComplexObject.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetNumberMapAttribute(terraformAttribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetStringAttribute",
            "displayName": "GetStringAttribute",
            "id": "cdktf.ComplexObject.getStringAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringAttribute(terraformAttribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetStringMapAttribute",
            "displayName": "GetStringMapAttribute",
            "id": "cdktf.ComplexObject.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.GetStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func GetStringMapAttribute(terraformAttribute *string) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.ComplexObject.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.ComplexObject.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.ComplexObject.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexObject.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.ToString",
            "displayName": "ToString",
            "id": "cdktf.ComplexObject.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.ComplexObject.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ComplexObject.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject",
        "displayName": "ComplexObject",
        "id": "cdktf.ComplexObject",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DefaultTokenResolver.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.Initializer.parameter.concat",
              "displayName": "concat",
              "id": "cdktf.DefaultTokenResolver.Initializer.parameter.concat",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IFragmentConcatenator",
                    "displayName": "IFragmentConcatenator",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewDefaultTokenResolver(concat IFragmentConcatenator) DefaultTokenResolver"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver",
            "displayName": "ITokenResolver",
            "id": "cdktf.ITokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveList",
            "displayName": "ResolveList",
            "id": "cdktf.DefaultTokenResolver.resolveList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveList.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveList.parameter.xs",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveList.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a list of string."
            },
            "usage": "func ResolveList(xs *[]*string, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveMap",
            "displayName": "ResolveMap",
            "id": "cdktf.DefaultTokenResolver.resolveMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveMap.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveMap.parameter.xs",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveMap.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveMap.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a map token."
            },
            "usage": "func ResolveMap(xs *map[string]interface{}, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveNumberList",
            "displayName": "ResolveNumberList",
            "id": "cdktf.DefaultTokenResolver.resolveNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveNumberList.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveNumberList.parameter.xs",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveNumberList.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveNumberList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a list of numbers."
            },
            "usage": "func ResolveNumberList(xs *[]*f64, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveString",
            "displayName": "ResolveString",
            "id": "cdktf.DefaultTokenResolver.resolveString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveString.parameter.fragments",
                "displayName": "fragments",
                "id": "cdktf.DefaultTokenResolver.resolveString.parameter.fragments",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TokenizedStringFragments",
                      "displayName": "TokenizedStringFragments",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveString.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveString.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve string fragments to Tokens."
            },
            "usage": "func ResolveString(fragments TokenizedStringFragments, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveToken",
            "displayName": "ResolveToken",
            "id": "cdktf.DefaultTokenResolver.resolveToken",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveToken.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver.ResolveToken.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Default Token resolution.",
              "remarks": "Resolve the Token, recurse into whatever it returns,\nthen finally post-process it."
            },
            "usage": "func ResolveToken(t IResolvable, context IResolveContext, postProcessor IPostProcessor) interface{}"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver",
        "displayName": "DefaultTokenResolver",
        "id": "cdktf.DefaultTokenResolver",
        "docs": {
          "summary": "Default resolver implementation."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Fn.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewFn() Fn"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Abs",
            "displayName": "Abs",
            "id": "cdktf.Fn.abs",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Abs.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.abs.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/abs.html abs} returns the absolute value of the given number."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Abs(value *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Abspath",
            "displayName": "Abspath",
            "id": "cdktf.Fn.abspath",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Abspath.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.abspath.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/abspath.html abspath} takes a string containing a filesystem path and converts it to an absolute path."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Abspath(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Alltrue",
            "displayName": "Alltrue",
            "id": "cdktf.Fn.alltrue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Alltrue.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.alltrue.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/alltrue.html alltrue} returns true if all elements in a given collection are true or \"true\"."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Alltrue(values *[]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Anytrue",
            "displayName": "Anytrue",
            "id": "cdktf.Fn.anytrue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Anytrue.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.anytrue.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/anytrue.html anytrue} returns true if any element in a given collection is true or \"true\"."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Anytrue(value *[]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64decode",
            "displayName": "Base64decode",
            "id": "cdktf.Fn.base64decode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64decode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64decode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64decode.html base64decode} takes a string containing a Base64 character sequence and returns the original string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Base64decode(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64encode",
            "displayName": "Base64encode",
            "id": "cdktf.Fn.base64encode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64encode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64encode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64encode.html base64encode} takes a string containing a Base64 character sequence and returns the original string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Base64encode(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64gzip",
            "displayName": "Base64gzip",
            "id": "cdktf.Fn.base64gzip",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64gzip.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64gzip.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64gzip.html base64gzip} compresses a string with gzip and then encodes the result in Base64 encoding."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Base64gzip(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64sha256",
            "displayName": "Base64sha256",
            "id": "cdktf.Fn.base64sha256",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64sha256.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64sha256.html base64sha256} computes the SHA256 hash of a given string and encodes it with Base64."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Base64sha256(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64sha512",
            "displayName": "Base64sha512",
            "id": "cdktf.Fn.base64sha512",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Base64sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64sha512.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64sha512.html base64sha512} computes the SHA512 hash of a given string and encodes it with Base64."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Base64sha512(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Basename",
            "displayName": "Basename",
            "id": "cdktf.Fn.basename",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Basename.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.basename.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/basename.html basename} takes a string containing a filesystem path and removes all except the last portion from it."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Basename(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Bcrypt",
            "displayName": "Bcrypt",
            "id": "cdktf.Fn.bcrypt",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Bcrypt.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.bcrypt.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Bcrypt.parameter.cost",
                "displayName": "cost",
                "id": "cdktf.Fn.bcrypt.parameter.cost",
                "optional": true,
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/bcrypt.html bcrypt} computes a hash of the given string using the Blowfish cipher, returning a string in the Modular Crypt Format usually expected in the shadow password file on many Unix systems."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Bcrypt(value *string, cost *f64) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Can",
            "displayName": "Can",
            "id": "cdktf.Fn.can",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Can.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.can.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/can.html can} evaluates the given expression and returns a boolean value indicating whether the expression produced a result without any errors."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Can(expression interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Ceil",
            "displayName": "Ceil",
            "id": "cdktf.Fn.ceil",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Ceil.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.ceil.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/ceil.html ceil} returns the closest whole number that is greater than or equal to the given value, which may be a fraction."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Ceil(value *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Chomp",
            "displayName": "Chomp",
            "id": "cdktf.Fn.chomp",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Chomp.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.chomp.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/chomp.html chomp} removes newline characters at the end of a string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Chomp(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Chunklist",
            "displayName": "Chunklist",
            "id": "cdktf.Fn.chunklist",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Chunklist.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.chunklist.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Chunklist.parameter.chunkSize",
                "displayName": "chunkSize",
                "id": "cdktf.Fn.chunklist.parameter.chunkSize",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/chunklist.html chunklist} splits a single list into fixed-size chunks, returning a list of lists."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Chunklist(value *[]interface{}, chunkSize *f64) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrhost",
            "displayName": "Cidrhost",
            "id": "cdktf.Fn.cidrhost",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrhost.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrhost.parameter.prefix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrhost.parameter.hostnum",
                "displayName": "hostnum",
                "id": "cdktf.Fn.cidrhost.parameter.hostnum",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrhost.html cidrhost} calculates a full host IP address for a given host number within a given IP network address prefix."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Cidrhost(prefix *string, hostnum *f64) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrnetmask",
            "displayName": "Cidrnetmask",
            "id": "cdktf.Fn.cidrnetmask",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrnetmask.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrnetmask.parameter.prefix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrnetmask.html cidrnetmask} converts an IPv4 address prefix given in CIDR notation into a subnet mask address."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Cidrnetmask(prefix *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnet",
            "displayName": "Cidrsubnet",
            "id": "cdktf.Fn.cidrsubnet",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnet.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrsubnet.parameter.prefix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnet.parameter.newbits",
                "displayName": "newbits",
                "id": "cdktf.Fn.cidrsubnet.parameter.newbits",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnet.parameter.netnum",
                "displayName": "netnum",
                "id": "cdktf.Fn.cidrsubnet.parameter.netnum",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrsubnet.html cidrsubnet} calculates a subnet address within given IP network address prefix."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Cidrsubnet(prefix *string, newbits *f64, netnum *f64) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnets",
            "displayName": "Cidrsubnets",
            "id": "cdktf.Fn.cidrsubnets",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnets.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrsubnets.parameter.prefix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Cidrsubnets.parameter.newbits",
                "displayName": "newbits",
                "id": "cdktf.Fn.cidrsubnets.parameter.newbits",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrsubnets.html cidrsubnets} calculates a sequence of consecutive IP address ranges within a particular CIDR prefix."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Cidrsubnets(prefix *string, newbits *[]*f64) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Coalesce",
            "displayName": "Coalesce",
            "id": "cdktf.Fn.coalesce",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Coalesce.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.coalesce.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/coalesce.html coalesce} takes any number of arguments and returns the first one that isn't null or an empty string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Coalesce(value *[]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Coalescelist",
            "displayName": "Coalescelist",
            "id": "cdktf.Fn.coalescelist",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Coalescelist.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.coalescelist.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/coalescelist.html coalescelist} takes any number of list arguments and returns the first one that isn't empty."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Coalescelist(value *[]*[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Compact",
            "displayName": "Compact",
            "id": "cdktf.Fn.compact",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Compact.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.compact.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/compact.html compact} takes a list of strings and returns a new list with any empty string elements removed."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Compact(value *[]*string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Concat",
            "displayName": "Concat",
            "id": "cdktf.Fn.concat",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Concat.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.concat.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/concat.html concat} takes two or more lists and combines them into a single list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Concat(value *[]*[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Contains",
            "displayName": "Contains",
            "id": "cdktf.Fn.contains",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Contains.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.contains.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Contains.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.contains.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/contains.html contains} determines whether a given list or set contains a given single value as one of its elements."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Contains(list interface{}, value interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Csvdecode",
            "displayName": "Csvdecode",
            "id": "cdktf.Fn.csvdecode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Csvdecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.csvdecode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/csvdecode.html csvdecode} decodes a string containing CSV-formatted data and produces a list of maps representing that data."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Csvdecode(value *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Dirname",
            "displayName": "Dirname",
            "id": "cdktf.Fn.dirname",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Dirname.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.dirname.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/dirname.html dirname} takes a string containing a filesystem path and removes the last portion from it."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Dirname(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Distinct",
            "displayName": "Distinct",
            "id": "cdktf.Fn.distinct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Distinct.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.distinct.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/distinct.html distinct} takes a list and returns a new list with any duplicate elements removed."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Distinct(list interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Element",
            "displayName": "Element",
            "id": "cdktf.Fn.element",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Element.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.element.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Element.parameter.index",
                "displayName": "index",
                "id": "cdktf.Fn.element.parameter.index",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/element.html element} retrieves a single element from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Element(list interface{}, index *f64) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.File",
            "displayName": "File",
            "id": "cdktf.Fn.file",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.File.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.file.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/file.html file} takes a string containing a filesystem path and removes all except the last portion from it."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_File(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64",
            "displayName": "Filebase64",
            "id": "cdktf.Fn.filebase64",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64.html filebase64} reads the contents of a file at the given path and returns them as a base64-encoded string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filebase64(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64sha256",
            "displayName": "Filebase64sha256",
            "id": "cdktf.Fn.filebase64sha256",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64sha256.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64sha256.html filebase64sha256} is a variant of base64sha256 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filebase64sha256(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64sha512",
            "displayName": "Filebase64sha512",
            "id": "cdktf.Fn.filebase64sha512",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filebase64sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64sha512.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64sha512.html filebase64sha512} is a variant of base64sha512 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filebase64sha512(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Fileexists",
            "displayName": "Fileexists",
            "id": "cdktf.Fn.fileexists",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Fileexists.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.fileexists.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/fileexists.html fileexists} determines whether a file exists at a given path."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Fileexists(value *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filemd5",
            "displayName": "Filemd5",
            "id": "cdktf.Fn.filemd5",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filemd5.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filemd5.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filemd5.html filemd5} is a variant of md5 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filemd5(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Fileset",
            "displayName": "Fileset",
            "id": "cdktf.Fn.fileset",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Fileset.parameter.path",
                "displayName": "path",
                "id": "cdktf.Fn.fileset.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Fileset.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.fileset.parameter.pattern",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/fileset.html fileset} enumerates a set of regular file names given a path and pattern."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Fileset(path *string, pattern *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha1",
            "displayName": "Filesha1",
            "id": "cdktf.Fn.filesha1",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha1.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha1.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha1.html filesha1} is a variant of sha1 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filesha1(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha256",
            "displayName": "Filesha256",
            "id": "cdktf.Fn.filesha256",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha256.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha256.html filesha256} is a variant of sha256 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filesha256(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha512",
            "displayName": "Filesha512",
            "id": "cdktf.Fn.filesha512",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Filesha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha512.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha512.html filesha512} is a variant of sha512 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Filesha512(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Flatten",
            "displayName": "Flatten",
            "id": "cdktf.Fn.flatten",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Flatten.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.flatten.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/flatten.html flatten} takes a list and replaces any elements that are lists with a flattened sequence of the list contents."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Flatten(list interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Floor",
            "displayName": "Floor",
            "id": "cdktf.Fn.floor",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Floor.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.floor.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/floor.html floor} returns the closest whole number that is less than or equal to the given value, which may be a fraction."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Floor(value *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Format",
            "displayName": "Format",
            "id": "cdktf.Fn.format",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Format.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.format.parameter.spec",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Format.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.format.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/format.html format} produces a string by formatting a number of other values according to a specification string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Format(spec *string, values *[]interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatdate",
            "displayName": "Formatdate",
            "id": "cdktf.Fn.formatdate",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatdate.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.formatdate.parameter.spec",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatdate.parameter.timestamp",
                "displayName": "timestamp",
                "id": "cdktf.Fn.formatdate.parameter.timestamp",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/formatdate.html formatdate} converts a timestamp into a different time format."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Formatdate(spec *string, timestamp *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatlist",
            "displayName": "Formatlist",
            "id": "cdktf.Fn.formatlist",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatlist.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.formatlist.parameter.spec",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Formatlist.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.formatlist.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/formatlist.html formatlist} produces a list of strings by formatting a number of other values according to a specification string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Formatlist(spec *string, values *[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Indent",
            "displayName": "Indent",
            "id": "cdktf.Fn.indent",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Indent.parameter.indentation",
                "displayName": "indentation",
                "id": "cdktf.Fn.indent.parameter.indentation",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Indent.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.indent.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/indent.html indent} adds a given number of spaces to the beginnings of all but the first line in a given multi-line string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Indent(indentation *f64, value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Index",
            "displayName": "Index",
            "id": "cdktf.Fn.index",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Index.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.index.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Index.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.index.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/index.html index} finds the element index for a given value in a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Index(list interface{}, value interface{}) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Join",
            "displayName": "Join",
            "id": "cdktf.Fn.join",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Join.parameter.separator",
                "displayName": "separator",
                "id": "cdktf.Fn.join.parameter.separator",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Join.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.join.parameter.value",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/join.html join} produces a string by concatenating together all elements of a given list of strings with the given delimiter."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Join(separator *string, value *[]*string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Jsondecode",
            "displayName": "Jsondecode",
            "id": "cdktf.Fn.jsondecode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Jsondecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.jsondecode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/jsondecode.html jsondecode} interprets a given string as JSON, returning a representation of the result of decoding that string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Jsondecode(value *string) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Jsonencode",
            "displayName": "Jsonencode",
            "id": "cdktf.Fn.jsonencode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Jsonencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.jsonencode.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/jsonencode.html jsonencode} encodes a given value to a string using JSON syntax."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Jsonencode(value interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Keys",
            "displayName": "Keys",
            "id": "cdktf.Fn.keys",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Keys.parameter.map",
                "displayName": "map",
                "id": "cdktf.Fn.keys.parameter.map",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/keys.html keys} takes a map and returns a list containing the keys from that map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Keys(map interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.LengthOf",
            "displayName": "LengthOf",
            "id": "cdktf.Fn.lengthOf",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.LengthOf.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lengthOf.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/length.html length} determines the length of a given list, map, or string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_LengthOf(value interface{}) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Log",
            "displayName": "Log",
            "id": "cdktf.Fn.log",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Log.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.log.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Log.parameter.base",
                "displayName": "base",
                "id": "cdktf.Fn.log.parameter.base",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/log.html log} returns the logarithm of a given number in a given base."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Log(value *f64, base *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lookup",
            "displayName": "Lookup",
            "id": "cdktf.Fn.lookup",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lookup.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lookup.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.Fn.lookup.parameter.key",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lookup.parameter.defaultValue",
                "displayName": "defaultValue",
                "id": "cdktf.Fn.lookup.parameter.defaultValue",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/lookup.html lookup} retrieves the value of a single element from a map, given its key. If the given key does not exist, the given default value is returned instead."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Lookup(value interface{}, key interface{}, defaultValue interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lower",
            "displayName": "Lower",
            "id": "cdktf.Fn.lower",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Lower.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lower.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/lower.html lower} converts all cased letters in the given string to lowercase."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Lower(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Matchkeys",
            "displayName": "Matchkeys",
            "id": "cdktf.Fn.matchkeys",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Matchkeys.parameter.valuesList",
                "displayName": "valuesList",
                "id": "cdktf.Fn.matchkeys.parameter.valuesList",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Matchkeys.parameter.keysList",
                "displayName": "keysList",
                "id": "cdktf.Fn.matchkeys.parameter.keysList",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Matchkeys.parameter.searchSet",
                "displayName": "searchSet",
                "id": "cdktf.Fn.matchkeys.parameter.searchSet",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/matchkeys.html matchkeys} constructs a new list by taking a subset of elements from one list whose indexes match the corresponding indexes of values in another list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Matchkeys(valuesList interface{}, keysList interface{}, searchSet interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Max",
            "displayName": "Max",
            "id": "cdktf.Fn.max",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Max.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.max.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/max.html max} takes one or more numbers and returns the greatest number from the set."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Max(values *[]*f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Md5",
            "displayName": "Md5",
            "id": "cdktf.Fn.md5",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Md5.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.md5.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/md5.html md5} computes the MD5 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Md5(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.MergeLists",
            "displayName": "MergeLists",
            "id": "cdktf.Fn.mergeLists",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.MergeLists.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.mergeLists.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/merge.html merge} takes an arbitrary number of maps or objects, and returns a single map or object that contains a merged set of elements from all arguments."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_MergeLists(values *[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.MergeMaps",
            "displayName": "MergeMaps",
            "id": "cdktf.Fn.mergeMaps",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.MergeMaps.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.mergeMaps.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/merge.html merge} takes an arbitrary number of maps or objects, and returns a single map or object that contains a merged set of elements from all arguments."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_MergeMaps(values *[]interface{}) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Min",
            "displayName": "Min",
            "id": "cdktf.Fn.min",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Min.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.min.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/min.html min} takes one or more numbers and returns the smallest number from the set."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Min(values *[]*f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Nonsensitive",
            "displayName": "Nonsensitive",
            "id": "cdktf.Fn.nonsensitive",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Nonsensitive.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.nonsensitive.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/nonsensitive.html nonsensitive} takes a sensitive value and returns a copy of that value with the sensitive marking removed, thereby exposing the sensitive value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Nonsensitive(expression interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.One",
            "displayName": "One",
            "id": "cdktf.Fn.one",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.One.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.one.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/one.html one} takes a list, set, or tuple value with either zero or one elements."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_One(list interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.ParseInt",
            "displayName": "ParseInt",
            "id": "cdktf.Fn.parseInt",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.ParseInt.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.parseInt.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.ParseInt.parameter.base",
                "displayName": "base",
                "id": "cdktf.Fn.parseInt.parameter.base",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/parseint.html parseInt} parses the given string as a representation of an integer in the specified base and returns the resulting number. The base must be between 2 and 62 inclusive."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_ParseInt(value *string, base *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Pathexpand",
            "displayName": "Pathexpand",
            "id": "cdktf.Fn.pathexpand",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Pathexpand.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.pathexpand.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/pathexpand.html pathexpand} takes a string containing a filesystem path and removes the last portion from it."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Pathexpand(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Pow",
            "displayName": "Pow",
            "id": "cdktf.Fn.pow",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Pow.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.pow.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Pow.parameter.power",
                "displayName": "power",
                "id": "cdktf.Fn.pow.parameter.power",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/pow.html pow} calculates an exponent, by raising its first argument to the power of the second argument."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Pow(value *f64, power *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Range",
            "displayName": "Range",
            "id": "cdktf.Fn.range",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Range.parameter.start",
                "displayName": "start",
                "id": "cdktf.Fn.range.parameter.start",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Range.parameter.limit",
                "displayName": "limit",
                "id": "cdktf.Fn.range.parameter.limit",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Range.parameter.step",
                "displayName": "step",
                "id": "cdktf.Fn.range.parameter.step",
                "optional": true,
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/range.html range} generates a list of numbers using a start value, a limit value, and a step value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Range(start *f64, limit *f64, step *f64) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.RawString",
            "displayName": "RawString",
            "id": "cdktf.Fn.rawString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.RawString.parameter.str",
                "displayName": "str",
                "id": "cdktf.Fn.rawString.parameter.str",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Use this function to wrap a string and escape it properly for the use in Terraform This is only needed in certain scenarios (e.g., if you have unescaped double quotes in the string)."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_RawString(str *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regex",
            "displayName": "Regex",
            "id": "cdktf.Fn.regex",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regex.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.regex.parameter.pattern",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regex.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.regex.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/regex.html regex} applies a regular expression to a string and returns the matching substrings in pattern."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Regex(pattern *string, value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regexall",
            "displayName": "Regexall",
            "id": "cdktf.Fn.regexall",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regexall.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.regexall.parameter.pattern",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Regexall.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.regexall.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/regexall.html regexall} applies a regular expression to a string and returns a list of all matches."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Regexall(pattern *string, value *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Replace",
            "displayName": "Replace",
            "id": "cdktf.Fn.replace",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Replace.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.replace.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Replace.parameter.substring",
                "displayName": "substring",
                "id": "cdktf.Fn.replace.parameter.substring",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Replace.parameter.replacement",
                "displayName": "replacement",
                "id": "cdktf.Fn.replace.parameter.replacement",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/replace.html replace} searches a given string for another given substring, and replaces each occurrence with a given replacement string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Replace(value *string, substring *string, replacement *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Reverse",
            "displayName": "Reverse",
            "id": "cdktf.Fn.reverse",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Reverse.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.reverse.parameter.values",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/reverse.html reverse} takes a sequence and produces a new sequence of the same length with all of the same elements as the given sequence but in reverse order."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Reverse(values interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Rsadecrypt",
            "displayName": "Rsadecrypt",
            "id": "cdktf.Fn.rsadecrypt",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Rsadecrypt.parameter.ciphertext",
                "displayName": "ciphertext",
                "id": "cdktf.Fn.rsadecrypt.parameter.ciphertext",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Rsadecrypt.parameter.privatekey",
                "displayName": "privatekey",
                "id": "cdktf.Fn.rsadecrypt.parameter.privatekey",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/rsadecrypt.html rsadecrypt} decrypts an RSA-encrypted ciphertext, returning the corresponding cleartext."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Rsadecrypt(ciphertext *string, privatekey *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sensitive",
            "displayName": "Sensitive",
            "id": "cdktf.Fn.sensitive",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sensitive.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.sensitive.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sensitive.html sensitive} takes any value and returns a copy of it marked so that Terraform will treat it as sensitive, with the same meaning and behavior as for sensitive input variables."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sensitive(expression interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setintersection",
            "displayName": "Setintersection",
            "id": "cdktf.Fn.setintersection",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setintersection.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setintersection.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setintersection.html setintersection} function takes multiple sets and produces a single set containing only the elements that all of the given sets have in common."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Setintersection(values *[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setproduct",
            "displayName": "Setproduct",
            "id": "cdktf.Fn.setproduct",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setproduct.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setproduct.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setproduct.html setproduct} function finds all of the possible combinations of elements from all of the given sets by computing the Cartesian product."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Setproduct(values *[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setsubtract",
            "displayName": "Setsubtract",
            "id": "cdktf.Fn.setsubtract",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setsubtract.parameter.minuend",
                "displayName": "minuend",
                "id": "cdktf.Fn.setsubtract.parameter.minuend",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setsubtract.parameter.subtrahend",
                "displayName": "subtrahend",
                "id": "cdktf.Fn.setsubtract.parameter.subtrahend",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/slice.html setsubtract} function returns a new set containing the elements from the first set that are not present in the second set."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Setsubtract(minuend interface{}, subtrahend interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setunion",
            "displayName": "Setunion",
            "id": "cdktf.Fn.setunion",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Setunion.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setunion.parameter.values",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setunion.html setunion} function takes multiple sets and produces a single set containing the elements from all of the given sets."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Setunion(values *[]interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha1",
            "displayName": "Sha1",
            "id": "cdktf.Fn.sha1",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha1.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha1.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha1.html sha1} computes the SHA1 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sha1(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha256",
            "displayName": "Sha256",
            "id": "cdktf.Fn.sha256",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha256.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha256.html sha256} computes the SHA256 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sha256(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha512",
            "displayName": "Sha512",
            "id": "cdktf.Fn.sha512",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha512.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha512.html sha512} computes the SHA512 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sha512(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Signum",
            "displayName": "Signum",
            "id": "cdktf.Fn.signum",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Signum.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.signum.parameter.value",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/signum.html signum} determines the sign of a number, returning a number between -1 and 1 to represent the sign."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Signum(value *f64) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Slice",
            "displayName": "Slice",
            "id": "cdktf.Fn.slice",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Slice.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.slice.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Slice.parameter.startindex",
                "displayName": "startindex",
                "id": "cdktf.Fn.slice.parameter.startindex",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Slice.parameter.endindex",
                "displayName": "endindex",
                "id": "cdktf.Fn.slice.parameter.endindex",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/slice.html slice} extracts some consecutive elements from within a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Slice(list interface{}, startindex *f64, endindex *f64) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sort",
            "displayName": "Sort",
            "id": "cdktf.Fn.sort",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sort.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.sort.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sort.html sort} takes a list of strings and returns a new list with those strings sorted lexicographically."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sort(list interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Split",
            "displayName": "Split",
            "id": "cdktf.Fn.split",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Split.parameter.seperator",
                "displayName": "seperator",
                "id": "cdktf.Fn.split.parameter.seperator",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Split.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.split.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/split.html split} produces a list by dividing a given string at all occurrences of a given separator."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Split(seperator *string, value *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Strrev",
            "displayName": "Strrev",
            "id": "cdktf.Fn.strrev",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Strrev.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.strrev.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/strrev.html strrev} reverses the characters in a string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Strrev(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Substr",
            "displayName": "Substr",
            "id": "cdktf.Fn.substr",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Substr.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.substr.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Substr.parameter.offset",
                "displayName": "offset",
                "id": "cdktf.Fn.substr.parameter.offset",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Substr.parameter.length",
                "displayName": "length",
                "id": "cdktf.Fn.substr.parameter.length",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/substr.html substr} extracts a substring from a given string by offset and length."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Substr(value *string, offset *f64, length *f64) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sum",
            "displayName": "Sum",
            "id": "cdktf.Fn.sum",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Sum.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.sum.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sum.html sum} takes a list or set of numbers and returns the sum of those numbers."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Sum(list interface{}) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Templatefile",
            "displayName": "Templatefile",
            "id": "cdktf.Fn.templatefile",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Templatefile.parameter.path",
                "displayName": "path",
                "id": "cdktf.Fn.templatefile.parameter.path",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Templatefile.parameter.vars",
                "displayName": "vars",
                "id": "cdktf.Fn.templatefile.parameter.vars",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/templatefile.html templatefile} reads the file at the given path and renders its content as a template using a supplied set of template variables."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Templatefile(path *string, vars interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textdecodebase64",
            "displayName": "Textdecodebase64",
            "id": "cdktf.Fn.textdecodebase64",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textdecodebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.textdecodebase64.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textdecodebase64.parameter.encodingName",
                "displayName": "encodingName",
                "id": "cdktf.Fn.textdecodebase64.parameter.encodingName",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/textdecodebase64.html textdecodebase64} function decodes a string that was previously Base64-encoded, and then interprets the result as characters in a specified character encoding."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Textdecodebase64(value *string, encodingName *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textencodebase64",
            "displayName": "Textencodebase64",
            "id": "cdktf.Fn.textencodebase64",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textencodebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.textencodebase64.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Textencodebase64.parameter.encodingName",
                "displayName": "encodingName",
                "id": "cdktf.Fn.textencodebase64.parameter.encodingName",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/textencodebase64.html textencodebase64}  encodes the unicode characters in a given string using a specified character encoding, returning the result base64 encoded because Terraform language strings are always sequences of unicode characters."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Textencodebase64(value *string, encodingName *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Timeadd",
            "displayName": "Timeadd",
            "id": "cdktf.Fn.timeadd",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Timeadd.parameter.timestamp",
                "displayName": "timestamp",
                "id": "cdktf.Fn.timeadd.parameter.timestamp",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Timeadd.parameter.duration",
                "displayName": "duration",
                "id": "cdktf.Fn.timeadd.parameter.duration",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/timeadd.html timeadd} adds a duration to a timestamp, returning a new timestamp."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Timeadd(timestamp *string, duration *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Timestamp",
            "displayName": "Timestamp",
            "id": "cdktf.Fn.timestamp",
            "parameters": [],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/timestamp.html timestamp} returns a UTC timestamp string in RFC 3339 format."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Timestamp() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Title",
            "displayName": "Title",
            "id": "cdktf.Fn.title",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Title.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.title.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/title.html title} converts the first letter of each word in the given string to uppercase."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Title(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tobool",
            "displayName": "Tobool",
            "id": "cdktf.Fn.tobool",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tobool.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tobool.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tobool.html tobool} converts its argument to a boolean value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Tobool(expression interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tolist",
            "displayName": "Tolist",
            "id": "cdktf.Fn.tolist",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tolist.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tolist.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tolist.html tolist} converts its argument to a list value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Tolist(expression interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tomap",
            "displayName": "Tomap",
            "id": "cdktf.Fn.tomap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tomap.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tomap.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tomap.html tomap} converts its argument to a map value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Tomap(expression interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tonumber",
            "displayName": "Tonumber",
            "id": "cdktf.Fn.tonumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tonumber.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tonumber.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tonumber.html tonumber} converts its argument to a number value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Tonumber(expression interface{}) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Toset",
            "displayName": "Toset",
            "id": "cdktf.Fn.toset",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Toset.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.toset.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/toset.html toset} converts its argument to a set value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Toset(expression interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tostring",
            "displayName": "Tostring",
            "id": "cdktf.Fn.tostring",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Tostring.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tostring.parameter.expression",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tostring.html tostring} converts its argument to a string value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Tostring(expression interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Transpose",
            "displayName": "Transpose",
            "id": "cdktf.Fn.transpose",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Transpose.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.transpose.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/transpose.html transpose} takes a map of lists of strings and swaps the keys and values to produce a new map of lists of strings."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Transpose(value interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trim",
            "displayName": "Trim",
            "id": "cdktf.Fn.trim",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trim.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trim.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trim.parameter.replacement",
                "displayName": "replacement",
                "id": "cdktf.Fn.trim.parameter.replacement",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trim.html trim} removes the specified characters from the start and end of the given string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Trim(value *string, replacement *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimprefix",
            "displayName": "Trimprefix",
            "id": "cdktf.Fn.trimprefix",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimprefix.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimprefix.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimprefix.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.trimprefix.parameter.prefix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimprefix.html trimprefix} removes the specified prefix from the start of the given string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Trimprefix(value *string, prefix *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimspace",
            "displayName": "Trimspace",
            "id": "cdktf.Fn.trimspace",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimspace.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimspace.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimspace.html trimspace} removes any space characters from the start and end of the given string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Trimspace(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimsuffix",
            "displayName": "Trimsuffix",
            "id": "cdktf.Fn.trimsuffix",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimsuffix.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimsuffix.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Trimsuffix.parameter.suffix",
                "displayName": "suffix",
                "id": "cdktf.Fn.trimsuffix.parameter.suffix",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimsuffix.html trimsuffix} removes the specified suffix from the end of the given string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Trimsuffix(value *string, suffix *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Try",
            "displayName": "Try",
            "id": "cdktf.Fn.try",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Try.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.try.parameter.expression",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/try.html try} evaluates all of its argument expressions in turn and returns the result of the first one that does not produce any errors."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Try(expression *[]interface{}) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Upper",
            "displayName": "Upper",
            "id": "cdktf.Fn.upper",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Upper.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.upper.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/upper.html upper} converts all cased letters in the given string to uppercase."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Upper(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Urlencode",
            "displayName": "Urlencode",
            "id": "cdktf.Fn.urlencode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Urlencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.urlencode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/urlencode.html urlencode} applies URL encoding to a given string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Urlencode(value *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Uuid",
            "displayName": "Uuid",
            "id": "cdktf.Fn.uuid",
            "parameters": [],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/uuid.html uuid} generates a unique identifier string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Uuid() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Uuidv5",
            "displayName": "Uuidv5",
            "id": "cdktf.Fn.uuidv5",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Uuidv5.parameter.namespace",
                "displayName": "namespace",
                "id": "cdktf.Fn.uuidv5.parameter.namespace",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Uuidv5.parameter.name",
                "displayName": "name",
                "id": "cdktf.Fn.uuidv5.parameter.name",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/uuidv5.html uuidv5} generates a unique identifier string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Uuidv5(namespace *string, name *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Values",
            "displayName": "Values",
            "id": "cdktf.Fn.values",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Values.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.values.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/values.html values} takes a map and returns a list containing the values of the elements in that map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Values(value interface{}) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Yamldecode",
            "displayName": "Yamldecode",
            "id": "cdktf.Fn.yamldecode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Yamldecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.yamldecode.parameter.value",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/yamldecode.html yamldecode} parses a string as a subset of YAML, and produces a representation of its value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Yamldecode(value *string) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Yamlencode",
            "displayName": "Yamlencode",
            "id": "cdktf.Fn.yamlencode",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Yamlencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.yamlencode.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/yamlencode.html yamlencode} encodes a given value to a string using JSON syntax."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Yamlencode(value interface{}) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Zipmap",
            "displayName": "Zipmap",
            "id": "cdktf.Fn.zipmap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Zipmap.parameter.keyslist",
                "displayName": "keyslist",
                "id": "cdktf.Fn.zipmap.parameter.keyslist",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn.Zipmap.parameter.valueslist",
                "displayName": "valueslist",
                "id": "cdktf.Fn.zipmap.parameter.valueslist",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/zipmap.html zipmap} constructs a map from a list of keys and a corresponding list of values."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Fn_Zipmap(keyslist interface{}, valueslist interface{}) interface{}"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Fn",
        "displayName": "Fn",
        "id": "cdktf.Fn",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Lazy.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewLazy() Lazy"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.AnyValue",
            "displayName": "AnyValue",
            "id": "cdktf.Lazy.anyValue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.AnyValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.anyValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAnyProducer",
                      "displayName": "IAnyProducer",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAnyProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The lazy producer."
                }
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.AnyValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.anyValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyAnyValueOptions",
                      "displayName": "LazyAnyValueOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyAnyValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Produces a lazy token from an untyped value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Lazy_AnyValue(producer IAnyProducer, options LazyAnyValueOptions) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.ListValue",
            "displayName": "ListValue",
            "id": "cdktf.Lazy.listValue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.ListValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.listValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IListProducer",
                      "displayName": "IListProducer",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IListProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.ListValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.listValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyListValueOptions",
                      "displayName": "LazyListValueOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyListValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Returns a list-ified token for a lazy value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Lazy_ListValue(producer IListProducer, options LazyListValueOptions) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.NumberValue",
            "displayName": "NumberValue",
            "id": "cdktf.Lazy.numberValue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.NumberValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.numberValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.INumberProducer",
                      "displayName": "INumberProducer",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.INumberProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              }
            ],
            "docs": {
              "summary": "Returns a numberified token for a lazy value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Lazy_NumberValue(producer INumberProducer) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.StringValue",
            "displayName": "StringValue",
            "id": "cdktf.Lazy.stringValue",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.StringValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.stringValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IStringProducer",
                      "displayName": "IStringProducer",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStringProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy.StringValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.stringValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyStringValueOptions",
                      "displayName": "LazyStringValueOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyStringValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Returns a stringified token for a lazy value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Lazy_StringValue(producer IStringProducer, options LazyStringValueOptions) *string"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Lazy",
        "displayName": "Lazy",
        "id": "cdktf.Lazy",
        "docs": {
          "summary": "Lazily produce a value.",
          "remarks": "Can be used to return a string, list or numeric value whose actual value\nwill only be calculated later, during synthesis."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.LazyBase.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewLazyBase() LazyBase"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.AddPostProcessor",
            "displayName": "AddPostProcessor",
            "id": "cdktf.LazyBase.addPostProcessor",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.AddPostProcessor.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.LazyBase.addPostProcessor.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func AddPostProcessor(postProcessor IPostProcessor)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.LazyBase.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.Resolve.parameter.context",
                "displayName": "context",
                "id": "cdktf.LazyBase.resolve.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.ToJSON",
            "displayName": "ToJSON",
            "id": "cdktf.LazyBase.toJSON",
            "parameters": [],
            "docs": {
              "summary": "Turn this Token into JSON.",
              "remarks": "Called automatically when JSON.stringify() is called on a Token."
            },
            "usage": "func ToJSON() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.ToString",
            "displayName": "ToString",
            "id": "cdktf.LazyBase.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.LazyBase.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase",
        "displayName": "LazyBase",
        "id": "cdktf.LazyBase",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ListTerraformIterator.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.Initializer.parameter.list",
              "displayName": "list",
              "id": "cdktf.ListTerraformIterator.Initializer.parameter.list",
              "type": {
                "formattingPattern": "interface{}",
                "types": [
                  {
                    "formattingPattern": "*[]%",
                    "types": [
                      {
                        "formattingPattern": "*string"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.IResolvable",
                        "displayName": "IResolvable",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "*[]%",
                    "types": [
                      {
                        "formattingPattern": "*f64"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ComplexList",
                        "displayName": "ComplexList",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.StringMapList",
                        "displayName": "StringMapList",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.NumberMapList",
                        "displayName": "NumberMapList",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.BooleanMapList",
                        "displayName": "BooleanMapList",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.AnyMapList",
                        "displayName": "AnyMapList",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "*[]%",
                    "types": [
                      {
                        "formattingPattern": "interface{}",
                        "types": [
                          {
                            "formattingPattern": "*bool"
                          },
                          {
                            "formattingPattern": "%",
                            "types": [
                              {
                                "id": "cdktf.IResolvable",
                                "displayName": "IResolvable",
                                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                                "packageName": "cdktf",
                                "packageVersion": "0.0.0"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewListTerraformIterator(list interface{}) ListTerraformIterator"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.Dynamic",
            "displayName": "Dynamic",
            "id": "cdktf.ListTerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.Dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.ListTerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Dynamic(attributes *map[string]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetAny",
            "displayName": "GetAny",
            "id": "cdktf.ListTerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAny(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetAnyMap",
            "displayName": "GetAnyMap",
            "id": "cdktf.ListTerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAnyMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.ListTerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetBooleanMap",
            "displayName": "GetBooleanMap",
            "id": "cdktf.ListTerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMap(attribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetList",
            "displayName": "GetList",
            "id": "cdktf.ListTerraformIterator.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetList(attribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetMap",
            "displayName": "GetMap",
            "id": "cdktf.ListTerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.ListTerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumber(attribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumberList",
            "displayName": "GetNumberList",
            "id": "cdktf.ListTerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberList(attribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumberMap",
            "displayName": "GetNumberMap",
            "id": "cdktf.ListTerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberMap(attribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetString",
            "displayName": "GetString",
            "id": "cdktf.ListTerraformIterator.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetString(attribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetStringMap",
            "displayName": "GetStringMap",
            "id": "cdktf.ListTerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.GetStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetStringMap(attribute *string) *map[string]*string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.FromList",
            "displayName": "FromList",
            "id": "cdktf.ListTerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.FromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.ListTerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}",
                          "types": [
                            {
                              "formattingPattern": "*bool"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ListTerraformIterator_FromList(list interface{}) ListTerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.FromMap",
            "displayName": "FromMap",
            "id": "cdktf.ListTerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.FromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.ListTerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*bool"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.ListTerraformIterator_FromMap(map interface{}) MapTerraformIterator"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.property.Key",
            "displayName": "Key",
            "id": "cdktf.ListTerraformIterator.property.key",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {
              "summary": "Returns the currenty entry in the list or set that is being iterated over.",
              "remarks": "For lists this is the same as `iterator.value`. If you need the index,\nuse count using the escape hatch:\nhttps://www.terraform.io/cdktf/concepts/resources#escape-hatch"
            },
            "usage": "func Key() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator.property.Value",
            "displayName": "Value",
            "id": "cdktf.ListTerraformIterator.property.value",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {
              "summary": "Returns the value of the current item iterated over."
            },
            "usage": "func Value() interface{}"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator",
        "displayName": "ListTerraformIterator",
        "id": "cdktf.ListTerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Manifest.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.Initializer.parameter.version",
              "displayName": "version",
              "id": "cdktf.Manifest.Initializer.parameter.version",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.Initializer.parameter.outdir",
              "displayName": "outdir",
              "id": "cdktf.Manifest.Initializer.parameter.outdir",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewManifest(version *string, outdir *string) Manifest"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IManifest",
            "displayName": "IManifest",
            "id": "cdktf.IManifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.BuildManifest",
            "displayName": "BuildManifest",
            "id": "cdktf.Manifest.buildManifest",
            "parameters": [],
            "docs": {},
            "usage": "func BuildManifest() IManifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.ForStack",
            "displayName": "ForStack",
            "id": "cdktf.Manifest.forStack",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.ForStack.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Manifest.forStack.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func ForStack(stack TerraformStack) StackManifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.WriteToFile",
            "displayName": "WriteToFile",
            "id": "cdktf.Manifest.writeToFile",
            "parameters": [],
            "docs": {},
            "usage": "func WriteToFile()"
          }
        ],
        "staticMethods": [],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.FileName",
            "displayName": "FileName",
            "id": "cdktf.Manifest.property.fileName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FileName() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.StackFileName",
            "displayName": "StackFileName",
            "id": "cdktf.Manifest.property.stackFileName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func StackFileName() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.StacksFolder",
            "displayName": "StacksFolder",
            "id": "cdktf.Manifest.property.stacksFolder",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func StacksFolder() *string",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.Outdir",
            "displayName": "Outdir",
            "id": "cdktf.Manifest.property.outdir",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Outdir() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.Stacks",
            "displayName": "Stacks",
            "id": "cdktf.Manifest.property.stacks",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackManifest",
                      "displayName": "StackManifest",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Stacks() *map[string]StackManifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest.property.Version",
            "displayName": "Version",
            "id": "cdktf.Manifest.property.version",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Version() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest",
        "displayName": "Manifest",
        "id": "cdktf.Manifest",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.MapTerraformIterator.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.Initializer.parameter.map",
              "displayName": "map",
              "id": "cdktf.MapTerraformIterator.Initializer.parameter.map",
              "type": {
                "formattingPattern": "interface{}",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.StringMap",
                        "displayName": "StringMap",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.NumberMap",
                        "displayName": "NumberMap",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.BooleanMap",
                        "displayName": "BooleanMap",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.AnyMap",
                        "displayName": "AnyMap",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ComplexMap",
                        "displayName": "ComplexMap",
                        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "*map[string]%",
                    "types": [
                      {
                        "formattingPattern": "interface{}"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "*map[string]%",
                    "types": [
                      {
                        "formattingPattern": "*string"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "*map[string]%",
                    "types": [
                      {
                        "formattingPattern": "*f64"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewMapTerraformIterator(map interface{}) MapTerraformIterator"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.Dynamic",
            "displayName": "Dynamic",
            "id": "cdktf.MapTerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.Dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.MapTerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Dynamic(attributes *map[string]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetAny",
            "displayName": "GetAny",
            "id": "cdktf.MapTerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAny(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetAnyMap",
            "displayName": "GetAnyMap",
            "id": "cdktf.MapTerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAnyMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.MapTerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetBooleanMap",
            "displayName": "GetBooleanMap",
            "id": "cdktf.MapTerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMap(attribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetList",
            "displayName": "GetList",
            "id": "cdktf.MapTerraformIterator.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetList(attribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetMap",
            "displayName": "GetMap",
            "id": "cdktf.MapTerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.MapTerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumber(attribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumberList",
            "displayName": "GetNumberList",
            "id": "cdktf.MapTerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberList(attribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumberMap",
            "displayName": "GetNumberMap",
            "id": "cdktf.MapTerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberMap(attribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetString",
            "displayName": "GetString",
            "id": "cdktf.MapTerraformIterator.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetString(attribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetStringMap",
            "displayName": "GetStringMap",
            "id": "cdktf.MapTerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.GetStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetStringMap(attribute *string) *map[string]*string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.FromList",
            "displayName": "FromList",
            "id": "cdktf.MapTerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.FromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.MapTerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}",
                          "types": [
                            {
                              "formattingPattern": "*bool"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.MapTerraformIterator_FromList(list interface{}) ListTerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.FromMap",
            "displayName": "FromMap",
            "id": "cdktf.MapTerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.FromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.MapTerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*bool"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.MapTerraformIterator_FromMap(map interface{}) MapTerraformIterator"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.property.Key",
            "displayName": "Key",
            "id": "cdktf.MapTerraformIterator.property.key",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Returns the key of the current entry in the map that is being iterated over."
            },
            "usage": "func Key() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator.property.Value",
            "displayName": "Value",
            "id": "cdktf.MapTerraformIterator.property.value",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {
              "summary": "Returns the value of the current item iterated over."
            },
            "usage": "func Value() interface{}"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator",
        "displayName": "MapTerraformIterator",
        "id": "cdktf.MapTerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NamedCloudWorkspace.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.NamedCloudWorkspace.Initializer.parameter.name",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewNamedCloudWorkspace(name *string) NamedCloudWorkspace"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.NamedCloudWorkspace.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace.property.Name",
            "displayName": "Name",
            "id": "cdktf.NamedCloudWorkspace.property.name",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Name() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace",
        "displayName": "NamedCloudWorkspace",
        "id": "cdktf.NamedCloudWorkspace",
        "docs": {
          "summary": "The name of a single Terraform Cloud workspace.",
          "remarks": "You will only be able to use the workspace specified in the configuration with this working directory, and cannot manage workspaces from the CLI (e.g. terraform workspace select or terraform workspace new)."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedRemoteWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NamedRemoteWorkspace.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedRemoteWorkspace.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.NamedRemoteWorkspace.Initializer.parameter.name",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewNamedRemoteWorkspace(name *string) NamedRemoteWorkspace"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedRemoteWorkspace.property.Name",
            "displayName": "Name",
            "id": "cdktf.NamedRemoteWorkspace.property.name",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Name() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedRemoteWorkspace",
        "displayName": "NamedRemoteWorkspace",
        "id": "cdktf.NamedRemoteWorkspace",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NumberMap.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.NumberMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.NumberMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewNumberMap(terraformResource IInterpolatingParent, terraformAttribute *string) NumberMap"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.NumberMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Lookup",
            "displayName": "Lookup",
            "id": "cdktf.NumberMap.lookup",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.NumberMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Lookup(key *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.NumberMap.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.NumberMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.ToString",
            "displayName": "ToString",
            "id": "cdktf.NumberMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.NumberMap.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.NumberMap.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap",
        "displayName": "NumberMap",
        "id": "cdktf.NumberMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NumberMapList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.NumberMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.NumberMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.NumberMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewNumberMapList(terraformResource IInterpolatingParent, terraformAttribute *string, wrapsSet *bool) NumberMapList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.NumberMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Get",
            "displayName": "Get",
            "id": "cdktf.NumberMapList.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Get.parameter.index",
                "displayName": "index",
                "id": "cdktf.NumberMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(index *f64) NumberMap"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.NumberMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.NumberMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.NumberMapList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.NumberMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.ToString",
            "displayName": "ToString",
            "id": "cdktf.NumberMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.NumberMapList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.NumberMapList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
        "displayName": "NumberMapList",
        "id": "cdktf.NumberMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PrefixedRemoteWorkspaces.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.PrefixedRemoteWorkspaces.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PrefixedRemoteWorkspaces.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.PrefixedRemoteWorkspaces.Initializer.parameter.prefix",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewPrefixedRemoteWorkspaces(prefix *string) PrefixedRemoteWorkspaces"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PrefixedRemoteWorkspaces.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.PrefixedRemoteWorkspaces.property.prefix",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Prefix() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PrefixedRemoteWorkspaces",
        "displayName": "PrefixedRemoteWorkspaces",
        "id": "cdktf.PrefixedRemoteWorkspaces",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringConcat.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewStringConcat() StringConcat"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator",
            "displayName": "IFragmentConcatenator",
            "id": "cdktf.IFragmentConcatenator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat.Join",
            "displayName": "Join",
            "id": "cdktf.StringConcat.join",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat.Join.parameter.left",
                "displayName": "left",
                "id": "cdktf.StringConcat.join.parameter.left",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat.Join.parameter.right",
                "displayName": "right",
                "id": "cdktf.StringConcat.join.parameter.right",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Concatenates string fragments."
            },
            "usage": "func Join(left interface{}, right interface{}) interface{}"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat",
        "displayName": "StringConcat",
        "id": "cdktf.StringConcat",
        "docs": {
          "summary": "Converts all fragments to strings and concats those.",
          "remarks": "Drops 'undefined's."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringMap.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.StringMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.StringMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewStringMap(terraformResource IInterpolatingParent, terraformAttribute *string) StringMap"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.StringMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Lookup",
            "displayName": "Lookup",
            "id": "cdktf.StringMap.lookup",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.StringMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Lookup(key *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.StringMap.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.StringMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.ToString",
            "displayName": "ToString",
            "id": "cdktf.StringMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.StringMap.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.StringMap.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap",
        "displayName": "StringMap",
        "id": "cdktf.StringMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringMapList.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.StringMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.StringMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "*string"
              },
              "docs": {}
            },
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.StringMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "*bool"
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewStringMapList(terraformResource IInterpolatingParent, terraformAttribute *string, wrapsSet *bool) StringMapList"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.ComputeFqn",
            "displayName": "ComputeFqn",
            "id": "cdktf.StringMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "func ComputeFqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Get",
            "displayName": "Get",
            "id": "cdktf.StringMapList.get",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Get.parameter.index",
                "displayName": "index",
                "id": "cdktf.StringMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Get(index *f64) StringMap"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.StringMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.InterpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.StringMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(property *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.StringMapList.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.Resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.StringMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(_context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.ToString",
            "displayName": "ToString",
            "id": "cdktf.StringMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.StringMapList.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.StringMapList.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
        "displayName": "StringMapList",
        "id": "cdktf.StringMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TaggedCloudWorkspaces.Initializer",
          "parameters": [
            {
              "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces.Initializer.parameter.tags",
              "displayName": "tags",
              "id": "cdktf.TaggedCloudWorkspaces.Initializer.parameter.tags",
              "type": {
                "formattingPattern": "*[]%",
                "types": [
                  {
                    "formattingPattern": "*string"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTaggedCloudWorkspaces(tags *[]*string) TaggedCloudWorkspaces"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces.ToTerraform",
            "displayName": "ToTerraform",
            "id": "cdktf.TaggedCloudWorkspaces.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "func ToTerraform() interface{}"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces.property.Tags",
            "displayName": "Tags",
            "id": "cdktf.TaggedCloudWorkspaces.property.tags",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func Tags() *[]*string"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces",
        "displayName": "TaggedCloudWorkspaces",
        "id": "cdktf.TaggedCloudWorkspaces",
        "docs": {
          "summary": "A set of Terraform Cloud workspace tags.",
          "remarks": "You will be able to use this working directory with any workspaces that have all of the specified tags, and can use the terraform workspace commands to switch between them or create new workspaces. New workspaces will automatically have the specified tags. This option conflicts with name."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformIterator.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformIterator() TerraformIterator"
        },
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
            "displayName": "ITerraformIterator",
            "id": "cdktf.ITerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.Dynamic",
            "displayName": "Dynamic",
            "id": "cdktf.TerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.Dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.TerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func Dynamic(attributes *map[string]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetAny",
            "displayName": "GetAny",
            "id": "cdktf.TerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAny(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetAnyMap",
            "displayName": "GetAnyMap",
            "id": "cdktf.TerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetAnyMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetBoolean",
            "displayName": "GetBoolean",
            "id": "cdktf.TerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBoolean(attribute *string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetBooleanMap",
            "displayName": "GetBooleanMap",
            "id": "cdktf.TerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetBooleanMap(attribute *string) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetList",
            "displayName": "GetList",
            "id": "cdktf.TerraformIterator.getList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetList(attribute *string) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetMap",
            "displayName": "GetMap",
            "id": "cdktf.TerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetMap(attribute *string) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.TerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumber(attribute *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumberList",
            "displayName": "GetNumberList",
            "id": "cdktf.TerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberList(attribute *string) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumberMap",
            "displayName": "GetNumberMap",
            "id": "cdktf.TerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetNumberMap(attribute *string) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetString",
            "displayName": "GetString",
            "id": "cdktf.TerraformIterator.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetString(attribute *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetStringMap",
            "displayName": "GetStringMap",
            "id": "cdktf.TerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.GetStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "func GetStringMap(attribute *string) *map[string]*string"
          }
        ],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.FromList",
            "displayName": "FromList",
            "id": "cdktf.TerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.FromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.TerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*[]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}",
                          "types": [
                            {
                              "formattingPattern": "*bool"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformIterator_FromList(list interface{}) ListTerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.FromMap",
            "displayName": "FromMap",
            "id": "cdktf.TerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator.FromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.TerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "interface{}"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*string"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*f64"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "*map[string]%",
                      "types": [
                        {
                          "formattingPattern": "*bool"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformIterator_FromMap(map interface{}) MapTerraformIterator"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator",
        "displayName": "TerraformIterator",
        "id": "cdktf.TerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformSelf.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTerraformSelf() TerraformSelf"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetAny",
            "displayName": "GetAny",
            "id": "cdktf.TerraformSelf.getAny",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetAny.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getAny.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getAny(\"hostPort\")`"
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformSelf_GetAny(key *string) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetNumber",
            "displayName": "GetNumber",
            "id": "cdktf.TerraformSelf.getNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetNumber.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getNumber.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getNumber(\"hostPort\")`"
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformSelf_GetNumber(key *string) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetString",
            "displayName": "GetString",
            "id": "cdktf.TerraformSelf.getString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf.GetString.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getString.parameter.key",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getString(\"publicIp\")`"
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.TerraformSelf_GetString(key *string) *string"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformSelf",
        "displayName": "TerraformSelf",
        "id": "cdktf.TerraformSelf",
        "docs": {
          "summary": "Expressions in connection blocks cannot refer to their parent resource by name.",
          "remarks": "References create dependencies, and referring to a resource by name within its own block would create a dependency cycle.\nInstead, expressions can use the self object, which represents the connection's parent resource and has all of that resource's attributes.\nFor example, use self.public_ip to reference an aws_instance's public_ip attribute."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Testing.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTesting() Testing"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.App",
            "displayName": "App",
            "id": "cdktf.Testing.app",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.App.parameter.options",
                "displayName": "options",
                "id": "cdktf.Testing.app.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TestingAppOptions",
                      "displayName": "TestingAppOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Returns an app for testing with the following properties: - Output directory is a temp dir."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_App(options TestingAppOptions) App"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.EnableFutureFlags",
            "displayName": "EnableFutureFlags",
            "id": "cdktf.Testing.enableFutureFlags",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.EnableFutureFlags.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.enableFutureFlags.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_EnableFutureFlags(app App) App"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.FakeCdktfJsonPath",
            "displayName": "FakeCdktfJsonPath",
            "id": "cdktf.Testing.fakeCdktfJsonPath",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.FakeCdktfJsonPath.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.fakeCdktfJsonPath.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_FakeCdktfJsonPath(app App) App"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.FullSynth",
            "displayName": "FullSynth",
            "id": "cdktf.Testing.fullSynth",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.FullSynth.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Testing.fullSynth.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_FullSynth(stack TerraformStack) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.RenderConstructTree",
            "displayName": "RenderConstructTree",
            "id": "cdktf.Testing.renderConstructTree",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.RenderConstructTree.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.Testing.renderConstructTree.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_RenderConstructTree(construct IConstruct) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.SetupJest",
            "displayName": "SetupJest",
            "id": "cdktf.Testing.setupJest",
            "parameters": [],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_SetupJest()"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.StubVersion",
            "displayName": "StubVersion",
            "id": "cdktf.Testing.stubVersion",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.StubVersion.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.stubVersion.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_StubVersion(app App) App"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.Synth",
            "displayName": "Synth",
            "id": "cdktf.Testing.synth",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.Synth.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Testing.synth.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.Synth.parameter.runValidations",
                "displayName": "runValidations",
                "id": "cdktf.Testing.synth.parameter.runValidations",
                "optional": true,
                "type": {
                  "formattingPattern": "*bool"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Returns the Terraform synthesized JSON."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_Synth(stack TerraformStack, runValidations *bool) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.SynthScope",
            "displayName": "SynthScope",
            "id": "cdktf.Testing.synthScope",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.SynthScope.parameter.fn",
                "displayName": "fn",
                "id": "cdktf.Testing.synthScope.parameter.fn",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IScopeCallback",
                      "displayName": "IScopeCallback",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IScopeCallback",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_SynthScope(fn IScopeCallback) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToBeValidTerraform",
            "displayName": "ToBeValidTerraform",
            "id": "cdktf.Testing.toBeValidTerraform",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToBeValidTerraform.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toBeValidTerraform.parameter.received",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_ToBeValidTerraform(received *string) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSource",
            "displayName": "ToHaveDataSource",
            "id": "cdktf.Testing.toHaveDataSource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSource.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveDataSource.parameter.received",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSource.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveDataSource.parameter.resourceType",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_ToHaveDataSource(received *string, resourceType *string) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSourceWithProperties",
            "displayName": "ToHaveDataSourceWithProperties",
            "id": "cdktf.Testing.toHaveDataSourceWithProperties",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSourceWithProperties.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.received",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSourceWithProperties.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.resourceType",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveDataSourceWithProperties.parameter.properties",
                "displayName": "properties",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.properties",
                "optional": true,
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_ToHaveDataSourceWithProperties(received *string, resourceType *string, properties *map[string]interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResource",
            "displayName": "ToHaveResource",
            "id": "cdktf.Testing.toHaveResource",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResource.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveResource.parameter.received",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResource.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveResource.parameter.resourceType",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_ToHaveResource(received *string, resourceType *string) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResourceWithProperties",
            "displayName": "ToHaveResourceWithProperties",
            "id": "cdktf.Testing.toHaveResourceWithProperties",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResourceWithProperties.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.received",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResourceWithProperties.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.resourceType",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing.ToHaveResourceWithProperties.parameter.properties",
                "displayName": "properties",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.properties",
                "optional": true,
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Testing_ToHaveResourceWithProperties(received *string, resourceType *string, properties *map[string]interface{}) *bool"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Testing",
        "displayName": "Testing",
        "id": "cdktf.Testing",
        "docs": {
          "summary": "Testing utilities for cdktf applications."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Token.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewToken() Token"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsAny",
            "displayName": "AsAny",
            "id": "cdktf.Token.asAny",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsAny.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asAny.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a resolvable representation of the given value."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsAny(value interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsAnyMap",
            "displayName": "AsAnyMap",
            "id": "cdktf.Token.asAnyMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsAnyMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asAnyMap.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsAnyMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asAnyMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsAnyMap(value interface{}, options EncodingOptions) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsBooleanMap",
            "displayName": "AsBooleanMap",
            "id": "cdktf.Token.asBooleanMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsBooleanMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asBooleanMap.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsBooleanMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asBooleanMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsBooleanMap(value interface{}, options EncodingOptions) *map[string]*bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsList",
            "displayName": "AsList",
            "id": "cdktf.Token.asList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsList.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asList.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsList.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asList.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible list representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsList(value interface{}, options EncodingOptions) *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsMap",
            "displayName": "AsMap",
            "id": "cdktf.Token.asMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asMap.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsMap.parameter.mapValue",
                "displayName": "mapValue",
                "id": "cdktf.Token.asMap.parameter.mapValue",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsMap(value interface{}, mapValue interface{}, options EncodingOptions) *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumber",
            "displayName": "AsNumber",
            "id": "cdktf.Token.asNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumber.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumber.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible number representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsNumber(value interface{}) *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumberList",
            "displayName": "AsNumberList",
            "id": "cdktf.Token.asNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumberList.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumberList.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible list representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsNumberList(value interface{}) *[]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumberMap",
            "displayName": "AsNumberMap",
            "id": "cdktf.Token.asNumberMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumberMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumberMap.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsNumberMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asNumberMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsNumberMap(value interface{}, options EncodingOptions) *map[string]*f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsString",
            "displayName": "AsString",
            "id": "cdktf.Token.asString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsString.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asString.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsString.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asString.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible string representation of this token.",
              "remarks": "If the Token is initialized with a literal, the stringified value of the\nliteral is returned. Otherwise, a special quoted string representation\nof the Token is returned that can be embedded into other strings.\n\nStrings with quoted Tokens in them can be restored back into\ncomplex values with the Tokens restored by calling `resolve()`\non the string."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsString(value interface{}, options EncodingOptions) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsStringMap",
            "displayName": "AsStringMap",
            "id": "cdktf.Token.asStringMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsStringMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asStringMap.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.AsStringMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asStringMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_AsStringMap(value interface{}, options EncodingOptions) *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.IsUnresolved",
            "displayName": "IsUnresolved",
            "id": "cdktf.Token.isUnresolved",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.IsUnresolved.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Token.isUnresolved.parameter.obj",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "The object to test."
                }
              }
            ],
            "docs": {
              "summary": "Returns true if obj represents an unresolved value.",
              "remarks": "One of these must be true:\n\n* `obj` is an IResolvable\n* `obj` is a string containing at least one encoded `IResolvable`\n* `obj` is either an encoded number or list\n\nThis does NOT recurse into lists or objects to see if they\ncontaining resolvables."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Token_IsUnresolved(obj interface{}) *bool"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.property.AnyMapTokenValue",
            "displayName": "AnyMapTokenValue",
            "id": "cdktf.Token.property.ANY_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Any map token representation."
            },
            "usage": "func AnyMapTokenValue() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.property.NumberMapTokenValue",
            "displayName": "NumberMapTokenValue",
            "id": "cdktf.Token.property.NUMBER_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "Number Map token value representation."
            },
            "usage": "func NumberMapTokenValue() *f64",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token.property.StringMapTokenValue",
            "displayName": "StringMapTokenValue",
            "id": "cdktf.Token.property.STRING_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "String Map token value representation."
            },
            "usage": "func StringMapTokenValue() *string",
            "const": true
          }
        ],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Token",
        "displayName": "Token",
        "id": "cdktf.Token",
        "docs": {
          "summary": "Represents a special or lazily-evaluated value.",
          "remarks": "Can be used to delay evaluation of a certain value in case, for example,\nthat it requires some context or late-bound data. Can also be used to\nmark values that need special processing at document rendering time.\n\nTokens can be embedded into strings while retaining their original\nsemantics."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Tokenization.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTokenization() Tokenization"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.IsResolvable",
            "displayName": "IsResolvable",
            "id": "cdktf.Tokenization.isResolvable",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.IsResolvable.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Tokenization.isResolvable.parameter.obj",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return whether the given object is an IResolvable object.",
              "remarks": "This is different from Token.isUnresolved() which will also check for\nencoded Tokens, whereas this method will only do a type check on the given\nobject."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_IsResolvable(obj interface{}) *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.Tokenization.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Resolve.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Tokenization.resolve.parameter.obj",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "The object to resolve."
                }
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Resolve.parameter.options",
                "displayName": "options",
                "id": "cdktf.Tokenization.resolve.parameter.options",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ResolveOptions",
                      "displayName": "ResolveOptions",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ResolveOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Prefix key path components for diagnostics."
                }
              }
            ],
            "docs": {
              "summary": "Resolves an object by evaluating all tokens and removing any undefined or empty objects or arrays.",
              "remarks": "Values can only be primitives, arrays or tokens. Other objects (i.e. with methods) will be rejected."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_Resolve(obj interface{}, options ResolveOptions) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Reverse",
            "displayName": "Reverse",
            "id": "cdktf.Tokenization.reverse",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.Reverse.parameter.x",
                "displayName": "x",
                "id": "cdktf.Tokenization.reverse.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Reverse any value into Resolvables, if possible."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_Reverse(x interface{}) *[]IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseList",
            "displayName": "ReverseList",
            "id": "cdktf.Tokenization.reverseList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseList.parameter.l",
                "displayName": "l",
                "id": "cdktf.Tokenization.reverseList.parameter.l",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_ReverseList(l *[]*string) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseMap",
            "displayName": "ReverseMap",
            "id": "cdktf.Tokenization.reverseMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseMap.parameter.m",
                "displayName": "m",
                "id": "cdktf.Tokenization.reverseMap.parameter.m",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a map."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_ReverseMap(m *map[string]interface{}) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseNumber",
            "displayName": "ReverseNumber",
            "id": "cdktf.Tokenization.reverseNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseNumber.parameter.n",
                "displayName": "n",
                "id": "cdktf.Tokenization.reverseNumber.parameter.n",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a number."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_ReverseNumber(n *f64) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseNumberList",
            "displayName": "ReverseNumberList",
            "id": "cdktf.Tokenization.reverseNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseNumberList.parameter.l",
                "displayName": "l",
                "id": "cdktf.Tokenization.reverseNumberList.parameter.l",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a list."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_ReverseNumberList(l *[]*f64) IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseString",
            "displayName": "ReverseString",
            "id": "cdktf.Tokenization.reverseString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.ReverseString.parameter.s",
                "displayName": "s",
                "id": "cdktf.Tokenization.reverseString.parameter.s",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a string potentially containing encoded tokens."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_ReverseString(s *string) TokenizedStringFragments"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.StringifyNumber",
            "displayName": "StringifyNumber",
            "id": "cdktf.Tokenization.stringifyNumber",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization.StringifyNumber.parameter.x",
                "displayName": "x",
                "id": "cdktf.Tokenization.stringifyNumber.parameter.x",
                "type": {
                  "formattingPattern": "*f64"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Stringify a number directly or lazily if it's a Token.",
              "remarks": "If it is an object (i.e., { Ref: 'SomeLogicalId' }), return it as-is."
            },
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.Tokenization_StringifyNumber(x *f64) *string"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Tokenization",
        "displayName": "Tokenization",
        "id": "cdktf.Tokenization",
        "docs": {
          "summary": "Less oft-needed functions to manipulate Tokens."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TokenizedStringFragments.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewTokenizedStringFragments() TokenizedStringFragments"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddIntrinsic",
            "displayName": "AddIntrinsic",
            "id": "cdktf.TokenizedStringFragments.addIntrinsic",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddIntrinsic.parameter.value",
                "displayName": "value",
                "id": "cdktf.TokenizedStringFragments.addIntrinsic.parameter.value",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "the intrinsic value to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds an intrinsic fragment."
            },
            "usage": "func AddIntrinsic(value interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddLiteral",
            "displayName": "AddLiteral",
            "id": "cdktf.TokenizedStringFragments.addLiteral",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddLiteral.parameter.lit",
                "displayName": "lit",
                "id": "cdktf.TokenizedStringFragments.addLiteral.parameter.lit",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {
                  "summary": "the literal to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds a literal fragment."
            },
            "usage": "func AddLiteral(lit interface{})"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddToken",
            "displayName": "AddToken",
            "id": "cdktf.TokenizedStringFragments.addToken",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.AddToken.parameter.token",
                "displayName": "token",
                "id": "cdktf.TokenizedStringFragments.addToken.parameter.token",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "the token to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds a token fragment."
            },
            "usage": "func AddToken(token IResolvable)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.Join",
            "displayName": "Join",
            "id": "cdktf.TokenizedStringFragments.join",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.Join.parameter.concat",
                "displayName": "concat",
                "id": "cdktf.TokenizedStringFragments.join.parameter.concat",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IFragmentConcatenator",
                      "displayName": "IFragmentConcatenator",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Combine the string fragments using the given joiner.",
              "remarks": "If there are any"
            },
            "usage": "func Join(concat IFragmentConcatenator) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.MapTokens",
            "displayName": "MapTokens",
            "id": "cdktf.TokenizedStringFragments.mapTokens",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.MapTokens.parameter.mapper",
                "displayName": "mapper",
                "id": "cdktf.TokenizedStringFragments.mapTokens.parameter.mapper",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITokenMapper",
                      "displayName": "ITokenMapper",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenMapper",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Apply a transformation function to all tokens in the string."
            },
            "usage": "func MapTokens(mapper ITokenMapper) TokenizedStringFragments"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.FirstValue",
            "displayName": "FirstValue",
            "id": "cdktf.TokenizedStringFragments.property.firstValue",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {
              "summary": "Returns the first value."
            },
            "usage": "func FirstValue() interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.Intrinsic",
            "displayName": "Intrinsic",
            "id": "cdktf.TokenizedStringFragments.property.intrinsic",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all intrinsic fragments from this string."
            },
            "usage": "func Intrinsic() *[]IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.Length",
            "displayName": "Length",
            "id": "cdktf.TokenizedStringFragments.property.length",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "Returns the number of fragments."
            },
            "usage": "func Length() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.Literals",
            "displayName": "Literals",
            "id": "cdktf.TokenizedStringFragments.property.literals",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all literals from this string."
            },
            "usage": "func Literals() *[]IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.Tokens",
            "displayName": "Tokens",
            "id": "cdktf.TokenizedStringFragments.property.tokens",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all Tokens from this string."
            },
            "usage": "func Tokens() *[]IResolvable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments.property.FirstToken",
            "displayName": "FirstToken",
            "id": "cdktf.TokenizedStringFragments.property.firstToken",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "Returns the first token."
            },
            "usage": "func FirstToken() IResolvable"
          }
        ],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments",
        "displayName": "TokenizedStringFragments",
        "id": "cdktf.TokenizedStringFragments",
        "docs": {
          "summary": "Fragments of a concatenated string containing stringified Tokens."
        }
      },
      {
        "initializer": {
          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.VariableType.Initializer",
          "parameters": [],
          "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.NewVariableType() VariableType"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.List",
            "displayName": "List",
            "id": "cdktf.VariableType.list",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.List.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.list.parameter.type",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.VariableType_List(type *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Map",
            "displayName": "Map",
            "id": "cdktf.VariableType.map",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Map.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.map.parameter.type",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.VariableType_Map(type *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Object",
            "displayName": "Object",
            "id": "cdktf.VariableType.object",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Object.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.VariableType.object.parameter.attributes",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.VariableType_Object(attributes *map[string]*string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Set",
            "displayName": "Set",
            "id": "cdktf.VariableType.set",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Set.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.set.parameter.type",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.VariableType_Set(type *string) *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Tuple",
            "displayName": "Tuple",
            "id": "cdktf.VariableType.tuple",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.Tuple.parameter.elements",
                "displayName": "elements",
                "id": "cdktf.VariableType.tuple.parameter.elements",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\ncdktf.VariableType_Tuple(elements *string) *string"
          }
        ],
        "constants": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.Any",
            "displayName": "Any",
            "id": "cdktf.VariableType.property.ANY",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Any() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.Bool",
            "displayName": "Bool",
            "id": "cdktf.VariableType.property.BOOL",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Bool() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.List",
            "displayName": "List",
            "id": "cdktf.VariableType.property.LIST",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func List() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.ListBool",
            "displayName": "ListBool",
            "id": "cdktf.VariableType.property.LIST_BOOL",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func ListBool() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.ListNumber",
            "displayName": "ListNumber",
            "id": "cdktf.VariableType.property.LIST_NUMBER",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func ListNumber() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.ListString",
            "displayName": "ListString",
            "id": "cdktf.VariableType.property.LIST_STRING",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func ListString() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.Map",
            "displayName": "Map",
            "id": "cdktf.VariableType.property.MAP",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Map() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.MapBool",
            "displayName": "MapBool",
            "id": "cdktf.VariableType.property.MAP_BOOL",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func MapBool() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.MapNumber",
            "displayName": "MapNumber",
            "id": "cdktf.VariableType.property.MAP_NUMBER",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func MapNumber() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.MapString",
            "displayName": "MapString",
            "id": "cdktf.VariableType.property.MAP_STRING",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func MapString() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.Number",
            "displayName": "Number",
            "id": "cdktf.VariableType.property.NUMBER",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Number() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.Set",
            "displayName": "Set",
            "id": "cdktf.VariableType.property.SET",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Set() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.SetBool",
            "displayName": "SetBool",
            "id": "cdktf.VariableType.property.SET_BOOL",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func SetBool() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.SetNumber",
            "displayName": "SetNumber",
            "id": "cdktf.VariableType.property.SET_NUMBER",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func SetNumber() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.SetString",
            "displayName": "SetString",
            "id": "cdktf.VariableType.property.SET_STRING",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func SetString() *string",
            "const": true
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType.property.String",
            "displayName": "String",
            "id": "cdktf.VariableType.property.STRING",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func String() *string",
            "const": true
          }
        ],
        "properties": [],
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.VariableType",
        "displayName": "VariableType",
        "id": "cdktf.VariableType",
        "docs": {}
      }
    ],
    "structs": [
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions",
        "displayName": "AppOptions",
        "id": "cdktf.AppOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions.property.Context",
            "displayName": "Context",
            "id": "cdktf.AppOptions.property.context",
            "optional": true,
            "default": "- no additional context",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {
              "summary": "Additional context values for the application.",
              "remarks": "Context set by the CLI or the `context` key in `cdktf.json` has precedence.\n\nContext can be read from any construct using `node.getContext(key)`."
            },
            "usage": "Context *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions.property.Outdir",
            "displayName": "Outdir",
            "id": "cdktf.AppOptions.property.outdir",
            "optional": true,
            "default": "- CDKTF_OUTDIR if defined, otherwise \"cdktf.out\"",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The directory to output Terraform resources."
            },
            "usage": "Outdir *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions.property.SkipValidation",
            "displayName": "SkipValidation",
            "id": "cdktf.AppOptions.property.skipValidation",
            "optional": true,
            "default": "- false",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Whether to skip the validation during synthesis of the app."
            },
            "usage": "SkipValidation *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AppOptions.property.StackTraces",
            "displayName": "StackTraces",
            "id": "cdktf.AppOptions.property.stackTraces",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "StackTraces *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.AppOptions {\n\tContext: *map[string]interface{},\n\tOutdir: *string,\n\tSkipValidation: *bool,\n\tStackTraces: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps",
        "displayName": "ArtifactoryBackendProps",
        "id": "cdktf.ArtifactoryBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps.property.Password",
            "displayName": "Password",
            "id": "cdktf.ArtifactoryBackendProps.property.password",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The password."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps.property.Repo",
            "displayName": "Repo",
            "id": "cdktf.ArtifactoryBackendProps.property.repo",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The repository name."
            },
            "usage": "Repo *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps.property.Subpath",
            "displayName": "Subpath",
            "id": "cdktf.ArtifactoryBackendProps.property.subpath",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - Path within the repository."
            },
            "usage": "Subpath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps.property.Url",
            "displayName": "Url",
            "id": "cdktf.ArtifactoryBackendProps.property.url",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The URL.",
              "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
            },
            "usage": "Url *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ArtifactoryBackendProps.property.Username",
            "displayName": "Username",
            "id": "cdktf.ArtifactoryBackendProps.property.username",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The username."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {
          "summary": "Stores the state as an artifact in a given repository in Artifactory.",
          "remarks": "Generic HTTP repositories are supported, and state from different configurations\nmay be kept at different subpaths within the repository.\n\nNote: The URL must include the path to the Artifactory installation.\nIt will likely end in /artifactory.\n\nThis backend does not support state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/artifactory"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.ArtifactoryBackendProps {\n\tPassword: *string,\n\tRepo: *string,\n\tSubpath: *string,\n\tUrl: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps",
        "displayName": "AzurermBackendProps",
        "id": "cdktf.AzurermBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ContainerName",
            "displayName": "ContainerName",
            "id": "cdktf.AzurermBackendProps.property.containerName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Container within the Storage Account."
            },
            "usage": "ContainerName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.Key",
            "displayName": "Key",
            "id": "cdktf.AzurermBackendProps.property.key",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.StorageAccountName",
            "displayName": "StorageAccountName",
            "id": "cdktf.AzurermBackendProps.property.storageAccountName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Account."
            },
            "usage": "StorageAccountName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.AzurermBackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
            },
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ClientCertificatePassword",
            "displayName": "ClientCertificatePassword",
            "id": "cdktf.AzurermBackendProps.property.clientCertificatePassword",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
            },
            "usage": "ClientCertificatePassword *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ClientCertificatePath",
            "displayName": "ClientCertificatePath",
            "id": "cdktf.AzurermBackendProps.property.clientCertificatePath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
            },
            "usage": "ClientCertificatePath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ClientId",
            "displayName": "ClientId",
            "id": "cdktf.AzurermBackendProps.property.clientId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Client ID of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
            },
            "usage": "ClientId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ClientSecret",
            "displayName": "ClientSecret",
            "id": "cdktf.AzurermBackendProps.property.clientSecret",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Client Secret of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
            },
            "usage": "ClientSecret *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.AzurermBackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
              "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
            },
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.Environment",
            "displayName": "Environment",
            "id": "cdktf.AzurermBackendProps.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Azure Environment which should be used.",
              "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
            },
            "usage": "Environment *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.MsiEndpoint",
            "displayName": "MsiEndpoint",
            "id": "cdktf.AzurermBackendProps.property.msiEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
              "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
            },
            "usage": "MsiEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.OidcRequestToken",
            "displayName": "OidcRequestToken",
            "id": "cdktf.AzurermBackendProps.property.oidcRequestToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The bearer token for the request to the OIDC provider.",
              "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
            },
            "usage": "OidcRequestToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.OidcRequestUrl",
            "displayName": "OidcRequestUrl",
            "id": "cdktf.AzurermBackendProps.property.oidcRequestUrl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
              "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
            },
            "usage": "OidcRequestUrl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.ResourceGroupName",
            "displayName": "ResourceGroupName",
            "id": "cdktf.AzurermBackendProps.property.resourceGroupName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
            },
            "usage": "ResourceGroupName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.SasToken",
            "displayName": "SasToken",
            "id": "cdktf.AzurermBackendProps.property.sasToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
            },
            "usage": "SasToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.Snapshot",
            "displayName": "Snapshot",
            "id": "cdktf.AzurermBackendProps.property.snapshot",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
              "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
            },
            "usage": "Snapshot *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.SubscriptionId",
            "displayName": "SubscriptionId",
            "id": "cdktf.AzurermBackendProps.property.subscriptionId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
              "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
            },
            "usage": "SubscriptionId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.TenantId",
            "displayName": "TenantId",
            "id": "cdktf.AzurermBackendProps.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Tenant ID in which the Subscription exists.",
              "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
            },
            "usage": "TenantId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.UseAzureadAuth",
            "displayName": "UseAzureadAuth",
            "id": "cdktf.AzurermBackendProps.property.useAzureadAuth",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
            },
            "usage": "UseAzureadAuth *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.UseMicrosoftGraph",
            "displayName": "UseMicrosoftGraph",
            "id": "cdktf.AzurermBackendProps.property.useMicrosoftGraph",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
              "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
            },
            "usage": "UseMicrosoftGraph *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.UseMsi",
            "displayName": "UseMsi",
            "id": "cdktf.AzurermBackendProps.property.useMsi",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should Managed Service Identity authentication be used?",
              "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
            },
            "usage": "UseMsi *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AzurermBackendProps.property.UseOidc",
            "displayName": "UseOidc",
            "id": "cdktf.AzurermBackendProps.property.useOidc",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
              "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
            },
            "usage": "UseOidc *bool"
          }
        ],
        "docs": {
          "summary": "Stores the state as a Blob with the given Key within the Blob Container within the Blob Storage Account.",
          "remarks": "This backend supports state locking and consistency checking\nwith Azure Blob Storage native capabilities.\n\nNote: By default the Azure Backend uses ADAL for authentication which is deprecated\nin favour of MSAL - MSAL can be used by setting use_microsoft_graph to true.\nThe default for this will change in Terraform 1.2,\nso that MSAL authentication is used by default.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/azurerm"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.AzurermBackendProps {\n\tContainerName: *string,\n\tKey: *string,\n\tStorageAccountName: *string,\n\tAccessKey: *string,\n\tClientCertificatePassword: *string,\n\tClientCertificatePath: *string,\n\tClientId: *string,\n\tClientSecret: *string,\n\tEndpoint: *string,\n\tEnvironment: *string,\n\tMsiEndpoint: *string,\n\tOidcRequestToken: *string,\n\tOidcRequestUrl: *string,\n\tResourceGroupName: *string,\n\tSasToken: *string,\n\tSnapshot: *bool,\n\tSubscriptionId: *string,\n\tTenantId: *string,\n\tUseAzureadAuth: *bool,\n\tUseMicrosoftGraph: *bool,\n\tUseMsi: *bool,\n\tUseOidc: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps",
        "displayName": "CloudBackendProps",
        "id": "cdktf.CloudBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps.property.Organization",
            "displayName": "Organization",
            "id": "cdktf.CloudBackendProps.property.organization",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The name of the organization containing the workspace(s) the current configuration should use."
            },
            "usage": "Organization *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps.property.Workspaces",
            "displayName": "Workspaces",
            "id": "cdktf.CloudBackendProps.property.workspaces",
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.NamedCloudWorkspace",
                      "displayName": "NamedCloudWorkspace",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedCloudWorkspace",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TaggedCloudWorkspaces",
                      "displayName": "TaggedCloudWorkspaces",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TaggedCloudWorkspaces",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "A nested block that specifies which remote Terraform Cloud workspaces to use for the current configuration.",
              "remarks": "The workspaces block must contain exactly one of the following arguments, each denoting a strategy for how workspaces should be mapped:"
            },
            "usage": "Workspaces interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps.property.Hostname",
            "displayName": "Hostname",
            "id": "cdktf.CloudBackendProps.property.hostname",
            "optional": true,
            "default": "app.terraform.io",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The hostname of a Terraform Enterprise installation, if using Terraform Enterprise."
            },
            "usage": "Hostname *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CloudBackendProps.property.Token",
            "displayName": "Token",
            "id": "cdktf.CloudBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The token used to authenticate with Terraform Cloud.",
              "remarks": "We recommend omitting the token from the configuration, and instead using terraform login or manually configuring credentials in the CLI config file."
            },
            "usage": "Token *string"
          }
        ],
        "docs": {
          "summary": "The Cloud Backend synthesizes a {@link https://www.terraform.io/cli/cloud/settings#the-cloud-block cloud block}. The cloud block is a nested block within the top-level terraform settings block. It specifies which Terraform Cloud workspaces to use for the current working directory. The cloud block only affects Terraform CLI's behavior. When Terraform Cloud uses a configuration that contains a cloud block - for example, when a workspace is configured to use a VCS provider directly - it ignores the block and behaves according to its own workspace settings.",
          "remarks": "https://www.terraform.io/cli/cloud/settings#arguments"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.CloudBackendProps {\n\tOrganization: *string,\n\tWorkspaces: interface{},\n\tHostname: *string,\n\tToken: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps",
        "displayName": "ConsulBackendProps",
        "id": "cdktf.ConsulBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.AccessToken",
            "displayName": "AccessToken",
            "id": "cdktf.ConsulBackendProps.property.accessToken",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) Access token."
            },
            "usage": "AccessToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Path",
            "displayName": "Path",
            "id": "cdktf.ConsulBackendProps.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) Path in the Consul KV store."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Address",
            "displayName": "Address",
            "id": "cdktf.ConsulBackendProps.property.address",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
              "remarks": "Defaults to the local agent HTTP listener."
            },
            "usage": "Address *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.CaFile",
            "displayName": "CaFile",
            "id": "cdktf.ConsulBackendProps.property.caFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
            },
            "usage": "CaFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.CertFile",
            "displayName": "CertFile",
            "id": "cdktf.ConsulBackendProps.property.certFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
              "remarks": "requires use of key_file."
            },
            "usage": "CertFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Datacenter",
            "displayName": "Datacenter",
            "id": "cdktf.ConsulBackendProps.property.datacenter",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The datacenter to use.",
              "remarks": "Defaults to that of the agent."
            },
            "usage": "Datacenter *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Gzip",
            "displayName": "Gzip",
            "id": "cdktf.ConsulBackendProps.property.gzip",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
            },
            "usage": "Gzip *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.HttpAuth",
            "displayName": "HttpAuth",
            "id": "cdktf.ConsulBackendProps.property.httpAuth",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
            },
            "usage": "HttpAuth *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.KeyFile",
            "displayName": "KeyFile",
            "id": "cdktf.ConsulBackendProps.property.keyFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
            },
            "usage": "KeyFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Lock",
            "displayName": "Lock",
            "id": "cdktf.ConsulBackendProps.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) false to disable locking.",
              "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
            },
            "usage": "Lock *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ConsulBackendProps.property.Scheme",
            "displayName": "Scheme",
            "id": "cdktf.ConsulBackendProps.property.scheme",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
              "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
            },
            "usage": "Scheme *string"
          }
        ],
        "docs": {
          "summary": "Stores the state in the Consul KV store at a given path. This backend supports state locking.",
          "remarks": "Read more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/consul"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.ConsulBackendProps {\n\tAccessToken: *string,\n\tPath: *string,\n\tAddress: *string,\n\tCaFile: *string,\n\tCertFile: *string,\n\tDatacenter: *string,\n\tGzip: *bool,\n\tHttpAuth: *string,\n\tKeyFile: *string,\n\tLock: *bool,\n\tScheme: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps",
        "displayName": "CosBackendProps",
        "id": "cdktf.CosBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.CosBackendProps.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the COS bucket.",
              "remarks": "You shall manually create it first."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.CosBackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
              "remarks": "Defaults to private."
            },
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.CosBackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to enable server side encryption of the state file.",
              "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
            },
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Key",
            "displayName": "Key",
            "id": "cdktf.CosBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path for saving the state file in bucket.",
              "remarks": "Defaults to terraform.tfstate."
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.CosBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The directory for saving the state file in bucket.",
              "remarks": "Default to \"env:\"."
            },
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.Region",
            "displayName": "Region",
            "id": "cdktf.CosBackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The region of the COS bucket.",
              "remarks": "It supports environment variables TENCENTCLOUD_REGION."
            },
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.SecretId",
            "displayName": "SecretId",
            "id": "cdktf.CosBackendProps.property.secretId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Secret id of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
            },
            "usage": "SecretId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.CosBackendProps.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.CosBackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Secret key of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
            },
            "usage": "SecretKey *string"
          }
        ],
        "docs": {
          "summary": "Stores the state as an object in a configurable prefix in a given bucket on Tencent Cloud Object Storage (COS).",
          "remarks": "This backend supports state locking.\n\nWarning! It is highly recommended that you enable Object Versioning on the COS bucket to allow for state recovery in the case of accidental deletions and human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/cos"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.CosBackendProps {\n\tBucket: *string,\n\tAcl: *string,\n\tEncrypt: *bool,\n\tKey: *string,\n\tPrefix: *string,\n\tRegion: *string,\n\tSecretId: *string,\n\tSecretKey: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig",
        "displayName": "DataTerraformRemoteStateArtifactoryConfig",
        "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Password",
            "displayName": "Password",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.password",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The password."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Repo",
            "displayName": "Repo",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.repo",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The repository name."
            },
            "usage": "Repo *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Subpath",
            "displayName": "Subpath",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.subpath",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - Path within the repository."
            },
            "usage": "Subpath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Url",
            "displayName": "Url",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.url",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The URL.",
              "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
            },
            "usage": "Url *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactoryConfig.property.Username",
            "displayName": "Username",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.username",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) - The username."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateArtifactoryConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tPassword: *string,\n\tRepo: *string,\n\tSubpath: *string,\n\tUrl: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig",
        "displayName": "DataTerraformRemoteStateAzurermConfig",
        "id": "cdktf.DataTerraformRemoteStateAzurermConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ContainerName",
            "displayName": "ContainerName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.containerName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Container within the Storage Account."
            },
            "usage": "ContainerName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Key",
            "displayName": "Key",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.key",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.StorageAccountName",
            "displayName": "StorageAccountName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.storageAccountName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Account."
            },
            "usage": "StorageAccountName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
            },
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ClientCertificatePassword",
            "displayName": "ClientCertificatePassword",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePassword",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
            },
            "usage": "ClientCertificatePassword *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ClientCertificatePath",
            "displayName": "ClientCertificatePath",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
            },
            "usage": "ClientCertificatePath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ClientId",
            "displayName": "ClientId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Client ID of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
            },
            "usage": "ClientId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ClientSecret",
            "displayName": "ClientSecret",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientSecret",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Client Secret of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
            },
            "usage": "ClientSecret *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
              "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
            },
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Environment",
            "displayName": "Environment",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Azure Environment which should be used.",
              "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
            },
            "usage": "Environment *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.MsiEndpoint",
            "displayName": "MsiEndpoint",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.msiEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
              "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
            },
            "usage": "MsiEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.OidcRequestToken",
            "displayName": "OidcRequestToken",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The bearer token for the request to the OIDC provider.",
              "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
            },
            "usage": "OidcRequestToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.OidcRequestUrl",
            "displayName": "OidcRequestUrl",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestUrl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
              "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
            },
            "usage": "OidcRequestUrl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.ResourceGroupName",
            "displayName": "ResourceGroupName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.resourceGroupName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
            },
            "usage": "ResourceGroupName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.SasToken",
            "displayName": "SasToken",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.sasToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
            },
            "usage": "SasToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.Snapshot",
            "displayName": "Snapshot",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.snapshot",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
              "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
            },
            "usage": "Snapshot *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.SubscriptionId",
            "displayName": "SubscriptionId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.subscriptionId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
              "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
            },
            "usage": "SubscriptionId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.TenantId",
            "displayName": "TenantId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The Tenant ID in which the Subscription exists.",
              "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
            },
            "usage": "TenantId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.UseAzureadAuth",
            "displayName": "UseAzureadAuth",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useAzureadAuth",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
            },
            "usage": "UseAzureadAuth *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.UseMicrosoftGraph",
            "displayName": "UseMicrosoftGraph",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useMicrosoftGraph",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
              "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
            },
            "usage": "UseMicrosoftGraph *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.UseMsi",
            "displayName": "UseMsi",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useMsi",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should Managed Service Identity authentication be used?",
              "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
            },
            "usage": "UseMsi *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurermConfig.property.UseOidc",
            "displayName": "UseOidc",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useOidc",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
              "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
            },
            "usage": "UseOidc *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateAzurermConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tContainerName: *string,\n\tKey: *string,\n\tStorageAccountName: *string,\n\tAccessKey: *string,\n\tClientCertificatePassword: *string,\n\tClientCertificatePath: *string,\n\tClientId: *string,\n\tClientSecret: *string,\n\tEndpoint: *string,\n\tEnvironment: *string,\n\tMsiEndpoint: *string,\n\tOidcRequestToken: *string,\n\tOidcRequestUrl: *string,\n\tResourceGroupName: *string,\n\tSasToken: *string,\n\tSnapshot: *bool,\n\tSubscriptionId: *string,\n\tTenantId: *string,\n\tUseAzureadAuth: *bool,\n\tUseMicrosoftGraph: *bool,\n\tUseMsi: *bool,\n\tUseOidc: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConfig",
        "displayName": "DataTerraformRemoteStateConfig",
        "id": "cdktf.DataTerraformRemoteStateConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig",
        "displayName": "DataTerraformRemoteStateConsulConfig",
        "id": "cdktf.DataTerraformRemoteStateConsulConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.AccessToken",
            "displayName": "AccessToken",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.accessToken",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) Access token."
            },
            "usage": "AccessToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Path",
            "displayName": "Path",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) Path in the Consul KV store."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Address",
            "displayName": "Address",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.address",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
              "remarks": "Defaults to the local agent HTTP listener."
            },
            "usage": "Address *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.CaFile",
            "displayName": "CaFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.caFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
            },
            "usage": "CaFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.CertFile",
            "displayName": "CertFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.certFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
              "remarks": "requires use of key_file."
            },
            "usage": "CertFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Datacenter",
            "displayName": "Datacenter",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.datacenter",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The datacenter to use.",
              "remarks": "Defaults to that of the agent."
            },
            "usage": "Datacenter *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Gzip",
            "displayName": "Gzip",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.gzip",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
            },
            "usage": "Gzip *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.HttpAuth",
            "displayName": "HttpAuth",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.httpAuth",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
            },
            "usage": "HttpAuth *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.KeyFile",
            "displayName": "KeyFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.keyFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
            },
            "usage": "KeyFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Lock",
            "displayName": "Lock",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) false to disable locking.",
              "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
            },
            "usage": "Lock *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsulConfig.property.Scheme",
            "displayName": "Scheme",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.scheme",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
              "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
            },
            "usage": "Scheme *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateConsulConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tAccessToken: *string,\n\tPath: *string,\n\tAddress: *string,\n\tCaFile: *string,\n\tCertFile: *string,\n\tDatacenter: *string,\n\tGzip: *bool,\n\tHttpAuth: *string,\n\tKeyFile: *string,\n\tLock: *bool,\n\tScheme: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig",
        "displayName": "DataTerraformRemoteStateCosConfig",
        "id": "cdktf.DataTerraformRemoteStateCosConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the COS bucket.",
              "remarks": "You shall manually create it first."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
              "remarks": "Defaults to private."
            },
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to enable server side encryption of the state file.",
              "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
            },
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Key",
            "displayName": "Key",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path for saving the state file in bucket.",
              "remarks": "Defaults to terraform.tfstate."
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The directory for saving the state file in bucket.",
              "remarks": "Default to \"env:\"."
            },
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.Region",
            "displayName": "Region",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The region of the COS bucket.",
              "remarks": "It supports environment variables TENCENTCLOUD_REGION."
            },
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.SecretId",
            "displayName": "SecretId",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.secretId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Secret id of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
            },
            "usage": "SecretId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCosConfig.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Secret key of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
            },
            "usage": "SecretKey *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateCosConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tBucket: *string,\n\tAcl: *string,\n\tEncrypt: *bool,\n\tKey: *string,\n\tPrefix: *string,\n\tRegion: *string,\n\tSecretId: *string,\n\tSecretKey: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig",
        "displayName": "DataTerraformRemoteStateEtcdConfig",
        "id": "cdktf.DataTerraformRemoteStateEtcdConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Endpoints",
            "displayName": "Endpoints",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.endpoints",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) A space-separated list of the etcd endpoints."
            },
            "usage": "Endpoints *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Path",
            "displayName": "Path",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The path where to store the state."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Password",
            "displayName": "Password",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdConfig.property.Username",
            "displayName": "Username",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The username."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateEtcdConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tEndpoints: *string,\n\tPath: *string,\n\tPassword: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config",
        "displayName": "DataTerraformRemoteStateEtcdV3Config",
        "id": "cdktf.DataTerraformRemoteStateEtcdV3Config",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Endpoints",
            "displayName": "Endpoints",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.endpoints",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Required) The list of 'etcd' endpoints which to connect to."
            },
            "usage": "Endpoints *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.CacertPath",
            "displayName": "CacertPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.cacertPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
            },
            "usage": "CacertPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.CertPath",
            "displayName": "CertPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.certPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
            },
            "usage": "CertPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.KeyPath",
            "displayName": "KeyPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.keyPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
            },
            "usage": "KeyPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Lock",
            "displayName": "Lock",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to lock state access.",
              "remarks": "Defaults to true."
            },
            "usage": "Lock *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Password",
            "displayName": "Password",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Password used to connect to the etcd cluster."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
              "remarks": "Defaults to \"\"."
            },
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3Config.property.Username",
            "displayName": "Username",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Username used to connect to the etcd cluster."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateEtcdV3Config {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tEndpoints: *[]*string,\n\tCacertPath: *string,\n\tCertPath: *string,\n\tKeyPath: *string,\n\tLock: *bool,\n\tPassword: *string,\n\tPrefix: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig",
        "displayName": "DataTerraformRemoteStateGcsConfig",
        "id": "cdktf.DataTerraformRemoteStateGcsConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the GCS bucket.",
              "remarks": "This name must be globally unique."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.AccessToken",
            "displayName": "AccessToken",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.accessToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
            },
            "usage": "AccessToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.Credentials",
            "displayName": "Credentials",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.credentials",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
              "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
            },
            "usage": "Credentials *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.EncryptionKey",
            "displayName": "EncryptionKey",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.encryptionKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
            },
            "usage": "EncryptionKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.ImpersonateServiceAccount",
            "displayName": "ImpersonateServiceAccount",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccount",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
              "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
            },
            "usage": "ImpersonateServiceAccount *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.ImpersonateServiceAccountDelegates",
            "displayName": "ImpersonateServiceAccountDelegates",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccountDelegates",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) The delegation chain for an impersonating a service account."
            },
            "usage": "ImpersonateServiceAccountDelegates *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcsConfig.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) GCS prefix inside the bucket.",
              "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
            },
            "usage": "Prefix *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateGcsConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tBucket: *string,\n\tAccessToken: *string,\n\tCredentials: *string,\n\tEncryptionKey: *string,\n\tImpersonateServiceAccount: *string,\n\tImpersonateServiceAccountDelegates: *[]*string,\n\tPrefix: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig",
        "displayName": "DataTerraformRemoteStateHttpConfig",
        "id": "cdktf.DataTerraformRemoteStateHttpConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.Address",
            "displayName": "Address",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.address",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The address of the REST endpoint."
            },
            "usage": "Address *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.LockAddress",
            "displayName": "LockAddress",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.lockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The address of the lock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "LockAddress *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.LockMethod",
            "displayName": "LockMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.lockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when locking.",
              "remarks": "Defaults to LOCK."
            },
            "usage": "LockMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.Password",
            "displayName": "Password",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password for HTTP basic authentication."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.RetryMax",
            "displayName": "RetryMax",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryMax",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The number of HTTP request retries.",
              "remarks": "Defaults to 2."
            },
            "usage": "RetryMax *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.RetryWaitMax",
            "displayName": "RetryWaitMax",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMax",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 30."
            },
            "usage": "RetryWaitMax *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.RetryWaitMin",
            "displayName": "RetryWaitMin",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMin",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 1."
            },
            "usage": "RetryWaitMin *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.SkipCertVerification",
            "displayName": "SkipCertVerification",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.skipCertVerification",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to skip TLS verification.",
              "remarks": "Defaults to false."
            },
            "usage": "SkipCertVerification *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.UnlockAddress",
            "displayName": "UnlockAddress",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.unlockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The address of the unlock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "UnlockAddress *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.UnlockMethod",
            "displayName": "UnlockMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.unlockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when unlocking.",
              "remarks": "Defaults to UNLOCK."
            },
            "usage": "UnlockMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.UpdateMethod",
            "displayName": "UpdateMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.updateMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) HTTP method to use when updating state.",
              "remarks": "Defaults to POST."
            },
            "usage": "UpdateMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttpConfig.property.Username",
            "displayName": "Username",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The username for HTTP basic authentication."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateHttpConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tAddress: *string,\n\tLockAddress: *string,\n\tLockMethod: *string,\n\tPassword: *string,\n\tRetryMax: *f64,\n\tRetryWaitMax: *f64,\n\tRetryWaitMin: *f64,\n\tSkipCertVerification: *bool,\n\tUnlockAddress: *string,\n\tUnlockMethod: *string,\n\tUpdateMethod: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig",
        "displayName": "DataTerraformRemoteStateLocalConfig",
        "id": "cdktf.DataTerraformRemoteStateLocalConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig.property.Path",
            "displayName": "Path",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.path",
            "optional": true,
            "default": "- defaults to terraform.${stackId}.tfstate",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Path where the state file is stored."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocalConfig.property.WorkspaceDir",
            "displayName": "WorkspaceDir",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.workspaceDir",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to non-default workspaces."
            },
            "usage": "WorkspaceDir *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateLocalConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tPath: *string,\n\tWorkspaceDir: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig",
        "displayName": "DataTerraformRemoteStateMantaConfig",
        "id": "cdktf.DataTerraformRemoteStateMantaConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.Account",
            "displayName": "Account",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.account",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Account *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.KeyId",
            "displayName": "KeyId",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.keyId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "KeyId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.Path",
            "displayName": "Path",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.InsecureSkipTlsVerify",
            "displayName": "InsecureSkipTlsVerify",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.insecureSkipTlsVerify",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "InsecureSkipTlsVerify *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.KeyMaterial",
            "displayName": "KeyMaterial",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.keyMaterial",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "KeyMaterial *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.ObjectName",
            "displayName": "ObjectName",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.objectName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ObjectName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.Url",
            "displayName": "Url",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.url",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Url *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateMantaConfig.property.User",
            "displayName": "User",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.user",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "User *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateMantaConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tAccount: *string,\n\tKeyId: *string,\n\tPath: *string,\n\tInsecureSkipTlsVerify: *bool,\n\tKeyMaterial: *string,\n\tObjectName: *string,\n\tUrl: *string,\n\tUser: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig",
        "displayName": "DataTerraformRemoteStateOssConfig",
        "id": "cdktf.DataTerraformRemoteStateOssConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.AssumeRole",
            "displayName": "AssumeRole",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.assumeRole",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.OssAssumeRole",
                  "displayName": "OssAssumeRole",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "AssumeRole OssAssumeRole"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.EcsRoleName",
            "displayName": "EcsRoleName",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.ecsRoleName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "EcsRoleName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Key",
            "displayName": "Key",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Profile",
            "displayName": "Profile",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Profile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.Region",
            "displayName": "Region",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SecretKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.SecurityToken",
            "displayName": "SecurityToken",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.securityToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SecurityToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.SharedCredentialsFile",
            "displayName": "SharedCredentialsFile",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SharedCredentialsFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.TablestoreEndpoint",
            "displayName": "TablestoreEndpoint",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TablestoreEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOssConfig.property.TablestoreTable",
            "displayName": "TablestoreTable",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreTable",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TablestoreTable *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateOssConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tBucket: *string,\n\tAccessKey: *string,\n\tAcl: *string,\n\tAssumeRole: github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole,\n\tEcsRoleName: *string,\n\tEncrypt: *bool,\n\tEndpoint: *string,\n\tKey: *string,\n\tPrefix: *string,\n\tProfile: *string,\n\tRegion: *string,\n\tSecretKey: *string,\n\tSecurityToken: *string,\n\tSharedCredentialsFile: *string,\n\tTablestoreEndpoint: *string,\n\tTablestoreTable: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig",
        "displayName": "DataTerraformRemoteStatePgConfig",
        "id": "cdktf.DataTerraformRemoteStatePgConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig.property.ConnStr",
            "displayName": "ConnStr",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.connStr",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ConnStr *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig.property.SchemaName",
            "displayName": "SchemaName",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.schemaName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SchemaName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePgConfig.property.SkipSchemaCreation",
            "displayName": "SkipSchemaCreation",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.skipSchemaCreation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "SkipSchemaCreation *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStatePgConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tConnStr: *string,\n\tSchemaName: *string,\n\tSkipSchemaCreation: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig",
        "displayName": "DataTerraformRemoteStateRemoteConfig",
        "id": "cdktf.DataTerraformRemoteStateRemoteConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Organization",
            "displayName": "Organization",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.organization",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Organization *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Workspaces",
            "displayName": "Workspaces",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.workspaces",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IRemoteWorkspace",
                  "displayName": "IRemoteWorkspace",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Workspaces IRemoteWorkspace"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Hostname",
            "displayName": "Hostname",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.hostname",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Hostname *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateRemoteConfig.property.Token",
            "displayName": "Token",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Token *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateRemoteConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tOrganization: *string,\n\tWorkspaces: github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace,\n\tHostname: *string,\n\tToken: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config",
        "displayName": "DataTerraformRemoteStateS3Config",
        "id": "cdktf.DataTerraformRemoteStateS3Config",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Name of the S3 Bucket."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Key",
            "displayName": "Key",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.key",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Path to the state file inside the S3 Bucket.",
              "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) AWS access key.",
              "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
            },
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Canned ACL to be applied to the state file."
            },
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.AssumeRolePolicy",
            "displayName": "AssumeRolePolicy",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicy",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "AssumeRolePolicy *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.AssumeRolePolicyArns",
            "displayName": "AssumeRolePolicyArns",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicyArns",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "AssumeRolePolicyArns *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.AssumeRoleTags",
            "displayName": "AssumeRoleTags",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTags",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Map of assume role session tags."
            },
            "usage": "AssumeRoleTags *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.AssumeRoleTransitiveTagKeys",
            "displayName": "AssumeRoleTransitiveTagKeys",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTransitiveTagKeys",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
            },
            "usage": "AssumeRoleTransitiveTagKeys *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.DynamodbEndpoint",
            "displayName": "DynamodbEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.dynamodbEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
              "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
            },
            "usage": "DynamodbEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.DynamodbTable",
            "displayName": "DynamodbTable",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.dynamodbTable",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
              "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
            },
            "usage": "DynamodbTable *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Enable server side encryption of the state file."
            },
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS S3 API.",
              "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
            },
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.ExternalId",
            "displayName": "ExternalId",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.externalId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) External identifier to use when assuming the role."
            },
            "usage": "ExternalId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.ForcePathStyle",
            "displayName": "ForcePathStyle",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.forcePathStyle",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
            },
            "usage": "ForcePathStyle *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.IamEndpoint",
            "displayName": "IamEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.iamEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
              "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
            },
            "usage": "IamEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.KmsKeyId",
            "displayName": "KmsKeyId",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.kmsKeyId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
              "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
            },
            "usage": "KmsKeyId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.MaxRetries",
            "displayName": "MaxRetries",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.maxRetries",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
              "remarks": "Defaults to 5."
            },
            "usage": "MaxRetries *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Profile",
            "displayName": "Profile",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
            },
            "usage": "Profile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Region",
            "displayName": "Region",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
              "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
            },
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.RoleArn",
            "displayName": "RoleArn",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.roleArn",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
            },
            "usage": "RoleArn *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) AWS secret access key.",
              "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
            },
            "usage": "SecretKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SessionName",
            "displayName": "SessionName",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Session name to use when assuming the role."
            },
            "usage": "SessionName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SharedCredentialsFile",
            "displayName": "SharedCredentialsFile",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Path to the AWS shared credentials file.",
              "remarks": "Defaults to ~/.aws/credentials."
            },
            "usage": "SharedCredentialsFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SkipCredentialsValidation",
            "displayName": "SkipCredentialsValidation",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipCredentialsValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip credentials validation via the STS API."
            },
            "usage": "SkipCredentialsValidation *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SkipMetadataApiCheck",
            "displayName": "SkipMetadataApiCheck",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipMetadataApiCheck",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip usage of EC2 Metadata API."
            },
            "usage": "SkipMetadataApiCheck *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SkipRegionValidation",
            "displayName": "SkipRegionValidation",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipRegionValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip validation of provided region name."
            },
            "usage": "SkipRegionValidation *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.SseCustomerKey",
            "displayName": "SseCustomerKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sseCustomerKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
              "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
            },
            "usage": "SseCustomerKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.StsEndpoint",
            "displayName": "StsEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.stsEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
              "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
            },
            "usage": "StsEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.Token",
            "displayName": "Token",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
              "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
            },
            "usage": "Token *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3Config.property.WorkspaceKeyPrefix",
            "displayName": "WorkspaceKeyPrefix",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.workspaceKeyPrefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Prefix applied to the state path inside the bucket.",
              "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
            },
            "usage": "WorkspaceKeyPrefix *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateS3Config {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tBucket: *string,\n\tKey: *string,\n\tAccessKey: *string,\n\tAcl: *string,\n\tAssumeRolePolicy: *string,\n\tAssumeRolePolicyArns: *[]*string,\n\tAssumeRoleTags: *map[string]*string,\n\tAssumeRoleTransitiveTagKeys: *[]*string,\n\tDynamodbEndpoint: *string,\n\tDynamodbTable: *string,\n\tEncrypt: *bool,\n\tEndpoint: *string,\n\tExternalId: *string,\n\tForcePathStyle: *bool,\n\tIamEndpoint: *string,\n\tKmsKeyId: *string,\n\tMaxRetries: *f64,\n\tProfile: *string,\n\tRegion: *string,\n\tRoleArn: *string,\n\tSecretKey: *string,\n\tSessionName: *string,\n\tSharedCredentialsFile: *string,\n\tSkipCredentialsValidation: *bool,\n\tSkipMetadataApiCheck: *bool,\n\tSkipRegionValidation: *bool,\n\tSseCustomerKey: *string,\n\tStsEndpoint: *string,\n\tToken: *string,\n\tWorkspaceKeyPrefix: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig",
        "displayName": "DataTerraformRemoteStateSwiftConfig",
        "id": "cdktf.DataTerraformRemoteStateSwiftConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Defaults",
            "displayName": "Defaults",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Defaults *map[string]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Workspace",
            "displayName": "Workspace",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Workspace *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Container",
            "displayName": "Container",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.container",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Container *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ApplicationCredentialId",
            "displayName": "ApplicationCredentialId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ApplicationCredentialName",
            "displayName": "ApplicationCredentialName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ApplicationCredentialSecret",
            "displayName": "ApplicationCredentialSecret",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialSecret",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialSecret *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ArchiveContainer",
            "displayName": "ArchiveContainer",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.archiveContainer",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ArchiveContainer *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.AuthUrl",
            "displayName": "AuthUrl",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.authUrl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "AuthUrl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.CacertFile",
            "displayName": "CacertFile",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cacertFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "CacertFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Cert",
            "displayName": "Cert",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cert",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Cert *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Cloud",
            "displayName": "Cloud",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cloud",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Cloud *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.DefaultDomain",
            "displayName": "DefaultDomain",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.defaultDomain",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DefaultDomain *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.DomainId",
            "displayName": "DomainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.domainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.DomainName",
            "displayName": "DomainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.domainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ExpireAfter",
            "displayName": "ExpireAfter",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.expireAfter",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ExpireAfter *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Insecure",
            "displayName": "Insecure",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Insecure *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Key",
            "displayName": "Key",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Password",
            "displayName": "Password",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ProjectDomainId",
            "displayName": "ProjectDomainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProjectDomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.ProjectDomainName",
            "displayName": "ProjectDomainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProjectDomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.RegionName",
            "displayName": "RegionName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.regionName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "RegionName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.StateName",
            "displayName": "StateName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.stateName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "StateName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.TenantId",
            "displayName": "TenantId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TenantId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.TenantName",
            "displayName": "TenantName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TenantName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.Token",
            "displayName": "Token",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Token *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.UserDomainId",
            "displayName": "UserDomainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserDomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.UserDomainName",
            "displayName": "UserDomainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserDomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.UserId",
            "displayName": "UserId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwiftConfig.property.UserName",
            "displayName": "UserName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserName *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.DataTerraformRemoteStateSwiftConfig {\n\tDefaults: *map[string]interface{},\n\tWorkspace: *string,\n\tContainer: *string,\n\tApplicationCredentialId: *string,\n\tApplicationCredentialName: *string,\n\tApplicationCredentialSecret: *string,\n\tArchiveContainer: *string,\n\tAuthUrl: *string,\n\tCacertFile: *string,\n\tCert: *string,\n\tCloud: *string,\n\tDefaultDomain: *string,\n\tDomainId: *string,\n\tDomainName: *string,\n\tExpireAfter: *string,\n\tInsecure: *bool,\n\tKey: *string,\n\tPassword: *string,\n\tProjectDomainId: *string,\n\tProjectDomainName: *string,\n\tRegionName: *string,\n\tStateName: *string,\n\tTenantId: *string,\n\tTenantName: *string,\n\tToken: *string,\n\tUserDomainId: *string,\n\tUserDomainName: *string,\n\tUserId: *string,\n\tUserName: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions",
        "displayName": "EncodingOptions",
        "id": "cdktf.EncodingOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EncodingOptions.property.DisplayHint",
            "displayName": "DisplayHint",
            "id": "cdktf.EncodingOptions.property.displayHint",
            "optional": true,
            "default": "- no display hint",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "A hint for the Token's purpose when stringifying it."
            },
            "usage": "DisplayHint *string"
          }
        ],
        "docs": {
          "summary": "Properties to string encodings."
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.EncodingOptions {\n\tDisplayHint: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps",
        "displayName": "EtcdBackendProps",
        "id": "cdktf.EtcdBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps.property.Endpoints",
            "displayName": "Endpoints",
            "id": "cdktf.EtcdBackendProps.property.endpoints",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) A space-separated list of the etcd endpoints."
            },
            "usage": "Endpoints *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps.property.Path",
            "displayName": "Path",
            "id": "cdktf.EtcdBackendProps.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The path where to store the state."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps.property.Password",
            "displayName": "Password",
            "id": "cdktf.EtcdBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdBackendProps.property.Username",
            "displayName": "Username",
            "id": "cdktf.EtcdBackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The username."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {
          "summary": "Stores the state in etcd 2.x at a given path.",
          "remarks": "This backend does not support state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/etcd"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.EtcdBackendProps {\n\tEndpoints: *string,\n\tPath: *string,\n\tPassword: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps",
        "displayName": "EtcdV3BackendProps",
        "id": "cdktf.EtcdV3BackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.Endpoints",
            "displayName": "Endpoints",
            "id": "cdktf.EtcdV3BackendProps.property.endpoints",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Required) The list of 'etcd' endpoints which to connect to."
            },
            "usage": "Endpoints *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.CacertPath",
            "displayName": "CacertPath",
            "id": "cdktf.EtcdV3BackendProps.property.cacertPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
            },
            "usage": "CacertPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.CertPath",
            "displayName": "CertPath",
            "id": "cdktf.EtcdV3BackendProps.property.certPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
            },
            "usage": "CertPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.KeyPath",
            "displayName": "KeyPath",
            "id": "cdktf.EtcdV3BackendProps.property.keyPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
            },
            "usage": "KeyPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.Lock",
            "displayName": "Lock",
            "id": "cdktf.EtcdV3BackendProps.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to lock state access.",
              "remarks": "Defaults to true."
            },
            "usage": "Lock *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.Password",
            "displayName": "Password",
            "id": "cdktf.EtcdV3BackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Password used to connect to the etcd cluster."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.EtcdV3BackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
              "remarks": "Defaults to \"\"."
            },
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.EtcdV3BackendProps.property.Username",
            "displayName": "Username",
            "id": "cdktf.EtcdV3BackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Username used to connect to the etcd cluster."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {
          "summary": "Stores the state in the etcd KV store with a given prefix.",
          "remarks": "This backend supports state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/etcdv3"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.EtcdV3BackendProps {\n\tEndpoints: *[]*string,\n\tCacertPath: *string,\n\tCertPath: *string,\n\tKeyPath: *string,\n\tLock: *bool,\n\tPassword: *string,\n\tPrefix: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner",
        "displayName": "FileProvisioner",
        "id": "cdktf.FileProvisioner",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner.property.Destination",
            "displayName": "Destination",
            "id": "cdktf.FileProvisioner.property.destination",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The source file or directory.",
              "remarks": "Specify it either relative to the current working directory or as an absolute path.\nThis argument cannot be combined with content."
            },
            "usage": "Destination *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner.property.Type",
            "displayName": "Type",
            "id": "cdktf.FileProvisioner.property.type",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner.property.Connection",
            "displayName": "Connection",
            "id": "cdktf.FileProvisioner.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect."
            },
            "usage": "Connection interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner.property.Content",
            "displayName": "Content",
            "id": "cdktf.FileProvisioner.property.content",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The destination path to write to on the remote system.",
              "remarks": "See Destination Paths below for more information."
            },
            "usage": "Content *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner.property.Source",
            "displayName": "Source",
            "id": "cdktf.FileProvisioner.property.source",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The direct content to copy on the destination.",
              "remarks": "If destination is a file, the content will be written on that file.\nIn case of a directory, a file named tf-file-content is created inside that directory.\nWe recommend using a file as the destination when using content.\nThis argument cannot be combined with source."
            },
            "usage": "Source *string"
          }
        ],
        "docs": {
          "summary": "The file provisioner copies files or directories from the machine running Terraform to the newly created resource.",
          "remarks": "The file provisioner supports both ssh and winrm type connections.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/file file}"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.FileProvisioner {\n\tDestination: *string,\n\tType: *string,\n\tConnection: interface{},\n\tContent: *string,\n\tSource: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps",
        "displayName": "GcsBackendProps",
        "id": "cdktf.GcsBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.GcsBackendProps.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The name of the GCS bucket.",
              "remarks": "This name must be globally unique."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.AccessToken",
            "displayName": "AccessToken",
            "id": "cdktf.GcsBackendProps.property.accessToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
            },
            "usage": "AccessToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.Credentials",
            "displayName": "Credentials",
            "id": "cdktf.GcsBackendProps.property.credentials",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
              "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
            },
            "usage": "Credentials *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.EncryptionKey",
            "displayName": "EncryptionKey",
            "id": "cdktf.GcsBackendProps.property.encryptionKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
            },
            "usage": "EncryptionKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.ImpersonateServiceAccount",
            "displayName": "ImpersonateServiceAccount",
            "id": "cdktf.GcsBackendProps.property.impersonateServiceAccount",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
              "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
            },
            "usage": "ImpersonateServiceAccount *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.ImpersonateServiceAccountDelegates",
            "displayName": "ImpersonateServiceAccountDelegates",
            "id": "cdktf.GcsBackendProps.property.impersonateServiceAccountDelegates",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) The delegation chain for an impersonating a service account."
            },
            "usage": "ImpersonateServiceAccountDelegates *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.GcsBackendProps.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.GcsBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) GCS prefix inside the bucket.",
              "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
            },
            "usage": "Prefix *string"
          }
        ],
        "docs": {
          "summary": "Stores the state as an object in a configurable prefix in a pre-existing bucket on Google Cloud Storage (GCS).",
          "remarks": "The bucket must exist prior to configuring the backend.\n\nThis backend supports state locking.\n\nWarning! It is highly recommended that you enable Object Versioning on the GCS bucket\nto allow for state recovery in the case of accidental deletions and human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/gcs"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.GcsBackendProps {\n\tBucket: *string,\n\tAccessToken: *string,\n\tCredentials: *string,\n\tEncryptionKey: *string,\n\tImpersonateServiceAccount: *string,\n\tImpersonateServiceAccountDelegates: *[]*string,\n\tPrefix: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps",
        "displayName": "HttpBackendProps",
        "id": "cdktf.HttpBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.Address",
            "displayName": "Address",
            "id": "cdktf.HttpBackendProps.property.address",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Required) The address of the REST endpoint."
            },
            "usage": "Address *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.LockAddress",
            "displayName": "LockAddress",
            "id": "cdktf.HttpBackendProps.property.lockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The address of the lock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "LockAddress *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.LockMethod",
            "displayName": "LockMethod",
            "id": "cdktf.HttpBackendProps.property.lockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when locking.",
              "remarks": "Defaults to LOCK."
            },
            "usage": "LockMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.Password",
            "displayName": "Password",
            "id": "cdktf.HttpBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The password for HTTP basic authentication."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.RetryMax",
            "displayName": "RetryMax",
            "id": "cdktf.HttpBackendProps.property.retryMax",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The number of HTTP request retries.",
              "remarks": "Defaults to 2."
            },
            "usage": "RetryMax *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.RetryWaitMax",
            "displayName": "RetryWaitMax",
            "id": "cdktf.HttpBackendProps.property.retryWaitMax",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 30."
            },
            "usage": "RetryWaitMax *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.RetryWaitMin",
            "displayName": "RetryWaitMin",
            "id": "cdktf.HttpBackendProps.property.retryWaitMin",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 1."
            },
            "usage": "RetryWaitMin *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.SkipCertVerification",
            "displayName": "SkipCertVerification",
            "id": "cdktf.HttpBackendProps.property.skipCertVerification",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Whether to skip TLS verification.",
              "remarks": "Defaults to false."
            },
            "usage": "SkipCertVerification *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.UnlockAddress",
            "displayName": "UnlockAddress",
            "id": "cdktf.HttpBackendProps.property.unlockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The address of the unlock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "UnlockAddress *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.UnlockMethod",
            "displayName": "UnlockMethod",
            "id": "cdktf.HttpBackendProps.property.unlockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when unlocking.",
              "remarks": "Defaults to UNLOCK."
            },
            "usage": "UnlockMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.UpdateMethod",
            "displayName": "UpdateMethod",
            "id": "cdktf.HttpBackendProps.property.updateMethod",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) HTTP method to use when updating state.",
              "remarks": "Defaults to POST."
            },
            "usage": "UpdateMethod *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.HttpBackendProps.property.Username",
            "displayName": "Username",
            "id": "cdktf.HttpBackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The username for HTTP basic authentication."
            },
            "usage": "Username *string"
          }
        ],
        "docs": {
          "summary": "Stores the state using a simple REST client.",
          "remarks": "State will be fetched via GET, updated via POST, and purged with DELETE.\nThe method used for updating is configurable.\n\nThis backend optionally supports state locking.\nWhen locking support is enabled it will use LOCK and UNLOCK requests providing the lock info in the body.\nThe endpoint should return a 423: Locked or 409: Conflict with the holding lock info when\nit's already taken, 200: OK for success. Any other status will be considered an error.\nThe ID of the holding lock info will be added as a query parameter to state updates requests.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/http"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.HttpBackendProps {\n\tAddress: *string,\n\tLockAddress: *string,\n\tLockMethod: *string,\n\tPassword: *string,\n\tRetryMax: *f64,\n\tRetryWaitMax: *f64,\n\tRetryWaitMin: *f64,\n\tSkipCertVerification: *bool,\n\tUnlockAddress: *string,\n\tUnlockMethod: *string,\n\tUpdateMethod: *string,\n\tUsername: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyAnyValueOptions",
        "displayName": "LazyAnyValueOptions",
        "id": "cdktf.LazyAnyValueOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyAnyValueOptions.property.DisplayHint",
            "displayName": "DisplayHint",
            "id": "cdktf.LazyAnyValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "DisplayHint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyAnyValueOptions.property.OmitEmptyArray",
            "displayName": "OmitEmptyArray",
            "id": "cdktf.LazyAnyValueOptions.property.omitEmptyArray",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "If the produced value is an array and it is empty, return 'undefined' instead."
            },
            "usage": "OmitEmptyArray *bool"
          }
        ],
        "docs": {
          "summary": "Options for creating lazy untyped tokens."
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.LazyAnyValueOptions {\n\tDisplayHint: *string,\n\tOmitEmptyArray: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyListValueOptions",
        "displayName": "LazyListValueOptions",
        "id": "cdktf.LazyListValueOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyListValueOptions.property.DisplayHint",
            "displayName": "DisplayHint",
            "id": "cdktf.LazyListValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "DisplayHint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyListValueOptions.property.OmitEmpty",
            "displayName": "OmitEmpty",
            "id": "cdktf.LazyListValueOptions.property.omitEmpty",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "If the produced list is empty, return 'undefined' instead."
            },
            "usage": "OmitEmpty *bool"
          }
        ],
        "docs": {
          "summary": "Options for creating a lazy list token."
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.LazyListValueOptions {\n\tDisplayHint: *string,\n\tOmitEmpty: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyStringValueOptions",
        "displayName": "LazyStringValueOptions",
        "id": "cdktf.LazyStringValueOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyStringValueOptions.property.DisplayHint",
            "displayName": "DisplayHint",
            "id": "cdktf.LazyStringValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "DisplayHint *string"
          }
        ],
        "docs": {
          "summary": "Options for creating a lazy string token."
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.LazyStringValueOptions {\n\tDisplayHint: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackendProps",
        "displayName": "LocalBackendProps",
        "id": "cdktf.LocalBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackendProps.property.Path",
            "displayName": "Path",
            "id": "cdktf.LocalBackendProps.property.path",
            "optional": true,
            "default": "- defaults to terraform.${stackId}.tfstate",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Path where the state file is stored."
            },
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalBackendProps.property.WorkspaceDir",
            "displayName": "WorkspaceDir",
            "id": "cdktf.LocalBackendProps.property.workspaceDir",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The path to non-default workspaces."
            },
            "usage": "WorkspaceDir *string"
          }
        ],
        "docs": {
          "summary": "The local backend stores state on the local filesystem, locks that state using system APIs, and performs operations locally.",
          "remarks": "Read more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/local"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.LocalBackendProps {\n\tPath: *string,\n\tWorkspaceDir: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner",
        "displayName": "LocalExecProvisioner",
        "id": "cdktf.LocalExecProvisioner",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.Command",
            "displayName": "Command",
            "id": "cdktf.LocalExecProvisioner.property.command",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "This is the command to execute.",
              "remarks": "It can be provided as a relative path to the current working directory or as an absolute path.\nIt is evaluated in a shell, and can use environment variables or Terraform variables."
            },
            "usage": "Command *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.Type",
            "displayName": "Type",
            "id": "cdktf.LocalExecProvisioner.property.type",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.Environment",
            "displayName": "Environment",
            "id": "cdktf.LocalExecProvisioner.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "A record of key value pairs representing the environment of the executed command.",
              "remarks": "It inherits the current process environment."
            },
            "usage": "Environment *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.Interpreter",
            "displayName": "Interpreter",
            "id": "cdktf.LocalExecProvisioner.property.interpreter",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "If provided, this is a list of interpreter arguments used to execute the command.",
              "remarks": "The first argument is the interpreter itself.\nIt can be provided as a relative path to the current working directory or as an absolute path\nThe remaining arguments are appended prior to the command.\nThis allows building command lines of the form \"/bin/bash\", \"-c\", \"echo foo\".\nIf interpreter is unspecified, sensible defaults will be chosen based on the system OS."
            },
            "usage": "Interpreter *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.When",
            "displayName": "When",
            "id": "cdktf.LocalExecProvisioner.property.when",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "If provided, specifies when Terraform will execute the command.",
              "remarks": "For example, when = destroy specifies that the provisioner will run when the associated resource is destroyed"
            },
            "usage": "When *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner.property.WorkingDir",
            "displayName": "WorkingDir",
            "id": "cdktf.LocalExecProvisioner.property.workingDir",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "If provided, specifies the working directory where command will be executed.",
              "remarks": "It can be provided as a relative path to the current working directory or as an absolute path.\nThe directory must exist."
            },
            "usage": "WorkingDir *string"
          }
        ],
        "docs": {
          "summary": "The local-exec provisioner invokes a local executable after a resource is created.",
          "remarks": "This invokes a process on the machine running Terraform, not on the resource.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/local-exec local-exec}"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.LocalExecProvisioner {\n\tCommand: *string,\n\tType: *string,\n\tEnvironment: *map[string]*string,\n\tInterpreter: *[]*string,\n\tWhen: *string,\n\tWorkingDir: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps",
        "displayName": "MantaBackendProps",
        "id": "cdktf.MantaBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.Account",
            "displayName": "Account",
            "id": "cdktf.MantaBackendProps.property.account",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Account *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.KeyId",
            "displayName": "KeyId",
            "id": "cdktf.MantaBackendProps.property.keyId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "KeyId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.Path",
            "displayName": "Path",
            "id": "cdktf.MantaBackendProps.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.InsecureSkipTlsVerify",
            "displayName": "InsecureSkipTlsVerify",
            "id": "cdktf.MantaBackendProps.property.insecureSkipTlsVerify",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "InsecureSkipTlsVerify *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.KeyMaterial",
            "displayName": "KeyMaterial",
            "id": "cdktf.MantaBackendProps.property.keyMaterial",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "KeyMaterial *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.ObjectName",
            "displayName": "ObjectName",
            "id": "cdktf.MantaBackendProps.property.objectName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ObjectName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.Url",
            "displayName": "Url",
            "id": "cdktf.MantaBackendProps.property.url",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Url *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MantaBackendProps.property.User",
            "displayName": "User",
            "id": "cdktf.MantaBackendProps.property.user",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "User *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.MantaBackendProps {\n\tAccount: *string,\n\tKeyId: *string,\n\tPath: *string,\n\tInsecureSkipTlsVerify: *bool,\n\tKeyMaterial: *string,\n\tObjectName: *string,\n\tUrl: *string,\n\tUser: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole",
        "displayName": "OssAssumeRole",
        "id": "cdktf.OssAssumeRole",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole.property.RoleArn",
            "displayName": "RoleArn",
            "id": "cdktf.OssAssumeRole.property.roleArn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "RoleArn *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole.property.Policy",
            "displayName": "Policy",
            "id": "cdktf.OssAssumeRole.property.policy",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Policy *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole.property.SessionExpiration",
            "displayName": "SessionExpiration",
            "id": "cdktf.OssAssumeRole.property.sessionExpiration",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "SessionExpiration *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole.property.SessionName",
            "displayName": "SessionName",
            "id": "cdktf.OssAssumeRole.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SessionName *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.OssAssumeRole {\n\tRoleArn: *string,\n\tPolicy: *string,\n\tSessionExpiration: *f64,\n\tSessionName: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps",
        "displayName": "OssBackendProps",
        "id": "cdktf.OssBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.OssBackendProps.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.OssBackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.OssBackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.AssumeRole",
            "displayName": "AssumeRole",
            "id": "cdktf.OssBackendProps.property.assumeRole",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.OssAssumeRole",
                  "displayName": "OssAssumeRole",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "AssumeRole OssAssumeRole"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.EcsRoleName",
            "displayName": "EcsRoleName",
            "id": "cdktf.OssBackendProps.property.ecsRoleName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "EcsRoleName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.OssBackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.OssBackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Key",
            "displayName": "Key",
            "id": "cdktf.OssBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Prefix",
            "displayName": "Prefix",
            "id": "cdktf.OssBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Prefix *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Profile",
            "displayName": "Profile",
            "id": "cdktf.OssBackendProps.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Profile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.Region",
            "displayName": "Region",
            "id": "cdktf.OssBackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.OssBackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SecretKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.SecurityToken",
            "displayName": "SecurityToken",
            "id": "cdktf.OssBackendProps.property.securityToken",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SecurityToken *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.SharedCredentialsFile",
            "displayName": "SharedCredentialsFile",
            "id": "cdktf.OssBackendProps.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SharedCredentialsFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.TablestoreEndpoint",
            "displayName": "TablestoreEndpoint",
            "id": "cdktf.OssBackendProps.property.tablestoreEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TablestoreEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.OssBackendProps.property.TablestoreTable",
            "displayName": "TablestoreTable",
            "id": "cdktf.OssBackendProps.property.tablestoreTable",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TablestoreTable *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.OssBackendProps {\n\tBucket: *string,\n\tAccessKey: *string,\n\tAcl: *string,\n\tAssumeRole: github.com/hashicorp/terraform-cdk-go/cdktf.OssAssumeRole,\n\tEcsRoleName: *string,\n\tEncrypt: *bool,\n\tEndpoint: *string,\n\tKey: *string,\n\tPrefix: *string,\n\tProfile: *string,\n\tRegion: *string,\n\tSecretKey: *string,\n\tSecurityToken: *string,\n\tSharedCredentialsFile: *string,\n\tTablestoreEndpoint: *string,\n\tTablestoreTable: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackendProps",
        "displayName": "PgBackendProps",
        "id": "cdktf.PgBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackendProps.property.ConnStr",
            "displayName": "ConnStr",
            "id": "cdktf.PgBackendProps.property.connStr",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ConnStr *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackendProps.property.SchemaName",
            "displayName": "SchemaName",
            "id": "cdktf.PgBackendProps.property.schemaName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SchemaName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PgBackendProps.property.SkipSchemaCreation",
            "displayName": "SkipSchemaCreation",
            "id": "cdktf.PgBackendProps.property.skipSchemaCreation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "SkipSchemaCreation *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.PgBackendProps {\n\tConnStr: *string,\n\tSchemaName: *string,\n\tSkipSchemaCreation: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps",
        "displayName": "RemoteBackendProps",
        "id": "cdktf.RemoteBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps.property.Organization",
            "displayName": "Organization",
            "id": "cdktf.RemoteBackendProps.property.organization",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Organization *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps.property.Workspaces",
            "displayName": "Workspaces",
            "id": "cdktf.RemoteBackendProps.property.workspaces",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IRemoteWorkspace",
                  "displayName": "IRemoteWorkspace",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Workspaces IRemoteWorkspace"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps.property.Hostname",
            "displayName": "Hostname",
            "id": "cdktf.RemoteBackendProps.property.hostname",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Hostname *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteBackendProps.property.Token",
            "displayName": "Token",
            "id": "cdktf.RemoteBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Token *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.RemoteBackendProps {\n\tOrganization: *string,\n\tWorkspaces: github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace,\n\tHostname: *string,\n\tToken: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner",
        "displayName": "RemoteExecProvisioner",
        "id": "cdktf.RemoteExecProvisioner",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner.property.Type",
            "displayName": "Type",
            "id": "cdktf.RemoteExecProvisioner.property.type",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner.property.Connection",
            "displayName": "Connection",
            "id": "cdktf.RemoteExecProvisioner.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
              "remarks": "A connection must be provided here or in the parent resource."
            },
            "usage": "Connection interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner.property.Inline",
            "displayName": "Inline",
            "id": "cdktf.RemoteExecProvisioner.property.inline",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "This is a list of command strings.",
              "remarks": "They are executed in the order they are provided.\nThis cannot be provided with script or scripts."
            },
            "usage": "Inline *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner.property.Script",
            "displayName": "Script",
            "id": "cdktf.RemoteExecProvisioner.property.script",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "This is a path (relative or absolute) to a local script that will be copied to the remote resource and then executed.",
              "remarks": "This cannot be provided with inline or scripts."
            },
            "usage": "Script *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner.property.Scripts",
            "displayName": "Scripts",
            "id": "cdktf.RemoteExecProvisioner.property.scripts",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "This is a list of paths (relative or absolute) to local scripts that will be copied to the remote resource and then executed.",
              "remarks": "They are executed in the order they are provided.\nThis cannot be provided with inline or script."
            },
            "usage": "Scripts *[]*string"
          }
        ],
        "docs": {
          "summary": "The remote-exec provisioner invokes a script on a remote resource after it is created.",
          "remarks": "This can be used to run a configuration management tool, bootstrap into a cluster, etc\nThe remote-exec provisioner requires a connection and supports both ssh and winrm.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/remote-exec remote-exec}"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.RemoteExecProvisioner {\n\tType: *string,\n\tConnection: interface{},\n\tInline: *[]*string,\n\tScript: *string,\n\tScripts: *[]*string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ResolveOptions",
        "displayName": "ResolveOptions",
        "id": "cdktf.ResolveOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ResolveOptions.property.Resolver",
            "displayName": "Resolver",
            "id": "cdktf.ResolveOptions.property.resolver",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITokenResolver",
                  "displayName": "ITokenResolver",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The resolver to apply to any resolvable tokens found."
            },
            "usage": "Resolver ITokenResolver"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ResolveOptions.property.Scope",
            "displayName": "Scope",
            "id": "cdktf.ResolveOptions.property.scope",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.IConstruct",
                  "displayName": "IConstruct",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The scope from which resolution is performed."
            },
            "usage": "Scope IConstruct"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ResolveOptions.property.Preparing",
            "displayName": "Preparing",
            "id": "cdktf.ResolveOptions.property.preparing",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Whether the resolution is being executed during the prepare phase or not."
            },
            "usage": "Preparing *bool"
          }
        ],
        "docs": {
          "summary": "Options to the resolve() operation.",
          "remarks": "NOT the same as the ResolveContext; ResolveContext is exposed to Token\nimplementors and resolution hooks, whereas this struct is just to bundle\na number of things that would otherwise be arguments to resolve() in a\nreadable way."
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.ResolveOptions {\n\tResolver: github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver,\n\tScope: github.com/aws/constructs-go/constructs/v10.IConstruct,\n\tPreparing: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps",
        "displayName": "S3BackendProps",
        "id": "cdktf.S3BackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Bucket",
            "displayName": "Bucket",
            "id": "cdktf.S3BackendProps.property.bucket",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Name of the S3 Bucket."
            },
            "usage": "Bucket *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Key",
            "displayName": "Key",
            "id": "cdktf.S3BackendProps.property.key",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Path to the state file inside the S3 Bucket.",
              "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
            },
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.AccessKey",
            "displayName": "AccessKey",
            "id": "cdktf.S3BackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) AWS access key.",
              "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
            },
            "usage": "AccessKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Acl",
            "displayName": "Acl",
            "id": "cdktf.S3BackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Canned ACL to be applied to the state file."
            },
            "usage": "Acl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.AssumeRolePolicy",
            "displayName": "AssumeRolePolicy",
            "id": "cdktf.S3BackendProps.property.assumeRolePolicy",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "AssumeRolePolicy *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.AssumeRolePolicyArns",
            "displayName": "AssumeRolePolicyArns",
            "id": "cdktf.S3BackendProps.property.assumeRolePolicyArns",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "AssumeRolePolicyArns *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.AssumeRoleTags",
            "displayName": "AssumeRoleTags",
            "id": "cdktf.S3BackendProps.property.assumeRoleTags",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Map of assume role session tags."
            },
            "usage": "AssumeRoleTags *map[string]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.AssumeRoleTransitiveTagKeys",
            "displayName": "AssumeRoleTransitiveTagKeys",
            "id": "cdktf.S3BackendProps.property.assumeRoleTransitiveTagKeys",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
            },
            "usage": "AssumeRoleTransitiveTagKeys *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.DynamodbEndpoint",
            "displayName": "DynamodbEndpoint",
            "id": "cdktf.S3BackendProps.property.dynamodbEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
              "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
            },
            "usage": "DynamodbEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.DynamodbTable",
            "displayName": "DynamodbTable",
            "id": "cdktf.S3BackendProps.property.dynamodbTable",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
              "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
            },
            "usage": "DynamodbTable *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Encrypt",
            "displayName": "Encrypt",
            "id": "cdktf.S3BackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Enable server side encryption of the state file."
            },
            "usage": "Encrypt *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Endpoint",
            "displayName": "Endpoint",
            "id": "cdktf.S3BackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS S3 API.",
              "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
            },
            "usage": "Endpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.ExternalId",
            "displayName": "ExternalId",
            "id": "cdktf.S3BackendProps.property.externalId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) External identifier to use when assuming the role."
            },
            "usage": "ExternalId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.ForcePathStyle",
            "displayName": "ForcePathStyle",
            "id": "cdktf.S3BackendProps.property.forcePathStyle",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
            },
            "usage": "ForcePathStyle *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.IamEndpoint",
            "displayName": "IamEndpoint",
            "id": "cdktf.S3BackendProps.property.iamEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
              "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
            },
            "usage": "IamEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.KmsKeyId",
            "displayName": "KmsKeyId",
            "id": "cdktf.S3BackendProps.property.kmsKeyId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
              "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
            },
            "usage": "KmsKeyId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.MaxRetries",
            "displayName": "MaxRetries",
            "id": "cdktf.S3BackendProps.property.maxRetries",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
              "remarks": "Defaults to 5."
            },
            "usage": "MaxRetries *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Profile",
            "displayName": "Profile",
            "id": "cdktf.S3BackendProps.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
            },
            "usage": "Profile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Region",
            "displayName": "Region",
            "id": "cdktf.S3BackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
              "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
            },
            "usage": "Region *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.RoleArn",
            "displayName": "RoleArn",
            "id": "cdktf.S3BackendProps.property.roleArn",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
            },
            "usage": "RoleArn *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SecretKey",
            "displayName": "SecretKey",
            "id": "cdktf.S3BackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) AWS secret access key.",
              "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
            },
            "usage": "SecretKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SessionName",
            "displayName": "SessionName",
            "id": "cdktf.S3BackendProps.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Session name to use when assuming the role."
            },
            "usage": "SessionName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SharedCredentialsFile",
            "displayName": "SharedCredentialsFile",
            "id": "cdktf.S3BackendProps.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Path to the AWS shared credentials file.",
              "remarks": "Defaults to ~/.aws/credentials."
            },
            "usage": "SharedCredentialsFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SkipCredentialsValidation",
            "displayName": "SkipCredentialsValidation",
            "id": "cdktf.S3BackendProps.property.skipCredentialsValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip credentials validation via the STS API."
            },
            "usage": "SkipCredentialsValidation *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SkipMetadataApiCheck",
            "displayName": "SkipMetadataApiCheck",
            "id": "cdktf.S3BackendProps.property.skipMetadataApiCheck",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip usage of EC2 Metadata API."
            },
            "usage": "SkipMetadataApiCheck *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SkipRegionValidation",
            "displayName": "SkipRegionValidation",
            "id": "cdktf.S3BackendProps.property.skipRegionValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "(Optional) Skip validation of provided region name."
            },
            "usage": "SkipRegionValidation *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.SseCustomerKey",
            "displayName": "SseCustomerKey",
            "id": "cdktf.S3BackendProps.property.sseCustomerKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
              "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
            },
            "usage": "SseCustomerKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.StsEndpoint",
            "displayName": "StsEndpoint",
            "id": "cdktf.S3BackendProps.property.stsEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
              "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
            },
            "usage": "StsEndpoint *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.Token",
            "displayName": "Token",
            "id": "cdktf.S3BackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
              "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
            },
            "usage": "Token *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.S3BackendProps.property.WorkspaceKeyPrefix",
            "displayName": "WorkspaceKeyPrefix",
            "id": "cdktf.S3BackendProps.property.workspaceKeyPrefix",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "(Optional) Prefix applied to the state path inside the bucket.",
              "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
            },
            "usage": "WorkspaceKeyPrefix *string"
          }
        ],
        "docs": {
          "summary": "Stores the state as a given key in a given bucket on Amazon S3.",
          "remarks": "This backend\nalso supports state locking and consistency checking via Dynamo DB, which\ncan be enabled by setting the dynamodb_table field to an existing DynamoDB\ntable name. A single DynamoDB table can be used to lock multiple remote\nstate files. Terraform generates key names that include the values of the\nbucket and key variables.\n\nWarning! It is highly recommended that you enable Bucket Versioning on the\nS3 bucket to allow for state recovery in the case of accidental deletions\nand human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/s3"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.S3BackendProps {\n\tBucket: *string,\n\tKey: *string,\n\tAccessKey: *string,\n\tAcl: *string,\n\tAssumeRolePolicy: *string,\n\tAssumeRolePolicyArns: *[]*string,\n\tAssumeRoleTags: *map[string]*string,\n\tAssumeRoleTransitiveTagKeys: *[]*string,\n\tDynamodbEndpoint: *string,\n\tDynamodbTable: *string,\n\tEncrypt: *bool,\n\tEndpoint: *string,\n\tExternalId: *string,\n\tForcePathStyle: *bool,\n\tIamEndpoint: *string,\n\tKmsKeyId: *string,\n\tMaxRetries: *f64,\n\tProfile: *string,\n\tRegion: *string,\n\tRoleArn: *string,\n\tSecretKey: *string,\n\tSessionName: *string,\n\tSharedCredentialsFile: *string,\n\tSkipCredentialsValidation: *bool,\n\tSkipMetadataApiCheck: *bool,\n\tSkipRegionValidation: *bool,\n\tSseCustomerKey: *string,\n\tStsEndpoint: *string,\n\tToken: *string,\n\tWorkspaceKeyPrefix: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
        "displayName": "SSHProvisionerConnection",
        "id": "cdktf.SSHProvisionerConnection",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Host",
            "displayName": "Host",
            "id": "cdktf.SSHProvisionerConnection.property.host",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The address of the resource to connect to."
            },
            "usage": "Host *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Type",
            "displayName": "Type",
            "id": "cdktf.SSHProvisionerConnection.property.type",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The connection type.",
              "remarks": "Valid values are \"ssh\" and \"winrm\".\nProvisioners typically assume that the remote system runs Microsoft Windows when using WinRM.\nBehaviors based on the SSH target_platform will force Windows-specific behavior for WinRM, unless otherwise specified."
            },
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Agent",
            "displayName": "Agent",
            "id": "cdktf.SSHProvisionerConnection.property.agent",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Set to false to disable using ssh-agent to authenticate.",
              "remarks": "On Windows the only supported SSH authentication agent is Pageant."
            },
            "usage": "Agent *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.AgentIdentity",
            "displayName": "AgentIdentity",
            "id": "cdktf.SSHProvisionerConnection.property.agentIdentity",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The preferred identity from the ssh agent for authentication."
            },
            "usage": "AgentIdentity *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionCertificate",
            "displayName": "BastionCertificate",
            "id": "cdktf.SSHProvisionerConnection.property.bastionCertificate",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The contents of a signed CA Certificate.",
              "remarks": "The certificate argument must be used in conjunction with a bastion_private_key.\nThese can be loaded from a file on disk using the the file function."
            },
            "usage": "BastionCertificate *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionHost",
            "displayName": "BastionHost",
            "id": "cdktf.SSHProvisionerConnection.property.bastionHost",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Setting this enables the bastion Host connection.",
              "remarks": "The provisioner will connect to bastion_host first, and then connect from there to host."
            },
            "usage": "BastionHost *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionHostKey",
            "displayName": "BastionHostKey",
            "id": "cdktf.SSHProvisionerConnection.property.bastionHostKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The public key from the remote host or the signing CA, used to verify the host connection."
            },
            "usage": "BastionHostKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionPassword",
            "displayName": "BastionPassword",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPassword",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The password to use for the bastion host."
            },
            "usage": "BastionPassword *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionPort",
            "displayName": "BastionPort",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPort",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "The port to use connect to the bastion host."
            },
            "usage": "BastionPort *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionPrivateKey",
            "displayName": "BastionPrivateKey",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPrivateKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The contents of an SSH key file to use for the bastion host.",
              "remarks": "These can be loaded from a file on disk using the file function."
            },
            "usage": "BastionPrivateKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.BastionUser",
            "displayName": "BastionUser",
            "id": "cdktf.SSHProvisionerConnection.property.bastionUser",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The user for the connection to the bastion host."
            },
            "usage": "BastionUser *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Certificate",
            "displayName": "Certificate",
            "id": "cdktf.SSHProvisionerConnection.property.certificate",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The contents of a signed CA Certificate.",
              "remarks": "The certificate argument must be used in conjunction with a private_key.\nThese can be loaded from a file on disk using the the file function."
            },
            "usage": "Certificate *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.HostKey",
            "displayName": "HostKey",
            "id": "cdktf.SSHProvisionerConnection.property.hostKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The public key from the remote host or the signing CA, used to verify the connection."
            },
            "usage": "HostKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Password",
            "displayName": "Password",
            "id": "cdktf.SSHProvisionerConnection.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The password to use for the connection."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Port",
            "displayName": "Port",
            "id": "cdktf.SSHProvisionerConnection.property.port",
            "optional": true,
            "default": "22",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "The port to connect to."
            },
            "usage": "Port *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.PrivateKey",
            "displayName": "PrivateKey",
            "id": "cdktf.SSHProvisionerConnection.property.privateKey",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The contents of an SSH key to use for the connection.",
              "remarks": "These can be loaded from a file on disk using the file function.\nThis takes preference over password if provided."
            },
            "usage": "PrivateKey *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ProxyHost",
            "displayName": "ProxyHost",
            "id": "cdktf.SSHProvisionerConnection.property.proxyHost",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "Setting this enables the SSH over HTTP connection.",
              "remarks": "This host will be connected to first, and then the host or bastion_host connection will be made from there."
            },
            "usage": "ProxyHost *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ProxyPort",
            "displayName": "ProxyPort",
            "id": "cdktf.SSHProvisionerConnection.property.proxyPort",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "The port to use connect to the proxy host."
            },
            "usage": "ProxyPort *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ProxyScheme",
            "displayName": "ProxyScheme",
            "id": "cdktf.SSHProvisionerConnection.property.proxyScheme",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The ssh connection also supports the following fields to facilitate connections by SSH over HTTP proxy."
            },
            "usage": "ProxyScheme *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ProxyUserName",
            "displayName": "ProxyUserName",
            "id": "cdktf.SSHProvisionerConnection.property.proxyUserName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The username to use connect to the private proxy host.",
              "remarks": "This argument should be specified only if authentication is required for the HTTP Proxy server."
            },
            "usage": "ProxyUserName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ProxyUserPassword",
            "displayName": "ProxyUserPassword",
            "id": "cdktf.SSHProvisionerConnection.property.proxyUserPassword",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The password to use connect to the private proxy host.",
              "remarks": "This argument should be specified only if authentication is required for the HTTP Proxy server."
            },
            "usage": "ProxyUserPassword *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.ScriptPath",
            "displayName": "ScriptPath",
            "id": "cdktf.SSHProvisionerConnection.property.scriptPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The path used to copy scripts meant for remote execution.",
              "remarks": "Refer to {@link https://www.terraform.io/language/resources/provisioners/connection#how-provisioners-execute-remote-scripts How Provisioners Execute Remote Scripts below for more details}"
            },
            "usage": "ScriptPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.TargetPlatform",
            "displayName": "TargetPlatform",
            "id": "cdktf.SSHProvisionerConnection.property.targetPlatform",
            "optional": true,
            "default": "unix",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The target platform to connect to.",
              "remarks": "Valid values are \"windows\" and \"unix\".\nIf the platform is set to windows, the default script_path is c:\\windows\\temp\\terraform_%RAND%.cmd, assuming the SSH default shell is cmd.exe.\nIf the SSH default shell is PowerShell, set script_path to \"c:/windows/temp/terraform_%RAND%.ps1\""
            },
            "usage": "TargetPlatform *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.Timeout",
            "displayName": "Timeout",
            "id": "cdktf.SSHProvisionerConnection.property.timeout",
            "optional": true,
            "default": "5m",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The timeout to wait for the connection to become available.",
              "remarks": "Should be provided as a string (e.g., \"30s\" or \"5m\".)"
            },
            "usage": "Timeout *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection.property.User",
            "displayName": "User",
            "id": "cdktf.SSHProvisionerConnection.property.user",
            "optional": true,
            "default": "root",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The user to use for the connection."
            },
            "usage": "User *string"
          }
        ],
        "docs": {
          "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
          "remarks": "See {@link https://www.terraform.io/language/resources/provisioners/connection connection}"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.SSHProvisionerConnection {\n\tHost: *string,\n\tType: *string,\n\tAgent: *string,\n\tAgentIdentity: *string,\n\tBastionCertificate: *string,\n\tBastionHost: *string,\n\tBastionHostKey: *string,\n\tBastionPassword: *string,\n\tBastionPort: *f64,\n\tBastionPrivateKey: *string,\n\tBastionUser: *string,\n\tCertificate: *string,\n\tHostKey: *string,\n\tPassword: *string,\n\tPort: *f64,\n\tPrivateKey: *string,\n\tProxyHost: *string,\n\tProxyPort: *f64,\n\tProxyScheme: *string,\n\tProxyUserName: *string,\n\tProxyUserPassword: *string,\n\tScriptPath: *string,\n\tTargetPlatform: *string,\n\tTimeout: *string,\n\tUser: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation",
        "displayName": "StackAnnotation",
        "id": "cdktf.StackAnnotation",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation.property.ConstructPath",
            "displayName": "ConstructPath",
            "id": "cdktf.StackAnnotation.property.constructPath",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ConstructPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation.property.Level",
            "displayName": "Level",
            "id": "cdktf.StackAnnotation.property.level",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AnnotationMetadataEntryType",
                  "displayName": "AnnotationMetadataEntryType",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Level AnnotationMetadataEntryType"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation.property.Message",
            "displayName": "Message",
            "id": "cdktf.StackAnnotation.property.message",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Message *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation.property.Stacktrace",
            "displayName": "Stacktrace",
            "id": "cdktf.StackAnnotation.property.stacktrace",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "Stacktrace *[]*string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.StackAnnotation {\n\tConstructPath: *string,\n\tLevel: github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType,\n\tMessage: *string,\n\tStacktrace: *[]*string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest",
        "displayName": "StackManifest",
        "id": "cdktf.StackManifest",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.Annotations",
            "displayName": "Annotations",
            "id": "cdktf.StackManifest.property.annotations",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackAnnotation",
                      "displayName": "StackAnnotation",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Annotations *[]StackAnnotation"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.ConstructPath",
            "displayName": "ConstructPath",
            "id": "cdktf.StackManifest.property.constructPath",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ConstructPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.Dependencies",
            "displayName": "Dependencies",
            "id": "cdktf.StackManifest.property.dependencies",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "Dependencies *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.Name",
            "displayName": "Name",
            "id": "cdktf.StackManifest.property.name",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Name *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.SynthesizedStackPath",
            "displayName": "SynthesizedStackPath",
            "id": "cdktf.StackManifest.property.synthesizedStackPath",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "SynthesizedStackPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest.property.WorkingDirectory",
            "displayName": "WorkingDirectory",
            "id": "cdktf.StackManifest.property.workingDirectory",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "WorkingDirectory *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.StackManifest {\n\tAnnotations: *[]github.com/hashicorp/terraform-cdk-go/cdktf.StackAnnotation,\n\tConstructPath: *string,\n\tDependencies: *[]*string,\n\tName: *string,\n\tSynthesizedStackPath: *string,\n\tWorkingDirectory: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps",
        "displayName": "SwiftBackendProps",
        "id": "cdktf.SwiftBackendProps",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Container",
            "displayName": "Container",
            "id": "cdktf.SwiftBackendProps.property.container",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Container *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ApplicationCredentialId",
            "displayName": "ApplicationCredentialId",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ApplicationCredentialName",
            "displayName": "ApplicationCredentialName",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ApplicationCredentialSecret",
            "displayName": "ApplicationCredentialSecret",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialSecret",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ApplicationCredentialSecret *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ArchiveContainer",
            "displayName": "ArchiveContainer",
            "id": "cdktf.SwiftBackendProps.property.archiveContainer",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ArchiveContainer *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.AuthUrl",
            "displayName": "AuthUrl",
            "id": "cdktf.SwiftBackendProps.property.authUrl",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "AuthUrl *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.CacertFile",
            "displayName": "CacertFile",
            "id": "cdktf.SwiftBackendProps.property.cacertFile",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "CacertFile *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Cert",
            "displayName": "Cert",
            "id": "cdktf.SwiftBackendProps.property.cert",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Cert *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Cloud",
            "displayName": "Cloud",
            "id": "cdktf.SwiftBackendProps.property.cloud",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Cloud *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.DefaultDomain",
            "displayName": "DefaultDomain",
            "id": "cdktf.SwiftBackendProps.property.defaultDomain",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DefaultDomain *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.DomainId",
            "displayName": "DomainId",
            "id": "cdktf.SwiftBackendProps.property.domainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.DomainName",
            "displayName": "DomainName",
            "id": "cdktf.SwiftBackendProps.property.domainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "DomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ExpireAfter",
            "displayName": "ExpireAfter",
            "id": "cdktf.SwiftBackendProps.property.expireAfter",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ExpireAfter *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Insecure",
            "displayName": "Insecure",
            "id": "cdktf.SwiftBackendProps.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Insecure *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Key",
            "displayName": "Key",
            "id": "cdktf.SwiftBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Key *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Password",
            "displayName": "Password",
            "id": "cdktf.SwiftBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ProjectDomainId",
            "displayName": "ProjectDomainId",
            "id": "cdktf.SwiftBackendProps.property.projectDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProjectDomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.ProjectDomainName",
            "displayName": "ProjectDomainName",
            "id": "cdktf.SwiftBackendProps.property.projectDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProjectDomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.RegionName",
            "displayName": "RegionName",
            "id": "cdktf.SwiftBackendProps.property.regionName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "RegionName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.StateName",
            "displayName": "StateName",
            "id": "cdktf.SwiftBackendProps.property.stateName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "StateName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.TenantId",
            "displayName": "TenantId",
            "id": "cdktf.SwiftBackendProps.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TenantId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.TenantName",
            "displayName": "TenantName",
            "id": "cdktf.SwiftBackendProps.property.tenantName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TenantName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.Token",
            "displayName": "Token",
            "id": "cdktf.SwiftBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Token *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.UserDomainId",
            "displayName": "UserDomainId",
            "id": "cdktf.SwiftBackendProps.property.userDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserDomainId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.UserDomainName",
            "displayName": "UserDomainName",
            "id": "cdktf.SwiftBackendProps.property.userDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserDomainName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.UserId",
            "displayName": "UserId",
            "id": "cdktf.SwiftBackendProps.property.userId",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserId *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SwiftBackendProps.property.UserName",
            "displayName": "UserName",
            "id": "cdktf.SwiftBackendProps.property.userName",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UserName *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.SwiftBackendProps {\n\tContainer: *string,\n\tApplicationCredentialId: *string,\n\tApplicationCredentialName: *string,\n\tApplicationCredentialSecret: *string,\n\tArchiveContainer: *string,\n\tAuthUrl: *string,\n\tCacertFile: *string,\n\tCert: *string,\n\tCloud: *string,\n\tDefaultDomain: *string,\n\tDomainId: *string,\n\tDomainName: *string,\n\tExpireAfter: *string,\n\tInsecure: *bool,\n\tKey: *string,\n\tPassword: *string,\n\tProjectDomainId: *string,\n\tProjectDomainName: *string,\n\tRegionName: *string,\n\tStateName: *string,\n\tTenantId: *string,\n\tTenantName: *string,\n\tToken: *string,\n\tUserDomainId: *string,\n\tUserDomainName: *string,\n\tUserId: *string,\n\tUserName: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAssetConfig",
        "displayName": "TerraformAssetConfig",
        "id": "cdktf.TerraformAssetConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAssetConfig.property.Path",
            "displayName": "Path",
            "id": "cdktf.TerraformAssetConfig.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAssetConfig.property.AssetHash",
            "displayName": "AssetHash",
            "id": "cdktf.TerraformAssetConfig.property.assetHash",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "AssetHash *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformAssetConfig.property.Type",
            "displayName": "Type",
            "id": "cdktf.TerraformAssetConfig.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AssetType",
                  "displayName": "AssetType",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Type AssetType"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformAssetConfig {\n\tPath: *string,\n\tAssetHash: *string,\n\tType: github.com/hashicorp/terraform-cdk-go/cdktf.AssetType,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.TerraformConstructor",
        "displayName": "TerraformConstructor",
        "id": "cdktf.testingMatchers.TerraformConstructor",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.testingMatchers.TerraformConstructor.property.TfResourceType",
            "displayName": "TfResourceType",
            "id": "cdktf.testingMatchers.TerraformConstructor.property.tfResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TfResourceType *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf/testingmatchers\"\n\n&testingmatchers.TerraformConstructor {\n\tTfResourceType: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElementMetadata",
        "displayName": "TerraformElementMetadata",
        "id": "cdktf.TerraformElementMetadata",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElementMetadata.property.Path",
            "displayName": "Path",
            "id": "cdktf.TerraformElementMetadata.property.path",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Path *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElementMetadata.property.StackTrace",
            "displayName": "StackTrace",
            "id": "cdktf.TerraformElementMetadata.property.stackTrace",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "StackTrace *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformElementMetadata.property.UniqueId",
            "displayName": "UniqueId",
            "id": "cdktf.TerraformElementMetadata.property.uniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "UniqueId *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformElementMetadata {\n\tPath: *string,\n\tStackTrace: *[]*string,\n\tUniqueId: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions",
        "displayName": "TerraformHclModuleOptions",
        "id": "cdktf.TerraformHclModuleOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformHclModuleOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformHclModuleOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "ForEach ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.Providers",
            "displayName": "Providers",
            "id": "cdktf.TerraformHclModuleOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Providers *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.SkipAssetCreationFromLocalModules",
            "displayName": "SkipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformHclModuleOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "SkipAssetCreationFromLocalModules *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.Source",
            "displayName": "Source",
            "id": "cdktf.TerraformHclModuleOptions.property.source",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Source *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.Version",
            "displayName": "Version",
            "id": "cdktf.TerraformHclModuleOptions.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Version *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModuleOptions.property.Variables",
            "displayName": "Variables",
            "id": "cdktf.TerraformHclModuleOptions.property.variables",
            "optional": true,
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "interface{}"
                }
              ]
            },
            "docs": {},
            "usage": "Variables *map[string]interface{}"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformHclModuleOptions {\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tForEach: github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator,\n\tProviders: *[]interface{},\n\tSkipAssetCreationFromLocalModules: *bool,\n\tSource: *string,\n\tVersion: *string,\n\tVariables: *map[string]interface{},\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments",
        "displayName": "TerraformMetaArguments",
        "id": "cdktf.TerraformMetaArguments",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.Connection",
            "displayName": "Connection",
            "id": "cdktf.TerraformMetaArguments.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Connection interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.Count",
            "displayName": "Count",
            "id": "cdktf.TerraformMetaArguments.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "Count *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformMetaArguments.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformMetaArguments.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "ForEach ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.Lifecycle",
            "displayName": "Lifecycle",
            "id": "cdktf.TerraformMetaArguments.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Lifecycle TerraformResourceLifecycle"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.TerraformMetaArguments.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Provider TerraformProvider"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformMetaArguments.property.Provisioners",
            "displayName": "Provisioners",
            "id": "cdktf.TerraformMetaArguments.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Provisioners *[]interface{}"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformMetaArguments {\n\tConnection: interface{},\n\tCount: *f64,\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tForEach: github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator,\n\tLifecycle: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle,\n\tProvider: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider,\n\tProvisioners: *[]interface{},\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions",
        "displayName": "TerraformModuleOptions",
        "id": "cdktf.TerraformModuleOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformModuleOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformModuleOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "ForEach ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.Providers",
            "displayName": "Providers",
            "id": "cdktf.TerraformModuleOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Providers *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.SkipAssetCreationFromLocalModules",
            "displayName": "SkipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModuleOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "SkipAssetCreationFromLocalModules *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.Source",
            "displayName": "Source",
            "id": "cdktf.TerraformModuleOptions.property.source",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Source *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleOptions.property.Version",
            "displayName": "Version",
            "id": "cdktf.TerraformModuleOptions.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Version *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformModuleOptions {\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tForEach: github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator,\n\tProviders: *[]interface{},\n\tSkipAssetCreationFromLocalModules: *bool,\n\tSource: *string,\n\tVersion: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
        "displayName": "TerraformModuleProvider",
        "id": "cdktf.TerraformModuleProvider",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider.property.ModuleAlias",
            "displayName": "ModuleAlias",
            "id": "cdktf.TerraformModuleProvider.property.moduleAlias",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ModuleAlias *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.TerraformModuleProvider.property.provider",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Provider TerraformProvider"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformModuleProvider {\n\tModuleAlias: *string,\n\tProvider: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleUserOptions",
        "displayName": "TerraformModuleUserOptions",
        "id": "cdktf.TerraformModuleUserOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleUserOptions.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformModuleUserOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleUserOptions.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformModuleUserOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "ForEach ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleUserOptions.property.Providers",
            "displayName": "Providers",
            "id": "cdktf.TerraformModuleUserOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Providers *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModuleUserOptions.property.SkipAssetCreationFromLocalModules",
            "displayName": "SkipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModuleUserOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "SkipAssetCreationFromLocalModules *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformModuleUserOptions {\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tForEach: github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator,\n\tProviders: *[]interface{},\n\tSkipAssetCreationFromLocalModules: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig",
        "displayName": "TerraformOutputConfig",
        "id": "cdktf.TerraformOutputConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig.property.Value",
            "displayName": "Value",
            "id": "cdktf.TerraformOutputConfig.property.value",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "Value interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformOutputConfig.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig.property.Description",
            "displayName": "Description",
            "id": "cdktf.TerraformOutputConfig.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Description *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig.property.Sensitive",
            "displayName": "Sensitive",
            "id": "cdktf.TerraformOutputConfig.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Sensitive *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformOutputConfig.property.StaticId",
            "displayName": "StaticId",
            "id": "cdktf.TerraformOutputConfig.property.staticId",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "If set to true the synthesized Terraform Output will be named after the `id` passed to the constructor instead of the default (TerraformOutput.friendlyUniqueId)."
            },
            "usage": "StaticId *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformOutputConfig {\n\tValue: interface{},\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tDescription: *string,\n\tSensitive: *bool,\n\tStaticId: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderConfig",
        "displayName": "TerraformProviderConfig",
        "id": "cdktf.TerraformProviderConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderConfig.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.TerraformProviderConfig.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TerraformResourceType *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderConfig.property.TerraformGeneratorMetadata",
            "displayName": "TerraformGeneratorMetadata",
            "id": "cdktf.TerraformProviderConfig.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "TerraformGeneratorMetadata TerraformProviderGeneratorMetadata"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderConfig.property.TerraformProviderSource",
            "displayName": "TerraformProviderSource",
            "id": "cdktf.TerraformProviderConfig.property.terraformProviderSource",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TerraformProviderSource *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformProviderConfig {\n\tTerraformResourceType: *string,\n\tTerraformGeneratorMetadata: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata,\n\tTerraformProviderSource: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
        "displayName": "TerraformProviderGeneratorMetadata",
        "id": "cdktf.TerraformProviderGeneratorMetadata",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata.property.ProviderName",
            "displayName": "ProviderName",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProviderName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata.property.ProviderVersion",
            "displayName": "ProviderVersion",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerVersion",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProviderVersion *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata.property.ProviderVersionConstraint",
            "displayName": "ProviderVersionConstraint",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerVersionConstraint",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ProviderVersionConstraint *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformProviderGeneratorMetadata {\n\tProviderName: *string,\n\tProviderVersion: *string,\n\tProviderVersionConstraint: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig",
        "displayName": "TerraformResourceConfig",
        "id": "cdktf.TerraformResourceConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.Connection",
            "displayName": "Connection",
            "id": "cdktf.TerraformResourceConfig.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Connection interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.Count",
            "displayName": "Count",
            "id": "cdktf.TerraformResourceConfig.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "Count *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.TerraformResourceConfig.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "DependsOn *[]ITerraformDependable"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.TerraformResourceConfig.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "ForEach ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.Lifecycle",
            "displayName": "Lifecycle",
            "id": "cdktf.TerraformResourceConfig.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Lifecycle TerraformResourceLifecycle"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.TerraformResourceConfig.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "Provider TerraformProvider"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.Provisioners",
            "displayName": "Provisioners",
            "id": "cdktf.TerraformResourceConfig.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "interface{}",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "Provisioners *[]interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.TerraformResourceConfig.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "TerraformResourceType *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceConfig.property.TerraformGeneratorMetadata",
            "displayName": "TerraformGeneratorMetadata",
            "id": "cdktf.TerraformResourceConfig.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "TerraformGeneratorMetadata TerraformProviderGeneratorMetadata"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformResourceConfig {\n\tConnection: interface{},\n\tCount: *f64,\n\tDependsOn: *[]github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable,\n\tForEach: github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator,\n\tLifecycle: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle,\n\tProvider: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider,\n\tProvisioners: *[]interface{},\n\tTerraformResourceType: *string,\n\tTerraformGeneratorMetadata: github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProviderGeneratorMetadata,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
        "displayName": "TerraformResourceLifecycle",
        "id": "cdktf.TerraformResourceLifecycle",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle.property.CreateBeforeDestroy",
            "displayName": "CreateBeforeDestroy",
            "id": "cdktf.TerraformResourceLifecycle.property.createBeforeDestroy",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "CreateBeforeDestroy *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle.property.IgnoreChanges",
            "displayName": "IgnoreChanges",
            "id": "cdktf.TerraformResourceLifecycle.property.ignoreChanges",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}",
              "types": [
                {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "IgnoreChanges interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle.property.PreventDestroy",
            "displayName": "PreventDestroy",
            "id": "cdktf.TerraformResourceLifecycle.property.preventDestroy",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "PreventDestroy *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformResourceLifecycle {\n\tCreateBeforeDestroy: *bool,\n\tIgnoreChanges: interface{},\n\tPreventDestroy: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStackMetadata",
        "displayName": "TerraformStackMetadata",
        "id": "cdktf.TerraformStackMetadata",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStackMetadata.property.Backend",
            "displayName": "Backend",
            "id": "cdktf.TerraformStackMetadata.property.backend",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Backend *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStackMetadata.property.StackName",
            "displayName": "StackName",
            "id": "cdktf.TerraformStackMetadata.property.stackName",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "StackName *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStackMetadata.property.Version",
            "displayName": "Version",
            "id": "cdktf.TerraformStackMetadata.property.version",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Version *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformStackMetadata {\n\tBackend: *string,\n\tStackName: *string,\n\tVersion: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig",
        "displayName": "TerraformVariableConfig",
        "id": "cdktf.TerraformVariableConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Default",
            "displayName": "Default",
            "id": "cdktf.TerraformVariableConfig.property.default",
            "optional": true,
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "Default interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Description",
            "displayName": "Description",
            "id": "cdktf.TerraformVariableConfig.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Description *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Nullable",
            "displayName": "Nullable",
            "id": "cdktf.TerraformVariableConfig.property.nullable",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Nullable *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Sensitive",
            "displayName": "Sensitive",
            "id": "cdktf.TerraformVariableConfig.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "Sensitive *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Type",
            "displayName": "Type",
            "id": "cdktf.TerraformVariableConfig.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The type argument in a variable block allows you to restrict the type of value that will be accepted as the value for a variable.",
              "remarks": "If no type constraint is set then a value of any type is accepted.\n\nWhile type constraints are optional, we recommend specifying them; they serve as easy reminders for users of the module, and allow Terraform to return a helpful error message if the wrong type is used.\n\nType constraints are created from a mixture of type keywords and type constructors. The supported type keywords are:\n\n* string\n* number\n* bool\n\nThe type constructors allow you to specify complex types such as collections:\n\n* list(<TYPE>)\n* set(<TYPE>)\n* map(<TYPE>)\n* object({<ATTR NAME> = <TYPE>, ... })\n* tuple([<TYPE>, ...])\n\nThe keyword any may be used to indicate that any type is acceptable. For more information on the meaning and behavior of these different types, as well as detailed information about automatic conversion of complex types, see {@link https://www.terraform.io/docs/configuration/types.html|Type Constraints}.\n\nIf both the type and default arguments are specified, the given default value must be convertible to the specified type."
            },
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableConfig.property.Validation",
            "displayName": "Validation",
            "id": "cdktf.TerraformVariableConfig.property.validation",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Specify arbitrary custom validation rules for a particular variable using a validation block nested within the corresponding variable block."
            },
            "usage": "Validation *[]TerraformVariableValidationConfig"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformVariableConfig {\n\tDefault: interface{},\n\tDescription: *string,\n\tNullable: *bool,\n\tSensitive: *bool,\n\tType: *string,\n\tValidation: *[]github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig",
        "displayName": "TerraformVariableValidationConfig",
        "id": "cdktf.TerraformVariableValidationConfig",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig.property.Condition",
            "displayName": "Condition",
            "id": "cdktf.TerraformVariableValidationConfig.property.condition",
            "type": {
              "formattingPattern": "interface{}"
            },
            "docs": {},
            "usage": "Condition interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariableValidationConfig.property.ErrorMessage",
            "displayName": "ErrorMessage",
            "id": "cdktf.TerraformVariableValidationConfig.property.errorMessage",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "ErrorMessage *string"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TerraformVariableValidationConfig {\n\tCondition: interface{},\n\tErrorMessage: *string,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions",
        "displayName": "TestingAppOptions",
        "id": "cdktf.TestingAppOptions",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions.property.EnableFutureFlags",
            "displayName": "EnableFutureFlags",
            "id": "cdktf.TestingAppOptions.property.enableFutureFlags",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "EnableFutureFlags *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions.property.FakeCdktfJsonPath",
            "displayName": "FakeCdktfJsonPath",
            "id": "cdktf.TestingAppOptions.property.fakeCdktfJsonPath",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "FakeCdktfJsonPath *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions.property.Outdir",
            "displayName": "Outdir",
            "id": "cdktf.TestingAppOptions.property.outdir",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "Outdir *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions.property.StackTraces",
            "displayName": "StackTraces",
            "id": "cdktf.TestingAppOptions.property.stackTraces",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "StackTraces *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TestingAppOptions.property.StubVersion",
            "displayName": "StubVersion",
            "id": "cdktf.TestingAppOptions.property.stubVersion",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "StubVersion *bool"
          }
        ],
        "docs": {},
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.TestingAppOptions {\n\tEnableFutureFlags: *bool,\n\tFakeCdktfJsonPath: *bool,\n\tOutdir: *string,\n\tStackTraces: *bool,\n\tStubVersion: *bool,\n}"
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection",
        "displayName": "WinrmProvisionerConnection",
        "id": "cdktf.WinrmProvisionerConnection",
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Host",
            "displayName": "Host",
            "id": "cdktf.WinrmProvisionerConnection.property.host",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The address of the resource to connect to."
            },
            "usage": "Host *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Type",
            "displayName": "Type",
            "id": "cdktf.WinrmProvisionerConnection.property.type",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The connection type.",
              "remarks": "Valid values are \"ssh\" and \"winrm\".\nProvisioners typically assume that the remote system runs Microsoft Windows when using WinRM.\nBehaviors based on the SSH target_platform will force Windows-specific behavior for WinRM, unless otherwise specified."
            },
            "usage": "Type *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Cacert",
            "displayName": "Cacert",
            "id": "cdktf.WinrmProvisionerConnection.property.cacert",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The CA certificate to validate against."
            },
            "usage": "Cacert *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Https",
            "displayName": "Https",
            "id": "cdktf.WinrmProvisionerConnection.property.https",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Set to true to connect using HTTPS instead of HTTP."
            },
            "usage": "Https *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Insecure",
            "displayName": "Insecure",
            "id": "cdktf.WinrmProvisionerConnection.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Set to true to skip validating the HTTPS certificate chain."
            },
            "usage": "Insecure *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Password",
            "displayName": "Password",
            "id": "cdktf.WinrmProvisionerConnection.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The password to use for the connection."
            },
            "usage": "Password *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Port",
            "displayName": "Port",
            "id": "cdktf.WinrmProvisionerConnection.property.port",
            "optional": true,
            "default": "22",
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {
              "summary": "The port to connect to."
            },
            "usage": "Port *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.ScriptPath",
            "displayName": "ScriptPath",
            "id": "cdktf.WinrmProvisionerConnection.property.scriptPath",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The path used to copy scripts meant for remote execution.",
              "remarks": "Refer to {@link https://www.terraform.io/language/resources/provisioners/connection#how-provisioners-execute-remote-scripts How Provisioners Execute Remote Scripts below for more details}"
            },
            "usage": "ScriptPath *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.Timeout",
            "displayName": "Timeout",
            "id": "cdktf.WinrmProvisionerConnection.property.timeout",
            "optional": true,
            "default": "5m",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The timeout to wait for the connection to become available.",
              "remarks": "Should be provided as a string (e.g., \"30s\" or \"5m\".)"
            },
            "usage": "Timeout *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.UseNtlm",
            "displayName": "UseNtlm",
            "id": "cdktf.WinrmProvisionerConnection.property.useNtlm",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "Set to true to use NTLM authentication rather than default (basic authentication), removing the requirement for basic authentication to be enabled within the target guest.",
              "remarks": "Refer to Authentication for Remote Connections in the Windows App Development documentation for more details."
            },
            "usage": "UseNtlm *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.WinrmProvisionerConnection.property.User",
            "displayName": "User",
            "id": "cdktf.WinrmProvisionerConnection.property.user",
            "optional": true,
            "default": "root",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The user to use for the connection."
            },
            "usage": "User *string"
          }
        ],
        "docs": {
          "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
          "remarks": "See {@link https://www.terraform.io/language/resources/provisioners/connection connection}"
        },
        "usage": "import \"github.com/hashicorp/terraform-cdk-go/cdktf\"\n\n&cdktf.WinrmProvisionerConnection {\n\tHost: *string,\n\tType: *string,\n\tCacert: *string,\n\tHttps: *bool,\n\tInsecure: *bool,\n\tPassword: *string,\n\tPort: *f64,\n\tScriptPath: *string,\n\tTimeout: *string,\n\tUseNtlm: *bool,\n\tUser: *string,\n}"
      }
    ],
    "interfaces": [
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAnyProducer",
        "displayName": "IAnyProducer",
        "id": "cdktf.IAnyProducer",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAnyProducer",
            "displayName": "IAnyProducer",
            "id": "cdktf.IAnyProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAnyProducer.Produce",
            "displayName": "Produce",
            "id": "cdktf.IAnyProducer.produce",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAnyProducer.Produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IAnyProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the value."
            },
            "usage": "func Produce(context IResolveContext) interface{}"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy untyped value producers."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect",
        "displayName": "IAspect",
        "id": "cdktf.IAspect",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect",
            "displayName": "IAspect",
            "id": "cdktf.IAspect",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect.Visit",
            "displayName": "Visit",
            "id": "cdktf.IAspect.visit",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IAspect.Visit.parameter.node",
                "displayName": "node",
                "id": "cdktf.IAspect.visit.parameter.node",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "All aspects can visit an IConstruct."
            },
            "usage": "func Visit(node IConstruct)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Represents an Aspect."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator",
        "displayName": "IFragmentConcatenator",
        "id": "cdktf.IFragmentConcatenator",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringConcat",
            "displayName": "StringConcat",
            "id": "cdktf.StringConcat",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator",
            "displayName": "IFragmentConcatenator",
            "id": "cdktf.IFragmentConcatenator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator.Join",
            "displayName": "Join",
            "id": "cdktf.IFragmentConcatenator.join",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator.Join.parameter.left",
                "displayName": "left",
                "id": "cdktf.IFragmentConcatenator.join.parameter.left",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IFragmentConcatenator.Join.parameter.right",
                "displayName": "right",
                "id": "cdktf.IFragmentConcatenator.join.parameter.right",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Join the fragment on the left and on the right."
            },
            "usage": "func Join(left interface{}, right interface{}) interface{}"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Function used to concatenate symbols in the target document language.",
          "remarks": "Interface so it could potentially be exposed over jsii."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
        "displayName": "IInterpolatingParent",
        "id": "cdktf.IInterpolatingParent",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.IInterpolatingParent.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IInterpolatingParent.InterpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.IInterpolatingParent.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(terraformAttribute *string) IResolvable"
          }
        ],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IListProducer",
        "displayName": "IListProducer",
        "id": "cdktf.IListProducer",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IListProducer",
            "displayName": "IListProducer",
            "id": "cdktf.IListProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IListProducer.Produce",
            "displayName": "Produce",
            "id": "cdktf.IListProducer.produce",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IListProducer.Produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IListProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the list value."
            },
            "usage": "func Produce(context IResolveContext) *[]*string"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy list producers."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IManifest",
        "displayName": "IManifest",
        "id": "cdktf.IManifest",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest",
            "displayName": "Manifest",
            "id": "cdktf.Manifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IManifest",
            "displayName": "IManifest",
            "id": "cdktf.IManifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IManifest.property.Stacks",
            "displayName": "Stacks",
            "id": "cdktf.IManifest.property.stacks",
            "type": {
              "formattingPattern": "*map[string]%",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackManifest",
                      "displayName": "StackManifest",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StackManifest",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "func Stacks() *map[string]StackManifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IManifest.property.Version",
            "displayName": "Version",
            "id": "cdktf.IManifest.property.version",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Version() *string"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.INumberProducer",
        "displayName": "INumberProducer",
        "id": "cdktf.INumberProducer",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.INumberProducer",
            "displayName": "INumberProducer",
            "id": "cdktf.INumberProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.INumberProducer.Produce",
            "displayName": "Produce",
            "id": "cdktf.INumberProducer.produce",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.INumberProducer.Produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.INumberProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the number value."
            },
            "usage": "func Produce(context IResolveContext) *f64"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy number producers."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
        "displayName": "IPostProcessor",
        "id": "cdktf.IPostProcessor",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
            "displayName": "IPostProcessor",
            "id": "cdktf.IPostProcessor",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor.PostProcess",
            "displayName": "PostProcess",
            "id": "cdktf.IPostProcessor.postProcess",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor.PostProcess.parameter.input",
                "displayName": "input",
                "id": "cdktf.IPostProcessor.postProcess.parameter.input",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor.PostProcess.parameter.context",
                "displayName": "context",
                "id": "cdktf.IPostProcessor.postProcess.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Process the completely resolved value, after full recursion/resolution has happened."
            },
            "usage": "func PostProcess(input interface{}, context IResolveContext) interface{}"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "A Token that can post-process the complete resolved value, after resolve() has recursed over it."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
        "displayName": "IRemoteWorkspace",
        "id": "cdktf.IRemoteWorkspace",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NamedRemoteWorkspace",
            "displayName": "NamedRemoteWorkspace",
            "id": "cdktf.NamedRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.PrefixedRemoteWorkspaces",
            "displayName": "PrefixedRemoteWorkspaces",
            "id": "cdktf.PrefixedRemoteWorkspaces",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
        "displayName": "IResolvable",
        "id": "cdktf.IResolvable",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap",
            "displayName": "AnyMap",
            "id": "cdktf.AnyMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap",
            "displayName": "BooleanMap",
            "id": "cdktf.BooleanMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
            "displayName": "ComplexList",
            "id": "cdktf.ComplexList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
            "displayName": "ComplexMap",
            "id": "cdktf.ComplexMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.LazyBase",
            "displayName": "LazyBase",
            "id": "cdktf.LazyBase",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap",
            "displayName": "NumberMap",
            "id": "cdktf.NumberMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap",
            "displayName": "StringMap",
            "id": "cdktf.StringMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.IResolvable.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable.Resolve.parameter.context",
                "displayName": "context",
                "id": "cdktf.IResolvable.resolve.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "func Resolve(context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable.ToString",
            "displayName": "ToString",
            "id": "cdktf.IResolvable.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "func ToString() *string"
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable.property.CreationStack",
            "displayName": "CreationStack",
            "id": "cdktf.IResolvable.property.creationStack",
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "func CreationStack() *[]*string"
          }
        ],
        "docs": {
          "summary": "Interface for values that can be resolvable later.",
          "remarks": "Tokens are special objects that participate in synthesis."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
        "displayName": "IResolveContext",
        "id": "cdktf.IResolveContext",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
            "displayName": "IResolveContext",
            "id": "cdktf.IResolveContext",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.RegisterPostProcessor",
            "displayName": "RegisterPostProcessor",
            "id": "cdktf.IResolveContext.registerPostProcessor",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.RegisterPostProcessor.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.IResolveContext.registerPostProcessor.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Use this postprocessor after the entire token structure has been resolved."
            },
            "usage": "func RegisterPostProcessor(postProcessor IPostProcessor)"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.Resolve",
            "displayName": "Resolve",
            "id": "cdktf.IResolveContext.resolve",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.Resolve.parameter.x",
                "displayName": "x",
                "id": "cdktf.IResolveContext.resolve.parameter.x",
                "type": {
                  "formattingPattern": "interface{}"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve an inner object."
            },
            "usage": "func Resolve(x interface{}) interface{}"
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.property.Preparing",
            "displayName": "Preparing",
            "id": "cdktf.IResolveContext.property.preparing",
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "True when we are still preparing, false if we're rendering the final output."
            },
            "usage": "func Preparing() *bool"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.property.Scope",
            "displayName": "Scope",
            "id": "cdktf.IResolveContext.property.scope",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.IConstruct",
                  "displayName": "IConstruct",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The scope from which resolution has been initiated."
            },
            "usage": "func Scope() IConstruct"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.property.IteratorContext",
            "displayName": "IteratorContext",
            "id": "cdktf.IResolveContext.property.iteratorContext",
            "optional": true,
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "TerraformIterators can be passed for block attributes and normal list attributes both require different handling when the iterable variable is accessed e.g. a dynamic block needs each.key while a for expression just needs key."
            },
            "usage": "func IteratorContext() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext.property.SuppressBraces",
            "displayName": "SuppressBraces",
            "id": "cdktf.IResolveContext.property.suppressBraces",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {
              "summary": "True when ${} should be ommitted (because already inside them), false otherwise."
            },
            "usage": "func SuppressBraces() *bool"
          }
        ],
        "docs": {
          "summary": "Current resolution context for tokens."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResource",
        "displayName": "IResource",
        "id": "cdktf.IResource",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Resource",
            "displayName": "Resource",
            "id": "cdktf.Resource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResource",
            "displayName": "IResource",
            "id": "cdktf.IResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [
          {
            "fqn": "github.com/aws/constructs-go/constructs/v10.IConstruct",
            "displayName": "IConstruct",
            "id": "constructs.IConstruct",
            "packageName": "constructs",
            "packageVersion": "10.1.45"
          }
        ],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResource.property.Node",
            "displayName": "Node",
            "id": "cdktf.IResource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "github.com/aws/constructs-go/constructs/v10.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "func Node() Node"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResource.property.Stack",
            "displayName": "Stack",
            "id": "cdktf.IResource.property.stack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The stack in which this resource is defined."
            },
            "usage": "func Stack() TerraformStack"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResourceConstructor",
        "displayName": "IResourceConstructor",
        "id": "cdktf.IResourceConstructor",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResourceConstructor",
            "displayName": "IResourceConstructor",
            "id": "cdktf.IResourceConstructor",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IScopeCallback",
        "displayName": "IScopeCallback",
        "id": "cdktf.IScopeCallback",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IScopeCallback",
            "displayName": "IScopeCallback",
            "id": "cdktf.IScopeCallback",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStackSynthesizer",
        "displayName": "IStackSynthesizer",
        "id": "cdktf.IStackSynthesizer",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStackSynthesizer",
            "displayName": "IStackSynthesizer",
            "id": "cdktf.IStackSynthesizer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStackSynthesizer.Synthesize",
            "displayName": "Synthesize",
            "id": "cdktf.IStackSynthesizer.synthesize",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStackSynthesizer.Synthesize.parameter.session",
                "displayName": "session",
                "id": "cdktf.IStackSynthesizer.synthesize.parameter.session",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ISynthesisSession",
                      "displayName": "ISynthesisSession",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Synthesize the associated stack to the session."
            },
            "usage": "func Synthesize(session ISynthesisSession)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Encodes information how a certain Stack should be deployed inspired by AWS CDK v2 implementation (synth functionality was removed in constructs v10)."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStringProducer",
        "displayName": "IStringProducer",
        "id": "cdktf.IStringProducer",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStringProducer",
            "displayName": "IStringProducer",
            "id": "cdktf.IStringProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStringProducer.Produce",
            "displayName": "Produce",
            "id": "cdktf.IStringProducer.produce",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IStringProducer.Produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IStringProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the string value."
            },
            "usage": "func Produce(context IResolveContext) *string"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy string producers."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession",
        "displayName": "ISynthesisSession",
        "id": "cdktf.ISynthesisSession",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession",
            "displayName": "ISynthesisSession",
            "id": "cdktf.ISynthesisSession",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession.property.Manifest",
            "displayName": "Manifest",
            "id": "cdktf.ISynthesisSession.property.manifest",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.Manifest",
                  "displayName": "Manifest",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.Manifest",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Manifest() Manifest"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession.property.Outdir",
            "displayName": "Outdir",
            "id": "cdktf.ISynthesisSession.property.outdir",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {
              "summary": "The output directory for this synthesis session."
            },
            "usage": "func Outdir() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ISynthesisSession.property.SkipValidation",
            "displayName": "SkipValidation",
            "id": "cdktf.ISynthesisSession.property.skipValidation",
            "optional": true,
            "type": {
              "formattingPattern": "*bool"
            },
            "docs": {},
            "usage": "func SkipValidation() *bool"
          }
        ],
        "docs": {
          "summary": "Represents a single session of synthesis.",
          "remarks": "Passed into `TerraformStack.onSynthesize()` methods.\noriginally from aws/constructs lib v3.3.126 (synth functionality was removed in constructs v10)"
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
        "displayName": "ITerraformAddressable",
        "id": "cdktf.ITerraformAddressable",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMap",
            "displayName": "AnyMap",
            "id": "cdktf.AnyMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMap",
            "displayName": "BooleanMap",
            "id": "cdktf.BooleanMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexList",
            "displayName": "ComplexList",
            "id": "cdktf.ComplexList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexMap",
            "displayName": "ComplexMap",
            "id": "cdktf.ComplexMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteState",
            "displayName": "DataTerraformRemoteState",
            "id": "cdktf.DataTerraformRemoteState",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateArtifactory",
            "displayName": "DataTerraformRemoteStateArtifactory",
            "id": "cdktf.DataTerraformRemoteStateArtifactory",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateAzurerm",
            "displayName": "DataTerraformRemoteStateAzurerm",
            "id": "cdktf.DataTerraformRemoteStateAzurerm",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateConsul",
            "displayName": "DataTerraformRemoteStateConsul",
            "id": "cdktf.DataTerraformRemoteStateConsul",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateCos",
            "displayName": "DataTerraformRemoteStateCos",
            "id": "cdktf.DataTerraformRemoteStateCos",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcd",
            "displayName": "DataTerraformRemoteStateEtcd",
            "id": "cdktf.DataTerraformRemoteStateEtcd",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateEtcdV3",
            "displayName": "DataTerraformRemoteStateEtcdV3",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateGcs",
            "displayName": "DataTerraformRemoteStateGcs",
            "id": "cdktf.DataTerraformRemoteStateGcs",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateHttp",
            "displayName": "DataTerraformRemoteStateHttp",
            "id": "cdktf.DataTerraformRemoteStateHttp",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateLocal",
            "displayName": "DataTerraformRemoteStateLocal",
            "id": "cdktf.DataTerraformRemoteStateLocal",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateManta",
            "displayName": "DataTerraformRemoteStateManta",
            "id": "cdktf.DataTerraformRemoteStateManta",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateOss",
            "displayName": "DataTerraformRemoteStateOss",
            "id": "cdktf.DataTerraformRemoteStateOss",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStatePg",
            "displayName": "DataTerraformRemoteStatePg",
            "id": "cdktf.DataTerraformRemoteStatePg",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateS3",
            "displayName": "DataTerraformRemoteStateS3",
            "id": "cdktf.DataTerraformRemoteStateS3",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DataTerraformRemoteStateSwift",
            "displayName": "DataTerraformRemoteStateSwift",
            "id": "cdktf.DataTerraformRemoteStateSwift",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMap",
            "displayName": "NumberMap",
            "id": "cdktf.NumberMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMap",
            "displayName": "StringMap",
            "id": "cdktf.StringMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule",
            "displayName": "TerraformHclModule",
            "id": "cdktf.TerraformHclModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformLocal",
            "displayName": "TerraformLocal",
            "id": "cdktf.TerraformLocal",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule",
            "displayName": "TerraformModule",
            "id": "cdktf.TerraformModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformRemoteState",
            "displayName": "TerraformRemoteState",
            "id": "cdktf.TerraformRemoteState",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformVariable",
            "displayName": "TerraformVariable",
            "id": "cdktf.TerraformVariable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ITerraformAddressable.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
        "displayName": "ITerraformDependable",
        "id": "cdktf.ITerraformDependable",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformHclModule",
            "displayName": "TerraformHclModule",
            "id": "cdktf.TerraformHclModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformModule",
            "displayName": "TerraformModule",
            "id": "cdktf.TerraformModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformDependable.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ITerraformDependable.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
        "displayName": "ITerraformIterator",
        "id": "cdktf.ITerraformIterator",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ListTerraformIterator",
            "displayName": "ListTerraformIterator",
            "id": "cdktf.ListTerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.MapTerraformIterator",
            "displayName": "MapTerraformIterator",
            "id": "cdktf.MapTerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformIterator",
            "displayName": "TerraformIterator",
            "id": "cdktf.TerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
            "displayName": "ITerraformIterator",
            "id": "cdktf.ITerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource",
        "displayName": "ITerraformResource",
        "id": "cdktf.ITerraformResource",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.InterpolationForAttribute",
            "displayName": "InterpolationForAttribute",
            "id": "cdktf.ITerraformResource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.InterpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ITerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "*string"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "func InterpolationForAttribute(terraformAttribute *string) IResolvable"
          }
        ],
        "properties": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.Fqn",
            "displayName": "Fqn",
            "id": "cdktf.ITerraformResource.property.fqn",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func Fqn() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.FriendlyUniqueId",
            "displayName": "FriendlyUniqueId",
            "id": "cdktf.ITerraformResource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func FriendlyUniqueId() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.TerraformResourceType",
            "displayName": "TerraformResourceType",
            "id": "cdktf.ITerraformResource.property.terraformResourceType",
            "type": {
              "formattingPattern": "*string"
            },
            "docs": {},
            "usage": "func TerraformResourceType() *string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.Count",
            "displayName": "Count",
            "id": "cdktf.ITerraformResource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "*f64"
            },
            "docs": {},
            "usage": "func Count() *f64"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.DependsOn",
            "displayName": "DependsOn",
            "id": "cdktf.ITerraformResource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "*[]%",
              "types": [
                {
                  "formattingPattern": "*string"
                }
              ]
            },
            "docs": {},
            "usage": "func DependsOn() *[]*string"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.ForEach",
            "displayName": "ForEach",
            "id": "cdktf.ITerraformResource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func ForEach() ITerraformIterator"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.Lifecycle",
            "displayName": "Lifecycle",
            "id": "cdktf.ITerraformResource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Lifecycle() TerraformResourceLifecycle"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITerraformResource.property.Provider",
            "displayName": "Provider",
            "id": "cdktf.ITerraformResource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "func Provider() TerraformProvider"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenMapper",
        "displayName": "ITokenMapper",
        "id": "cdktf.ITokenMapper",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenMapper",
            "displayName": "ITokenMapper",
            "id": "cdktf.ITokenMapper",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenMapper.MapToken",
            "displayName": "MapToken",
            "id": "cdktf.ITokenMapper.mapToken",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenMapper.MapToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.ITokenMapper.mapToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Replace a single token."
            },
            "usage": "func MapToken(t IResolvable) interface{}"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface to apply operation to tokens in a string.",
          "remarks": "Interface so it can be exported via jsii."
        }
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver",
        "displayName": "ITokenResolver",
        "id": "cdktf.ITokenResolver",
        "implementations": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.DefaultTokenResolver",
            "displayName": "DefaultTokenResolver",
            "id": "cdktf.DefaultTokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver",
            "displayName": "ITokenResolver",
            "id": "cdktf.ITokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveList",
            "displayName": "ResolveList",
            "id": "cdktf.ITokenResolver.resolveList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveList.parameter.l",
                "displayName": "l",
                "id": "cdktf.ITokenResolver.resolveList.parameter.l",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*string"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveList.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized list."
            },
            "usage": "func ResolveList(l *[]*string, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveMap",
            "displayName": "ResolveMap",
            "id": "cdktf.ITokenResolver.resolveMap",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveMap.parameter.m",
                "displayName": "m",
                "id": "cdktf.ITokenResolver.resolveMap.parameter.m",
                "type": {
                  "formattingPattern": "*map[string]%",
                  "types": [
                    {
                      "formattingPattern": "interface{}"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveMap.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveMap.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized map."
            },
            "usage": "func ResolveMap(m *map[string]interface{}, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveNumberList",
            "displayName": "ResolveNumberList",
            "id": "cdktf.ITokenResolver.resolveNumberList",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveNumberList.parameter.l",
                "displayName": "l",
                "id": "cdktf.ITokenResolver.resolveNumberList.parameter.l",
                "type": {
                  "formattingPattern": "*[]%",
                  "types": [
                    {
                      "formattingPattern": "*f64"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveNumberList.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveNumberList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized number list."
            },
            "usage": "func ResolveNumberList(l *[]*f64, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveString",
            "displayName": "ResolveString",
            "id": "cdktf.ITokenResolver.resolveString",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveString.parameter.s",
                "displayName": "s",
                "id": "cdktf.ITokenResolver.resolveString.parameter.s",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TokenizedStringFragments",
                      "displayName": "TokenizedStringFragments",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.TokenizedStringFragments",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveString.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveString.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a string with at least one stringified token in it.",
              "remarks": "(May use concatenation)"
            },
            "usage": "func ResolveString(s TokenizedStringFragments, context IResolveContext) interface{}"
          },
          {
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveToken",
            "displayName": "ResolveToken",
            "id": "cdktf.ITokenResolver.resolveToken",
            "parameters": [
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveToken.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.ITokenResolver.ResolveToken.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a single token."
            },
            "usage": "func ResolveToken(t IResolvable, context IResolveContext, postProcessor IPostProcessor) interface{}"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "How to resolve tokens."
        }
      }
    ],
    "enums": [
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType",
        "displayName": "AnnotationMetadataEntryType",
        "id": "cdktf.AnnotationMetadataEntryType",
        "members": [
          {
            "id": "cdktf.AnnotationMetadataEntryType.INFO",
            "displayName": "AnnotationMetadataEntryType_INFO",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType_INFO",
            "docs": {}
          },
          {
            "id": "cdktf.AnnotationMetadataEntryType.WARN",
            "displayName": "AnnotationMetadataEntryType_WARN",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType_WARN",
            "docs": {}
          },
          {
            "id": "cdktf.AnnotationMetadataEntryType.ERROR",
            "displayName": "AnnotationMetadataEntryType_ERROR",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AnnotationMetadataEntryType_ERROR",
            "docs": {}
          }
        ],
        "docs": {}
      },
      {
        "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType",
        "displayName": "AssetType",
        "id": "cdktf.AssetType",
        "members": [
          {
            "id": "cdktf.AssetType.FILE",
            "displayName": "AssetType_FILE",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType_FILE",
            "docs": {}
          },
          {
            "id": "cdktf.AssetType.DIRECTORY",
            "displayName": "AssetType_DIRECTORY",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType_DIRECTORY",
            "docs": {}
          },
          {
            "id": "cdktf.AssetType.ARCHIVE",
            "displayName": "AssetType_ARCHIVE",
            "fqn": "github.com/hashicorp/terraform-cdk-go/cdktf.AssetType_ARCHIVE",
            "docs": {}
          }
        ],
        "docs": {}
      }
    ]
  }
}