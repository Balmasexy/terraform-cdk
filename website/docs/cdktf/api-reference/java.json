{
  "version": "0.1",
  "language": "java",
  "metadata": {
    "packageName": "cdktf",
    "packageVersion": "0.0.0"
  },
  "apiReference": {
    "constructs": [
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.App.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.App.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.App.Initializer.parameter.context",
              "displayName": "context",
              "id": "cdktf.App.Initializer.parameter.context",
              "optional": true,
              "default": "- no additional context",
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {
                "summary": "Additional context values for the application.",
                "remarks": "Context set by the CLI or the `context` key in `cdktf.json` has precedence.\n\nContext can be read from any construct using `node.getContext(key)`."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.App.Initializer.parameter.outdir",
              "displayName": "outdir",
              "id": "cdktf.App.Initializer.parameter.outdir",
              "optional": true,
              "default": "- CDKTF_OUTDIR if defined, otherwise \"cdktf.out\"",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "The directory to output Terraform resources."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.App.Initializer.parameter.skipValidation",
              "displayName": "skipValidation",
              "id": "cdktf.App.Initializer.parameter.skipValidation",
              "optional": true,
              "default": "- false",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "Whether to skip the validation during synthesis of the app."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.App.Initializer.parameter.stackTraces",
              "displayName": "stackTraces",
              "id": "cdktf.App.Initializer.parameter.stackTraces",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.App;\n\nApp.Builder.create()\n//  .context(java.util.Map<java.lang.String, java.lang.Object>)\n//  .outdir(java.lang.String)\n//  .skipValidation(java.lang.Boolean)\n//  .stackTraces(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.App.toString",
            "displayName": "toString",
            "id": "cdktf.App.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.crossStackReference",
            "displayName": "crossStackReference",
            "id": "cdktf.App.crossStackReference",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.App.crossStackReference.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.App.crossStackReference.parameter.fromStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.App.crossStackReference.parameter.toStack",
                "displayName": "toStack",
                "id": "cdktf.App.crossStackReference.parameter.toStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.App.crossStackReference.parameter.identifier",
                "displayName": "identifier",
                "id": "cdktf.App.crossStackReference.parameter.identifier",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a reference from one stack to another, invoked on prepareStack since it creates extra resources."
            },
            "usage": "public java.lang.String crossStackReference(TerraformStack fromStack, TerraformStack toStack, java.lang.String identifier)"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.synth",
            "displayName": "synth",
            "id": "cdktf.App.synth",
            "parameters": [],
            "docs": {
              "summary": "Synthesizes all resources to the output directory."
            },
            "usage": "public void synth()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.App.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.App.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.App.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.App.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.App;\n\nApp.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.isApp",
            "displayName": "isApp",
            "id": "cdktf.App.isApp",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.App.isApp.parameter.x",
                "displayName": "x",
                "id": "cdktf.App.isApp.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.App;\n\nApp.isApp(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.of",
            "displayName": "of",
            "id": "cdktf.App.of",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.App.of.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.App.of.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.App;\n\nApp.of(IConstruct construct)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.App.property.node",
            "displayName": "node",
            "id": "cdktf.App.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.property.manifest",
            "displayName": "manifest",
            "id": "cdktf.App.property.manifest",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.Manifest",
                  "displayName": "Manifest",
                  "fqn": "com.hashicorp.cdktf.Manifest",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public Manifest getManifest();"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.property.outdir",
            "displayName": "outdir",
            "id": "cdktf.App.property.outdir",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The output directory into which resources will be synthesized."
            },
            "usage": "public java.lang.String getOutdir();"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.property.skipValidation",
            "displayName": "skipValidation",
            "id": "cdktf.App.property.skipValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Whether to skip the validation during synthesis of the app."
            },
            "usage": "public java.lang.Boolean getSkipValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.App.property.targetStackId",
            "displayName": "targetStackId",
            "id": "cdktf.App.property.targetStackId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The stack which will be synthesized.",
              "remarks": "If not set, all stacks will be synthesized."
            },
            "usage": "public java.lang.String getTargetStackId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.App",
        "displayName": "App",
        "id": "cdktf.App",
        "docs": {
          "summary": "Represents a cdktf application."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ArtifactoryBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.password",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The password."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.repo",
              "displayName": "repo",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.repo",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The repository name."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.subpath",
              "displayName": "subpath",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.subpath",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - Path within the repository."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.url",
              "displayName": "url",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.url",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The URL.",
                "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.ArtifactoryBackend.Initializer.parameter.username",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The username."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.ArtifactoryBackend;\n\nArtifactoryBackend.Builder.create(Construct scope)\n    .password(java.lang.String)\n    .repo(java.lang.String)\n    .subpath(java.lang.String)\n    .url(java.lang.String)\n    .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.toString",
            "displayName": "toString",
            "id": "cdktf.ArtifactoryBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.ArtifactoryBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.ArtifactoryBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.ArtifactoryBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.ArtifactoryBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.ArtifactoryBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.ArtifactoryBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.ArtifactoryBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.ArtifactoryBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.ArtifactoryBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.ArtifactoryBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.ArtifactoryBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.ArtifactoryBackend;\n\nArtifactoryBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.ArtifactoryBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.ArtifactoryBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.ArtifactoryBackend;\n\nArtifactoryBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.property.node",
            "displayName": "node",
            "id": "cdktf.ArtifactoryBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.ArtifactoryBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ArtifactoryBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.ArtifactoryBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ArtifactoryBackend",
        "displayName": "ArtifactoryBackend",
        "id": "cdktf.ArtifactoryBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AzurermBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.AzurermBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.containerName",
              "displayName": "containerName",
              "id": "cdktf.AzurermBackend.Initializer.parameter.containerName",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Storage Container within the Storage Account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.AzurermBackend.Initializer.parameter.key",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.storageAccountName",
              "displayName": "storageAccountName",
              "id": "cdktf.AzurermBackend.Initializer.parameter.storageAccountName",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Storage Account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.AzurermBackend.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.clientCertificatePassword",
              "displayName": "clientCertificatePassword",
              "id": "cdktf.AzurermBackend.Initializer.parameter.clientCertificatePassword",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
                "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.clientCertificatePath",
              "displayName": "clientCertificatePath",
              "id": "cdktf.AzurermBackend.Initializer.parameter.clientCertificatePath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
                "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.clientId",
              "displayName": "clientId",
              "id": "cdktf.AzurermBackend.Initializer.parameter.clientId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Client ID of the Service Principal.",
                "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.clientSecret",
              "displayName": "clientSecret",
              "id": "cdktf.AzurermBackend.Initializer.parameter.clientSecret",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Client Secret of the Service Principal.",
                "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.AzurermBackend.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
                "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.environment",
              "displayName": "environment",
              "id": "cdktf.AzurermBackend.Initializer.parameter.environment",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Azure Environment which should be used.",
                "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.msiEndpoint",
              "displayName": "msiEndpoint",
              "id": "cdktf.AzurermBackend.Initializer.parameter.msiEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
                "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.oidcRequestToken",
              "displayName": "oidcRequestToken",
              "id": "cdktf.AzurermBackend.Initializer.parameter.oidcRequestToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The bearer token for the request to the OIDC provider.",
                "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.oidcRequestUrl",
              "displayName": "oidcRequestUrl",
              "id": "cdktf.AzurermBackend.Initializer.parameter.oidcRequestUrl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
                "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.resourceGroupName",
              "displayName": "resourceGroupName",
              "id": "cdktf.AzurermBackend.Initializer.parameter.resourceGroupName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.sasToken",
              "displayName": "sasToken",
              "id": "cdktf.AzurermBackend.Initializer.parameter.sasToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.snapshot",
              "displayName": "snapshot",
              "id": "cdktf.AzurermBackend.Initializer.parameter.snapshot",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
                "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.subscriptionId",
              "displayName": "subscriptionId",
              "id": "cdktf.AzurermBackend.Initializer.parameter.subscriptionId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
                "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.tenantId",
              "displayName": "tenantId",
              "id": "cdktf.AzurermBackend.Initializer.parameter.tenantId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Tenant ID in which the Subscription exists.",
                "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.useAzureadAuth",
              "displayName": "useAzureadAuth",
              "id": "cdktf.AzurermBackend.Initializer.parameter.useAzureadAuth",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.useMicrosoftGraph",
              "displayName": "useMicrosoftGraph",
              "id": "cdktf.AzurermBackend.Initializer.parameter.useMicrosoftGraph",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
                "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.useMsi",
              "displayName": "useMsi",
              "id": "cdktf.AzurermBackend.Initializer.parameter.useMsi",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should Managed Service Identity authentication be used?",
                "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.AzurermBackend.Initializer.parameter.useOidc",
              "displayName": "useOidc",
              "id": "cdktf.AzurermBackend.Initializer.parameter.useOidc",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
                "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.AzurermBackend;\n\nAzurermBackend.Builder.create(Construct scope)\n    .containerName(java.lang.String)\n    .key(java.lang.String)\n    .storageAccountName(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .clientCertificatePassword(java.lang.String)\n//  .clientCertificatePath(java.lang.String)\n//  .clientId(java.lang.String)\n//  .clientSecret(java.lang.String)\n//  .endpoint(java.lang.String)\n//  .environment(java.lang.String)\n//  .msiEndpoint(java.lang.String)\n//  .oidcRequestToken(java.lang.String)\n//  .oidcRequestUrl(java.lang.String)\n//  .resourceGroupName(java.lang.String)\n//  .sasToken(java.lang.String)\n//  .snapshot(java.lang.Boolean)\n//  .subscriptionId(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .useAzureadAuth(java.lang.Boolean)\n//  .useMicrosoftGraph(java.lang.Boolean)\n//  .useMsi(java.lang.Boolean)\n//  .useOidc(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.toString",
            "displayName": "toString",
            "id": "cdktf.AzurermBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.AzurermBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.AzurermBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.AzurermBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.AzurermBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.AzurermBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.AzurermBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.AzurermBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.AzurermBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.AzurermBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.AzurermBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.AzurermBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.AzurermBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.AzurermBackend;\n\nAzurermBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.AzurermBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AzurermBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.AzurermBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.AzurermBackend;\n\nAzurermBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.property.node",
            "displayName": "node",
            "id": "cdktf.AzurermBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.AzurermBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.AzurermBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.AzurermBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.AzurermBackend",
        "displayName": "AzurermBackend",
        "id": "cdktf.AzurermBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CloudBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.CloudBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer.parameter.organization",
              "displayName": "organization",
              "id": "cdktf.CloudBackend.Initializer.parameter.organization",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "The name of the organization containing the workspace(s) the current configuration should use."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer.parameter.workspaces",
              "displayName": "workspaces",
              "id": "cdktf.CloudBackend.Initializer.parameter.workspaces",
              "type": {
                "formattingPattern": "% OR %",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.NamedCloudWorkspace",
                        "displayName": "NamedCloudWorkspace",
                        "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.TaggedCloudWorkspaces",
                        "displayName": "TaggedCloudWorkspaces",
                        "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {
                "summary": "A nested block that specifies which remote Terraform Cloud workspaces to use for the current configuration.",
                "remarks": "The workspaces block must contain exactly one of the following arguments, each denoting a strategy for how workspaces should be mapped:"
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer.parameter.hostname",
              "displayName": "hostname",
              "id": "cdktf.CloudBackend.Initializer.parameter.hostname",
              "optional": true,
              "default": "app.terraform.io",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "The hostname of a Terraform Enterprise installation, if using Terraform Enterprise."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CloudBackend.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.CloudBackend.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "The token used to authenticate with Terraform Cloud.",
                "remarks": "We recommend omitting the token from the configuration, and instead using terraform login or manually configuring credentials in the CLI config file."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.CloudBackend;\n\nCloudBackend.Builder.create(Construct scope)\n    .organization(java.lang.String)\n    .workspaces(NamedCloudWorkspace)\n    .workspaces(TaggedCloudWorkspaces)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.toString",
            "displayName": "toString",
            "id": "cdktf.CloudBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.CloudBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.CloudBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.CloudBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.CloudBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.CloudBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.CloudBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.CloudBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.CloudBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.CloudBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.CloudBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.CloudBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.CloudBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.CloudBackend;\n\nCloudBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.CloudBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CloudBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.CloudBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.CloudBackend;\n\nCloudBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.property.node",
            "displayName": "node",
            "id": "cdktf.CloudBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.CloudBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.CloudBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.CloudBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.CloudBackend",
        "displayName": "CloudBackend",
        "id": "cdktf.CloudBackend",
        "docs": {
          "summary": "The Cloud Backend synthesizes a {@link https://www.terraform.io/cli/cloud/settings#the-cloud-block cloud block}. The cloud block is a nested block within the top-level terraform settings block. It specifies which Terraform Cloud workspaces to use for the current working directory. The cloud block only affects Terraform CLI's behavior. When Terraform Cloud uses a configuration that contains a cloud block - for example, when a workspace is configured to use a VCS provider directly - it ignores the block and behaves according to its own workspace settings."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ConsulBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.ConsulBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.accessToken",
              "displayName": "accessToken",
              "id": "cdktf.ConsulBackend.Initializer.parameter.accessToken",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) Access token."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.ConsulBackend.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) Path in the Consul KV store."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.address",
              "displayName": "address",
              "id": "cdktf.ConsulBackend.Initializer.parameter.address",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
                "remarks": "Defaults to the local agent HTTP listener."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.caFile",
              "displayName": "caFile",
              "id": "cdktf.ConsulBackend.Initializer.parameter.caFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.certFile",
              "displayName": "certFile",
              "id": "cdktf.ConsulBackend.Initializer.parameter.certFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
                "remarks": "requires use of key_file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.datacenter",
              "displayName": "datacenter",
              "id": "cdktf.ConsulBackend.Initializer.parameter.datacenter",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The datacenter to use.",
                "remarks": "Defaults to that of the agent."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.gzip",
              "displayName": "gzip",
              "id": "cdktf.ConsulBackend.Initializer.parameter.gzip",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.httpAuth",
              "displayName": "httpAuth",
              "id": "cdktf.ConsulBackend.Initializer.parameter.httpAuth",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.keyFile",
              "displayName": "keyFile",
              "id": "cdktf.ConsulBackend.Initializer.parameter.keyFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.lock",
              "displayName": "lock",
              "id": "cdktf.ConsulBackend.Initializer.parameter.lock",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) false to disable locking.",
                "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ConsulBackend.Initializer.parameter.scheme",
              "displayName": "scheme",
              "id": "cdktf.ConsulBackend.Initializer.parameter.scheme",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
                "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.ConsulBackend;\n\nConsulBackend.Builder.create(Construct scope)\n    .accessToken(java.lang.String)\n    .path(java.lang.String)\n//  .address(java.lang.String)\n//  .caFile(java.lang.String)\n//  .certFile(java.lang.String)\n//  .datacenter(java.lang.String)\n//  .gzip(java.lang.Boolean)\n//  .httpAuth(java.lang.String)\n//  .keyFile(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .scheme(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.toString",
            "displayName": "toString",
            "id": "cdktf.ConsulBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.ConsulBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.ConsulBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.ConsulBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.ConsulBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.ConsulBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.ConsulBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.ConsulBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.ConsulBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.ConsulBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.ConsulBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.ConsulBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.ConsulBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.ConsulBackend;\n\nConsulBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.ConsulBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ConsulBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.ConsulBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.ConsulBackend;\n\nConsulBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.property.node",
            "displayName": "node",
            "id": "cdktf.ConsulBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.ConsulBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ConsulBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.ConsulBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ConsulBackend",
        "displayName": "ConsulBackend",
        "id": "cdktf.ConsulBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.CosBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CosBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.CosBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.CosBackend.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the COS bucket.",
                "remarks": "You shall manually create it first."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.CosBackend.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
                "remarks": "Defaults to private."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.CosBackend.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to enable server side encryption of the state file.",
                "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.CosBackend.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path for saving the state file in bucket.",
                "remarks": "Defaults to terraform.tfstate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.CosBackend.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The directory for saving the state file in bucket.",
                "remarks": "Default to \"env:\"."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.CosBackend.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The region of the COS bucket.",
                "remarks": "It supports environment variables TENCENTCLOUD_REGION."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.secretId",
              "displayName": "secretId",
              "id": "cdktf.CosBackend.Initializer.parameter.secretId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Secret id of Tencent Cloud.",
                "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.CosBackend.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.CosBackend.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Secret key of Tencent Cloud.",
                "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.CosBackend;\n\nCosBackend.Builder.create(Construct scope)\n    .bucket(java.lang.String)\n//  .acl(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .region(java.lang.String)\n//  .secretId(java.lang.String)\n//  .secretKey(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.toString",
            "displayName": "toString",
            "id": "cdktf.CosBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.CosBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.CosBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.CosBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.CosBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.CosBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.CosBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.CosBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.CosBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.CosBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.CosBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.CosBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.CosBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.CosBackend;\n\nCosBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.CosBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.CosBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.CosBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.CosBackend;\n\nCosBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.property.node",
            "displayName": "node",
            "id": "cdktf.CosBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.CosBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.CosBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.CosBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.CosBackend",
        "displayName": "CosBackend",
        "id": "cdktf.CosBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteState.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.organization",
              "displayName": "organization",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.organization",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.workspaces",
              "displayName": "workspaces",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.workspaces",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IRemoteWorkspace",
                    "displayName": "IRemoteWorkspace",
                    "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.hostname",
              "displayName": "hostname",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.hostname",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.DataTerraformRemoteState.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteState;\n\nDataTerraformRemoteState.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .organization(java.lang.String)\n    .workspaces(IRemoteWorkspace)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteState.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteState.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteState.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteState.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteState.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteState.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteState.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteState.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteState.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteState.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteState.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteState.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteState.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteState.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteState.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteState.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteState;\n\nDataTerraformRemoteState.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteState.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteState.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteState.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteState.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteState.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState",
        "displayName": "DataTerraformRemoteState",
        "id": "cdktf.DataTerraformRemoteState",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.password",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The password."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.repo",
              "displayName": "repo",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.repo",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The repository name."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.subpath",
              "displayName": "subpath",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.subpath",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - Path within the repository."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.url",
              "displayName": "url",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.url",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The URL.",
                "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.DataTerraformRemoteStateArtifactory.Initializer.parameter.username",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) - The username."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory;\n\nDataTerraformRemoteStateArtifactory.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .password(java.lang.String)\n    .repo(java.lang.String)\n    .subpath(java.lang.String)\n    .url(java.lang.String)\n    .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateArtifactory.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory;\n\nDataTerraformRemoteStateArtifactory.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateArtifactory.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory",
        "displayName": "DataTerraformRemoteStateArtifactory",
        "id": "cdktf.DataTerraformRemoteStateArtifactory",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.containerName",
              "displayName": "containerName",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.containerName",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Storage Container within the Storage Account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.key",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.storageAccountName",
              "displayName": "storageAccountName",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.storageAccountName",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Storage Account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientCertificatePassword",
              "displayName": "clientCertificatePassword",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientCertificatePassword",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
                "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientCertificatePath",
              "displayName": "clientCertificatePath",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientCertificatePath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
                "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientId",
              "displayName": "clientId",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Client ID of the Service Principal.",
                "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientSecret",
              "displayName": "clientSecret",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.clientSecret",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Client Secret of the Service Principal.",
                "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
                "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.environment",
              "displayName": "environment",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.environment",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Azure Environment which should be used.",
                "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.msiEndpoint",
              "displayName": "msiEndpoint",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.msiEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
                "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.oidcRequestToken",
              "displayName": "oidcRequestToken",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.oidcRequestToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The bearer token for the request to the OIDC provider.",
                "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.oidcRequestUrl",
              "displayName": "oidcRequestUrl",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.oidcRequestUrl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
                "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.resourceGroupName",
              "displayName": "resourceGroupName",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.resourceGroupName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.sasToken",
              "displayName": "sasToken",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.sasToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.snapshot",
              "displayName": "snapshot",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.snapshot",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
                "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.subscriptionId",
              "displayName": "subscriptionId",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.subscriptionId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
                "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.tenantId",
              "displayName": "tenantId",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.tenantId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The Tenant ID in which the Subscription exists.",
                "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useAzureadAuth",
              "displayName": "useAzureadAuth",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useAzureadAuth",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
                "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useMicrosoftGraph",
              "displayName": "useMicrosoftGraph",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useMicrosoftGraph",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
                "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useMsi",
              "displayName": "useMsi",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useMsi",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should Managed Service Identity authentication be used?",
                "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useOidc",
              "displayName": "useOidc",
              "id": "cdktf.DataTerraformRemoteStateAzurerm.Initializer.parameter.useOidc",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
                "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm;\n\nDataTerraformRemoteStateAzurerm.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .containerName(java.lang.String)\n    .key(java.lang.String)\n    .storageAccountName(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .clientCertificatePassword(java.lang.String)\n//  .clientCertificatePath(java.lang.String)\n//  .clientId(java.lang.String)\n//  .clientSecret(java.lang.String)\n//  .endpoint(java.lang.String)\n//  .environment(java.lang.String)\n//  .msiEndpoint(java.lang.String)\n//  .oidcRequestToken(java.lang.String)\n//  .oidcRequestUrl(java.lang.String)\n//  .resourceGroupName(java.lang.String)\n//  .sasToken(java.lang.String)\n//  .snapshot(java.lang.Boolean)\n//  .subscriptionId(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .useAzureadAuth(java.lang.Boolean)\n//  .useMicrosoftGraph(java.lang.Boolean)\n//  .useMsi(java.lang.Boolean)\n//  .useOidc(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateAzurerm.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm;\n\nDataTerraformRemoteStateAzurerm.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateAzurerm.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm",
        "displayName": "DataTerraformRemoteStateAzurerm",
        "id": "cdktf.DataTerraformRemoteStateAzurerm",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateConsul.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.accessToken",
              "displayName": "accessToken",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.accessToken",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) Access token."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) Path in the Consul KV store."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.address",
              "displayName": "address",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.address",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
                "remarks": "Defaults to the local agent HTTP listener."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.caFile",
              "displayName": "caFile",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.caFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.certFile",
              "displayName": "certFile",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.certFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
                "remarks": "requires use of key_file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.datacenter",
              "displayName": "datacenter",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.datacenter",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The datacenter to use.",
                "remarks": "Defaults to that of the agent."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.gzip",
              "displayName": "gzip",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.gzip",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.httpAuth",
              "displayName": "httpAuth",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.httpAuth",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.keyFile",
              "displayName": "keyFile",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.keyFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.lock",
              "displayName": "lock",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.lock",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) false to disable locking.",
                "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scheme",
              "displayName": "scheme",
              "id": "cdktf.DataTerraformRemoteStateConsul.Initializer.parameter.scheme",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
                "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateConsul;\n\nDataTerraformRemoteStateConsul.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .accessToken(java.lang.String)\n    .path(java.lang.String)\n//  .address(java.lang.String)\n//  .caFile(java.lang.String)\n//  .certFile(java.lang.String)\n//  .datacenter(java.lang.String)\n//  .gzip(java.lang.Boolean)\n//  .httpAuth(java.lang.String)\n//  .keyFile(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .scheme(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateConsul.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateConsul.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateConsul.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateConsul.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateConsul.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateConsul.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateConsul.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateConsul.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateConsul.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateConsul.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateConsul.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateConsul.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateConsul.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateConsul.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateConsul.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateConsul.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateConsul;\n\nDataTerraformRemoteStateConsul.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateConsul.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul",
        "displayName": "DataTerraformRemoteStateConsul",
        "id": "cdktf.DataTerraformRemoteStateConsul",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateCos.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the COS bucket.",
                "remarks": "You shall manually create it first."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
                "remarks": "Defaults to private."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to enable server side encryption of the state file.",
                "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path for saving the state file in bucket.",
                "remarks": "Defaults to terraform.tfstate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The directory for saving the state file in bucket.",
                "remarks": "Default to \"env:\"."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The region of the COS bucket.",
                "remarks": "It supports environment variables TENCENTCLOUD_REGION."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.secretId",
              "displayName": "secretId",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.secretId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Secret id of Tencent Cloud.",
                "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.DataTerraformRemoteStateCos.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Secret key of Tencent Cloud.",
                "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateCos;\n\nDataTerraformRemoteStateCos.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .acl(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .region(java.lang.String)\n//  .secretId(java.lang.String)\n//  .secretKey(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateCos.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateCos.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateCos.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateCos.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateCos.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateCos.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateCos.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateCos.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateCos.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateCos.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateCos.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateCos.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateCos.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateCos.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateCos.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateCos.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateCos.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateCos;\n\nDataTerraformRemoteStateCos.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateCos.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateCos.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateCos.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateCos.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateCos.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos",
        "displayName": "DataTerraformRemoteStateCos",
        "id": "cdktf.DataTerraformRemoteStateCos",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.endpoints",
              "displayName": "endpoints",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.endpoints",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) A space-separated list of the etcd endpoints."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The path where to store the state."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.DataTerraformRemoteStateEtcd.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The username."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcd;\n\nDataTerraformRemoteStateEtcd.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .endpoints(java.lang.String)\n    .path(java.lang.String)\n//  .password(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateEtcd.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateEtcd.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateEtcd.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateEtcd.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateEtcd.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcd.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateEtcd.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateEtcd.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcd;\n\nDataTerraformRemoteStateEtcd.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateEtcd.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd",
        "displayName": "DataTerraformRemoteStateEtcd",
        "id": "cdktf.DataTerraformRemoteStateEtcd",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.endpoints",
              "displayName": "endpoints",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.endpoints",
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Required) The list of 'etcd' endpoints which to connect to."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.cacertPath",
              "displayName": "cacertPath",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.cacertPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.certPath",
              "displayName": "certPath",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.certPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.keyPath",
              "displayName": "keyPath",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.keyPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.lock",
              "displayName": "lock",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.lock",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to lock state access.",
                "remarks": "Defaults to true."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Password used to connect to the etcd cluster."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
                "remarks": "Defaults to \"\"."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.DataTerraformRemoteStateEtcdV3.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Username used to connect to the etcd cluster."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3;\n\nDataTerraformRemoteStateEtcdV3.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .endpoints(java.util.List<java.lang.String>)\n//  .cacertPath(java.lang.String)\n//  .certPath(java.lang.String)\n//  .keyPath(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .password(java.lang.String)\n//  .prefix(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateEtcdV3.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3;\n\nDataTerraformRemoteStateEtcdV3.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3",
        "displayName": "DataTerraformRemoteStateEtcdV3",
        "id": "cdktf.DataTerraformRemoteStateEtcdV3",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateGcs.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the GCS bucket.",
                "remarks": "This name must be globally unique."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.accessToken",
              "displayName": "accessToken",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.accessToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.credentials",
              "displayName": "credentials",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.credentials",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
                "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.encryptionKey",
              "displayName": "encryptionKey",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.encryptionKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.impersonateServiceAccount",
              "displayName": "impersonateServiceAccount",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.impersonateServiceAccount",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
                "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.impersonateServiceAccountDelegates",
              "displayName": "impersonateServiceAccountDelegates",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.impersonateServiceAccountDelegates",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) The delegation chain for an impersonating a service account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.DataTerraformRemoteStateGcs.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) GCS prefix inside the bucket.",
                "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateGcs;\n\nDataTerraformRemoteStateGcs.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .accessToken(java.lang.String)\n//  .credentials(java.lang.String)\n//  .encryptionKey(java.lang.String)\n//  .impersonateServiceAccount(java.lang.String)\n//  .impersonateServiceAccountDelegates(java.util.List<java.lang.String>)\n//  .prefix(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateGcs.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateGcs.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateGcs.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateGcs.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateGcs.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateGcs.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateGcs.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateGcs.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateGcs.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateGcs.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateGcs.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateGcs.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateGcs.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateGcs.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateGcs.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateGcs.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateGcs;\n\nDataTerraformRemoteStateGcs.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateGcs.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs",
        "displayName": "DataTerraformRemoteStateGcs",
        "id": "cdktf.DataTerraformRemoteStateGcs",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateHttp.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.address",
              "displayName": "address",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.address",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The address of the REST endpoint."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.lockAddress",
              "displayName": "lockAddress",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.lockAddress",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The address of the lock REST endpoint.",
                "remarks": "Defaults to disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.lockMethod",
              "displayName": "lockMethod",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.lockMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The HTTP method to use when locking.",
                "remarks": "Defaults to LOCK."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password for HTTP basic authentication."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryMax",
              "displayName": "retryMax",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryMax",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The number of HTTP request retries.",
                "remarks": "Defaults to 2."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryWaitMax",
              "displayName": "retryWaitMax",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryWaitMax",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
                "remarks": "Defaults to 30."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryWaitMin",
              "displayName": "retryWaitMin",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.retryWaitMin",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
                "remarks": "Defaults to 1."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.skipCertVerification",
              "displayName": "skipCertVerification",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.skipCertVerification",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to skip TLS verification.",
                "remarks": "Defaults to false."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.unlockAddress",
              "displayName": "unlockAddress",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.unlockAddress",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The address of the unlock REST endpoint.",
                "remarks": "Defaults to disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.unlockMethod",
              "displayName": "unlockMethod",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.unlockMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The HTTP method to use when unlocking.",
                "remarks": "Defaults to UNLOCK."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.updateMethod",
              "displayName": "updateMethod",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.updateMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) HTTP method to use when updating state.",
                "remarks": "Defaults to POST."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.DataTerraformRemoteStateHttp.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The username for HTTP basic authentication."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateHttp;\n\nDataTerraformRemoteStateHttp.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .address(java.lang.String)\n//  .lockAddress(java.lang.String)\n//  .lockMethod(java.lang.String)\n//  .password(java.lang.String)\n//  .retryMax(java.lang.Number)\n//  .retryWaitMax(java.lang.Number)\n//  .retryWaitMin(java.lang.Number)\n//  .skipCertVerification(java.lang.Boolean)\n//  .unlockAddress(java.lang.String)\n//  .unlockMethod(java.lang.String)\n//  .updateMethod(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateHttp.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateHttp.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateHttp.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateHttp.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateHttp.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateHttp.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateHttp.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateHttp.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateHttp.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateHttp.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateHttp.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateHttp.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateHttp.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateHttp.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateHttp.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateHttp.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateHttp;\n\nDataTerraformRemoteStateHttp.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateHttp.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp",
        "displayName": "DataTerraformRemoteStateHttp",
        "id": "cdktf.DataTerraformRemoteStateHttp",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateLocal.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.path",
              "optional": true,
              "default": "- defaults to terraform.${stackId}.tfstate",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Path where the state file is stored."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.workspaceDir",
              "displayName": "workspaceDir",
              "id": "cdktf.DataTerraformRemoteStateLocal.Initializer.parameter.workspaceDir",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to non-default workspaces."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateLocal;\n\nDataTerraformRemoteStateLocal.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n//  .path(java.lang.String)\n//  .workspaceDir(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateLocal.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateLocal.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateLocal.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateLocal.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateLocal.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateLocal.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateLocal.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateLocal.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateLocal.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateLocal.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateLocal.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateLocal.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateLocal.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateLocal.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateLocal.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateLocal.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateLocal;\n\nDataTerraformRemoteStateLocal.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateLocal.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal",
        "displayName": "DataTerraformRemoteStateLocal",
        "id": "cdktf.DataTerraformRemoteStateLocal",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateManta.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.account",
              "displayName": "account",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.account",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.keyId",
              "displayName": "keyId",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.keyId",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.insecureSkipTlsVerify",
              "displayName": "insecureSkipTlsVerify",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.insecureSkipTlsVerify",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.keyMaterial",
              "displayName": "keyMaterial",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.keyMaterial",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.objectName",
              "displayName": "objectName",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.objectName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.url",
              "displayName": "url",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.url",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.Initializer.parameter.user",
              "displayName": "user",
              "id": "cdktf.DataTerraformRemoteStateManta.Initializer.parameter.user",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateManta;\n\nDataTerraformRemoteStateManta.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .account(java.lang.String)\n    .keyId(java.lang.String)\n    .path(java.lang.String)\n//  .insecureSkipTlsVerify(java.lang.Boolean)\n//  .keyMaterial(java.lang.String)\n//  .objectName(java.lang.String)\n//  .url(java.lang.String)\n//  .user(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateManta.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateManta.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateManta.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateManta.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateManta.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateManta.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateManta.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateManta.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateManta.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateManta.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateManta.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateManta.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateManta.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateManta.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateManta.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateManta.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateManta.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateManta;\n\nDataTerraformRemoteStateManta.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateManta.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateManta.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateManta.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateManta.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateManta.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta",
        "displayName": "DataTerraformRemoteStateManta",
        "id": "cdktf.DataTerraformRemoteStateManta",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateOss.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.assumeRole",
              "displayName": "assumeRole",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.assumeRole",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.OssAssumeRole",
                    "displayName": "OssAssumeRole",
                    "fqn": "com.hashicorp.cdktf.OssAssumeRole",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.ecsRoleName",
              "displayName": "ecsRoleName",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.ecsRoleName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.profile",
              "displayName": "profile",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.profile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.securityToken",
              "displayName": "securityToken",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.securityToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.sharedCredentialsFile",
              "displayName": "sharedCredentialsFile",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.sharedCredentialsFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.tablestoreEndpoint",
              "displayName": "tablestoreEndpoint",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.tablestoreEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.Initializer.parameter.tablestoreTable",
              "displayName": "tablestoreTable",
              "id": "cdktf.DataTerraformRemoteStateOss.Initializer.parameter.tablestoreTable",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateOss;\n\nDataTerraformRemoteStateOss.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRole(OssAssumeRole)\n//  .ecsRoleName(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .securityToken(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .tablestoreEndpoint(java.lang.String)\n//  .tablestoreTable(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateOss.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateOss.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateOss.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateOss.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateOss.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateOss.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateOss.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateOss.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateOss.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateOss.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateOss.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateOss.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateOss.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateOss.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateOss.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateOss.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateOss.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateOss;\n\nDataTerraformRemoteStateOss.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateOss.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateOss.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateOss.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateOss.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateOss.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss",
        "displayName": "DataTerraformRemoteStateOss",
        "id": "cdktf.DataTerraformRemoteStateOss",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStatePg.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.connStr",
              "displayName": "connStr",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.connStr",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.schemaName",
              "displayName": "schemaName",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.schemaName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.Initializer.parameter.skipSchemaCreation",
              "displayName": "skipSchemaCreation",
              "id": "cdktf.DataTerraformRemoteStatePg.Initializer.parameter.skipSchemaCreation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStatePg;\n\nDataTerraformRemoteStatePg.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .connStr(java.lang.String)\n//  .schemaName(java.lang.String)\n//  .skipSchemaCreation(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStatePg.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStatePg.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStatePg.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStatePg.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStatePg.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStatePg.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStatePg.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStatePg.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStatePg.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStatePg.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStatePg.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStatePg.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStatePg.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStatePg.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStatePg.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStatePg.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStatePg.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStatePg;\n\nDataTerraformRemoteStatePg.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStatePg.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStatePg.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStatePg.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStatePg.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStatePg.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg",
        "displayName": "DataTerraformRemoteStatePg",
        "id": "cdktf.DataTerraformRemoteStatePg",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateS3.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Name of the S3 Bucket."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.key",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Path to the state file inside the S3 Bucket.",
                "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) AWS access key.",
                "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Canned ACL to be applied to the state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRolePolicy",
              "displayName": "assumeRolePolicy",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRolePolicy",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRolePolicyArns",
              "displayName": "assumeRolePolicyArns",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRolePolicyArns",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRoleTags",
              "displayName": "assumeRoleTags",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRoleTags",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Map of assume role session tags."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRoleTransitiveTagKeys",
              "displayName": "assumeRoleTransitiveTagKeys",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.assumeRoleTransitiveTagKeys",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.dynamodbEndpoint",
              "displayName": "dynamodbEndpoint",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.dynamodbEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
                "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.dynamodbTable",
              "displayName": "dynamodbTable",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.dynamodbTable",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
                "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Enable server side encryption of the state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS S3 API.",
                "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.externalId",
              "displayName": "externalId",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.externalId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) External identifier to use when assuming the role."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.forcePathStyle",
              "displayName": "forcePathStyle",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.forcePathStyle",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.iamEndpoint",
              "displayName": "iamEndpoint",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.iamEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
                "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.kmsKeyId",
              "displayName": "kmsKeyId",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.kmsKeyId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
                "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.maxRetries",
              "displayName": "maxRetries",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.maxRetries",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
                "remarks": "Defaults to 5."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.profile",
              "displayName": "profile",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.profile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
                "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.roleArn",
              "displayName": "roleArn",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.roleArn",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) AWS secret access key.",
                "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sessionName",
              "displayName": "sessionName",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sessionName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Session name to use when assuming the role."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sharedCredentialsFile",
              "displayName": "sharedCredentialsFile",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sharedCredentialsFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Path to the AWS shared credentials file.",
                "remarks": "Defaults to ~/.aws/credentials."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipCredentialsValidation",
              "displayName": "skipCredentialsValidation",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipCredentialsValidation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip credentials validation via the STS API."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipMetadataApiCheck",
              "displayName": "skipMetadataApiCheck",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipMetadataApiCheck",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip usage of EC2 Metadata API."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipRegionValidation",
              "displayName": "skipRegionValidation",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.skipRegionValidation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip validation of provided region name."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sseCustomerKey",
              "displayName": "sseCustomerKey",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.sseCustomerKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
                "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.stsEndpoint",
              "displayName": "stsEndpoint",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.stsEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
                "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
                "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.Initializer.parameter.workspaceKeyPrefix",
              "displayName": "workspaceKeyPrefix",
              "id": "cdktf.DataTerraformRemoteStateS3.Initializer.parameter.workspaceKeyPrefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Prefix applied to the state path inside the bucket.",
                "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateS3;\n\nDataTerraformRemoteStateS3.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n    .key(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRolePolicy(java.lang.String)\n//  .assumeRolePolicyArns(java.util.List<java.lang.String>)\n//  .assumeRoleTags(java.util.Map<java.lang.String, java.lang.String>)\n//  .assumeRoleTransitiveTagKeys(java.util.List<java.lang.String>)\n//  .dynamodbEndpoint(java.lang.String)\n//  .dynamodbTable(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .externalId(java.lang.String)\n//  .forcePathStyle(java.lang.Boolean)\n//  .iamEndpoint(java.lang.String)\n//  .kmsKeyId(java.lang.String)\n//  .maxRetries(java.lang.Number)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .roleArn(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .sessionName(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .skipCredentialsValidation(java.lang.Boolean)\n//  .skipMetadataApiCheck(java.lang.Boolean)\n//  .skipRegionValidation(java.lang.Boolean)\n//  .sseCustomerKey(java.lang.String)\n//  .stsEndpoint(java.lang.String)\n//  .token(java.lang.String)\n//  .workspaceKeyPrefix(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateS3.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateS3.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateS3.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateS3.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateS3.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateS3.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateS3.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateS3.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateS3.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateS3.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateS3.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateS3.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateS3.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateS3.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateS3.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateS3.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateS3.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateS3;\n\nDataTerraformRemoteStateS3.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateS3.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateS3.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateS3.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateS3.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateS3.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3",
        "displayName": "DataTerraformRemoteStateS3",
        "id": "cdktf.DataTerraformRemoteStateS3",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DataTerraformRemoteStateSwift.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.container",
              "displayName": "container",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.container",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialId",
              "displayName": "applicationCredentialId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialName",
              "displayName": "applicationCredentialName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialSecret",
              "displayName": "applicationCredentialSecret",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.applicationCredentialSecret",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.archiveContainer",
              "displayName": "archiveContainer",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.archiveContainer",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.authUrl",
              "displayName": "authUrl",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.authUrl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cacertFile",
              "displayName": "cacertFile",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cacertFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cert",
              "displayName": "cert",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cert",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cloud",
              "displayName": "cloud",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.cloud",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.defaultDomain",
              "displayName": "defaultDomain",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.defaultDomain",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.domainId",
              "displayName": "domainId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.domainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.domainName",
              "displayName": "domainName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.domainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.expireAfter",
              "displayName": "expireAfter",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.expireAfter",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.insecure",
              "displayName": "insecure",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.insecure",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.projectDomainId",
              "displayName": "projectDomainId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.projectDomainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.projectDomainName",
              "displayName": "projectDomainName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.projectDomainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.regionName",
              "displayName": "regionName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.regionName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.stateName",
              "displayName": "stateName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.stateName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.tenantId",
              "displayName": "tenantId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.tenantId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.tenantName",
              "displayName": "tenantName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.tenantName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userDomainId",
              "displayName": "userDomainId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userDomainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userDomainName",
              "displayName": "userDomainName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userDomainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userId",
              "displayName": "userId",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userName",
              "displayName": "userName",
              "id": "cdktf.DataTerraformRemoteStateSwift.Initializer.parameter.userName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateSwift;\n\nDataTerraformRemoteStateSwift.Builder.create(Construct scope, java.lang.String id)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .container(java.lang.String)\n//  .applicationCredentialId(java.lang.String)\n//  .applicationCredentialName(java.lang.String)\n//  .applicationCredentialSecret(java.lang.String)\n//  .archiveContainer(java.lang.String)\n//  .authUrl(java.lang.String)\n//  .cacertFile(java.lang.String)\n//  .cert(java.lang.String)\n//  .cloud(java.lang.String)\n//  .defaultDomain(java.lang.String)\n//  .domainId(java.lang.String)\n//  .domainName(java.lang.String)\n//  .expireAfter(java.lang.String)\n//  .insecure(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .password(java.lang.String)\n//  .projectDomainId(java.lang.String)\n//  .projectDomainName(java.lang.String)\n//  .regionName(java.lang.String)\n//  .stateName(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .tenantName(java.lang.String)\n//  .token(java.lang.String)\n//  .userDomainId(java.lang.String)\n//  .userDomainName(java.lang.String)\n//  .userId(java.lang.String)\n//  .userName(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.toString",
            "displayName": "toString",
            "id": "cdktf.DataTerraformRemoteStateSwift.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.DataTerraformRemoteStateSwift.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.DataTerraformRemoteStateSwift.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateSwift.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.DataTerraformRemoteStateSwift.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.DataTerraformRemoteStateSwift.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.DataTerraformRemoteStateSwift.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.DataTerraformRemoteStateSwift.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.get",
            "displayName": "get",
            "id": "cdktf.DataTerraformRemoteStateSwift.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.DataTerraformRemoteStateSwift.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getList",
            "displayName": "getList",
            "id": "cdktf.DataTerraformRemoteStateSwift.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.DataTerraformRemoteStateSwift.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getString",
            "displayName": "getString",
            "id": "cdktf.DataTerraformRemoteStateSwift.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.DataTerraformRemoteStateSwift.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.DataTerraformRemoteStateSwift.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.DataTerraformRemoteStateSwift.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateSwift;\n\nDataTerraformRemoteStateSwift.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.property.node",
            "displayName": "node",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.DataTerraformRemoteStateSwift.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift",
        "displayName": "DataTerraformRemoteStateSwift",
        "id": "cdktf.DataTerraformRemoteStateSwift",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.EtcdBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.EtcdBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer.parameter.endpoints",
              "displayName": "endpoints",
              "id": "cdktf.EtcdBackend.Initializer.parameter.endpoints",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) A space-separated list of the etcd endpoints."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.EtcdBackend.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The path where to store the state."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.EtcdBackend.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdBackend.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.EtcdBackend.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The username."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.EtcdBackend;\n\nEtcdBackend.Builder.create(Construct scope)\n    .endpoints(java.lang.String)\n    .path(java.lang.String)\n//  .password(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.toString",
            "displayName": "toString",
            "id": "cdktf.EtcdBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.EtcdBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.EtcdBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.EtcdBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.EtcdBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.EtcdBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.EtcdBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.EtcdBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.EtcdBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.EtcdBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.EtcdBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.EtcdBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.EtcdBackend;\n\nEtcdBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.EtcdBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.EtcdBackend;\n\nEtcdBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.property.node",
            "displayName": "node",
            "id": "cdktf.EtcdBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.EtcdBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.EtcdBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.EtcdBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.EtcdBackend",
        "displayName": "EtcdBackend",
        "id": "cdktf.EtcdBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.EtcdV3Backend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.endpoints",
              "displayName": "endpoints",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.endpoints",
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Required) The list of 'etcd' endpoints which to connect to."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.cacertPath",
              "displayName": "cacertPath",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.cacertPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.certPath",
              "displayName": "certPath",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.certPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.keyPath",
              "displayName": "keyPath",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.keyPath",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.lock",
              "displayName": "lock",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.lock",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to lock state access.",
                "remarks": "Defaults to true."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Password used to connect to the etcd cluster."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
                "remarks": "Defaults to \"\"."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.EtcdV3Backend.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.EtcdV3Backend.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Username used to connect to the etcd cluster."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.EtcdV3Backend;\n\nEtcdV3Backend.Builder.create(Construct scope)\n    .endpoints(java.util.List<java.lang.String>)\n//  .cacertPath(java.lang.String)\n//  .certPath(java.lang.String)\n//  .keyPath(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .password(java.lang.String)\n//  .prefix(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.toString",
            "displayName": "toString",
            "id": "cdktf.EtcdV3Backend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.EtcdV3Backend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.EtcdV3Backend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.EtcdV3Backend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.EtcdV3Backend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.EtcdV3Backend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.EtcdV3Backend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.EtcdV3Backend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.EtcdV3Backend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.EtcdV3Backend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.EtcdV3Backend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdV3Backend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.EtcdV3Backend;\n\nEtcdV3Backend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.EtcdV3Backend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.EtcdV3Backend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.EtcdV3Backend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.EtcdV3Backend;\n\nEtcdV3Backend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.property.node",
            "displayName": "node",
            "id": "cdktf.EtcdV3Backend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.EtcdV3Backend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.EtcdV3Backend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3Backend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.EtcdV3Backend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.EtcdV3Backend",
        "displayName": "EtcdV3Backend",
        "id": "cdktf.EtcdV3Backend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.GcsBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.GcsBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.GcsBackend.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The name of the GCS bucket.",
                "remarks": "This name must be globally unique."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.accessToken",
              "displayName": "accessToken",
              "id": "cdktf.GcsBackend.Initializer.parameter.accessToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.credentials",
              "displayName": "credentials",
              "id": "cdktf.GcsBackend.Initializer.parameter.credentials",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
                "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.encryptionKey",
              "displayName": "encryptionKey",
              "id": "cdktf.GcsBackend.Initializer.parameter.encryptionKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.impersonateServiceAccount",
              "displayName": "impersonateServiceAccount",
              "id": "cdktf.GcsBackend.Initializer.parameter.impersonateServiceAccount",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
                "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.impersonateServiceAccountDelegates",
              "displayName": "impersonateServiceAccountDelegates",
              "id": "cdktf.GcsBackend.Initializer.parameter.impersonateServiceAccountDelegates",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) The delegation chain for an impersonating a service account."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.GcsBackend.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.GcsBackend.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) GCS prefix inside the bucket.",
                "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.GcsBackend;\n\nGcsBackend.Builder.create(Construct scope)\n    .bucket(java.lang.String)\n//  .accessToken(java.lang.String)\n//  .credentials(java.lang.String)\n//  .encryptionKey(java.lang.String)\n//  .impersonateServiceAccount(java.lang.String)\n//  .impersonateServiceAccountDelegates(java.util.List<java.lang.String>)\n//  .prefix(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.toString",
            "displayName": "toString",
            "id": "cdktf.GcsBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.GcsBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.GcsBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.GcsBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.GcsBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.GcsBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.GcsBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.GcsBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.GcsBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.GcsBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.GcsBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.GcsBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.GcsBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.GcsBackend;\n\nGcsBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.GcsBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.GcsBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.GcsBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.GcsBackend;\n\nGcsBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.property.node",
            "displayName": "node",
            "id": "cdktf.GcsBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.GcsBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.GcsBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.GcsBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.GcsBackend",
        "displayName": "GcsBackend",
        "id": "cdktf.GcsBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.HttpBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.HttpBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.address",
              "displayName": "address",
              "id": "cdktf.HttpBackend.Initializer.parameter.address",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Required) The address of the REST endpoint."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.lockAddress",
              "displayName": "lockAddress",
              "id": "cdktf.HttpBackend.Initializer.parameter.lockAddress",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The address of the lock REST endpoint.",
                "remarks": "Defaults to disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.lockMethod",
              "displayName": "lockMethod",
              "id": "cdktf.HttpBackend.Initializer.parameter.lockMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The HTTP method to use when locking.",
                "remarks": "Defaults to LOCK."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.HttpBackend.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The password for HTTP basic authentication."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.retryMax",
              "displayName": "retryMax",
              "id": "cdktf.HttpBackend.Initializer.parameter.retryMax",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The number of HTTP request retries.",
                "remarks": "Defaults to 2."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.retryWaitMax",
              "displayName": "retryWaitMax",
              "id": "cdktf.HttpBackend.Initializer.parameter.retryWaitMax",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
                "remarks": "Defaults to 30."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.retryWaitMin",
              "displayName": "retryWaitMin",
              "id": "cdktf.HttpBackend.Initializer.parameter.retryWaitMin",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
                "remarks": "Defaults to 1."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.skipCertVerification",
              "displayName": "skipCertVerification",
              "id": "cdktf.HttpBackend.Initializer.parameter.skipCertVerification",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Whether to skip TLS verification.",
                "remarks": "Defaults to false."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.unlockAddress",
              "displayName": "unlockAddress",
              "id": "cdktf.HttpBackend.Initializer.parameter.unlockAddress",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The address of the unlock REST endpoint.",
                "remarks": "Defaults to disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.unlockMethod",
              "displayName": "unlockMethod",
              "id": "cdktf.HttpBackend.Initializer.parameter.unlockMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The HTTP method to use when unlocking.",
                "remarks": "Defaults to UNLOCK."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.updateMethod",
              "displayName": "updateMethod",
              "id": "cdktf.HttpBackend.Initializer.parameter.updateMethod",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) HTTP method to use when updating state.",
                "remarks": "Defaults to POST."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.HttpBackend.Initializer.parameter.username",
              "displayName": "username",
              "id": "cdktf.HttpBackend.Initializer.parameter.username",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The username for HTTP basic authentication."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.HttpBackend;\n\nHttpBackend.Builder.create(Construct scope)\n    .address(java.lang.String)\n//  .lockAddress(java.lang.String)\n//  .lockMethod(java.lang.String)\n//  .password(java.lang.String)\n//  .retryMax(java.lang.Number)\n//  .retryWaitMax(java.lang.Number)\n//  .retryWaitMin(java.lang.Number)\n//  .skipCertVerification(java.lang.Boolean)\n//  .unlockAddress(java.lang.String)\n//  .unlockMethod(java.lang.String)\n//  .updateMethod(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.toString",
            "displayName": "toString",
            "id": "cdktf.HttpBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.HttpBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.HttpBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.HttpBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.HttpBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.HttpBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.HttpBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.HttpBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.HttpBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.HttpBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.HttpBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.HttpBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.HttpBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.HttpBackend;\n\nHttpBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.HttpBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.HttpBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.HttpBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.HttpBackend;\n\nHttpBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.property.node",
            "displayName": "node",
            "id": "cdktf.HttpBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.HttpBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.HttpBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.HttpBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.HttpBackend",
        "displayName": "HttpBackend",
        "id": "cdktf.HttpBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.LocalBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.LocalBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.LocalBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.LocalBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.LocalBackend.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.LocalBackend.Initializer.parameter.path",
              "optional": true,
              "default": "- defaults to terraform.${stackId}.tfstate",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Path where the state file is stored."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.LocalBackend.Initializer.parameter.workspaceDir",
              "displayName": "workspaceDir",
              "id": "cdktf.LocalBackend.Initializer.parameter.workspaceDir",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The path to non-default workspaces."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.LocalBackend;\n\nLocalBackend.Builder.create(Construct scope)\n//  .path(java.lang.String)\n//  .workspaceDir(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.toString",
            "displayName": "toString",
            "id": "cdktf.LocalBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.LocalBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.LocalBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.LocalBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.LocalBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.LocalBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.LocalBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.LocalBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.LocalBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.LocalBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.getRemoteStateDataSource.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.LocalBackend.getRemoteStateDataSource.parameter.fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.LocalBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.LocalBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.LocalBackend;\n\nLocalBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.LocalBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LocalBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.LocalBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.LocalBackend;\n\nLocalBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.property.node",
            "displayName": "node",
            "id": "cdktf.LocalBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.LocalBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.LocalBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.LocalBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.LocalBackend",
        "displayName": "LocalBackend",
        "id": "cdktf.LocalBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.MantaBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.MantaBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.account",
              "displayName": "account",
              "id": "cdktf.MantaBackend.Initializer.parameter.account",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.keyId",
              "displayName": "keyId",
              "id": "cdktf.MantaBackend.Initializer.parameter.keyId",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.MantaBackend.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.insecureSkipTlsVerify",
              "displayName": "insecureSkipTlsVerify",
              "id": "cdktf.MantaBackend.Initializer.parameter.insecureSkipTlsVerify",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.keyMaterial",
              "displayName": "keyMaterial",
              "id": "cdktf.MantaBackend.Initializer.parameter.keyMaterial",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.objectName",
              "displayName": "objectName",
              "id": "cdktf.MantaBackend.Initializer.parameter.objectName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.url",
              "displayName": "url",
              "id": "cdktf.MantaBackend.Initializer.parameter.url",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.MantaBackend.Initializer.parameter.user",
              "displayName": "user",
              "id": "cdktf.MantaBackend.Initializer.parameter.user",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.MantaBackend;\n\nMantaBackend.Builder.create(Construct scope)\n    .account(java.lang.String)\n    .keyId(java.lang.String)\n    .path(java.lang.String)\n//  .insecureSkipTlsVerify(java.lang.Boolean)\n//  .keyMaterial(java.lang.String)\n//  .objectName(java.lang.String)\n//  .url(java.lang.String)\n//  .user(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.toString",
            "displayName": "toString",
            "id": "cdktf.MantaBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.MantaBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.MantaBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.MantaBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.MantaBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.MantaBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.MantaBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.MantaBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.MantaBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.MantaBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.MantaBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.MantaBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.MantaBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.MantaBackend;\n\nMantaBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.MantaBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MantaBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.MantaBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.MantaBackend;\n\nMantaBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.property.node",
            "displayName": "node",
            "id": "cdktf.MantaBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.MantaBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.MantaBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.MantaBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.MantaBackend",
        "displayName": "MantaBackend",
        "id": "cdktf.MantaBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.OssBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.OssBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.OssBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.OssBackend.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.OssBackend.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.OssBackend.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.assumeRole",
              "displayName": "assumeRole",
              "id": "cdktf.OssBackend.Initializer.parameter.assumeRole",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.OssAssumeRole",
                    "displayName": "OssAssumeRole",
                    "fqn": "com.hashicorp.cdktf.OssAssumeRole",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.ecsRoleName",
              "displayName": "ecsRoleName",
              "id": "cdktf.OssBackend.Initializer.parameter.ecsRoleName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.OssBackend.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.OssBackend.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.OssBackend.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.OssBackend.Initializer.parameter.prefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.profile",
              "displayName": "profile",
              "id": "cdktf.OssBackend.Initializer.parameter.profile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.OssBackend.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.OssBackend.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.securityToken",
              "displayName": "securityToken",
              "id": "cdktf.OssBackend.Initializer.parameter.securityToken",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.sharedCredentialsFile",
              "displayName": "sharedCredentialsFile",
              "id": "cdktf.OssBackend.Initializer.parameter.sharedCredentialsFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.tablestoreEndpoint",
              "displayName": "tablestoreEndpoint",
              "id": "cdktf.OssBackend.Initializer.parameter.tablestoreEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.OssBackend.Initializer.parameter.tablestoreTable",
              "displayName": "tablestoreTable",
              "id": "cdktf.OssBackend.Initializer.parameter.tablestoreTable",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.OssBackend;\n\nOssBackend.Builder.create(Construct scope)\n    .bucket(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRole(OssAssumeRole)\n//  .ecsRoleName(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .securityToken(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .tablestoreEndpoint(java.lang.String)\n//  .tablestoreTable(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.toString",
            "displayName": "toString",
            "id": "cdktf.OssBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.OssBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.OssBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.OssBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.OssBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.OssBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.OssBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.OssBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.OssBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.OssBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.OssBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.OssBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.OssBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.OssBackend;\n\nOssBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.OssBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.OssBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.OssBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.OssBackend;\n\nOssBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.property.node",
            "displayName": "node",
            "id": "cdktf.OssBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.OssBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.OssBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.OssBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.OssBackend",
        "displayName": "OssBackend",
        "id": "cdktf.OssBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.PgBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.PgBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.PgBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.PgBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.PgBackend.Initializer.parameter.connStr",
              "displayName": "connStr",
              "id": "cdktf.PgBackend.Initializer.parameter.connStr",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.PgBackend.Initializer.parameter.schemaName",
              "displayName": "schemaName",
              "id": "cdktf.PgBackend.Initializer.parameter.schemaName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.PgBackend.Initializer.parameter.skipSchemaCreation",
              "displayName": "skipSchemaCreation",
              "id": "cdktf.PgBackend.Initializer.parameter.skipSchemaCreation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.PgBackend;\n\nPgBackend.Builder.create(Construct scope)\n    .connStr(java.lang.String)\n//  .schemaName(java.lang.String)\n//  .skipSchemaCreation(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.toString",
            "displayName": "toString",
            "id": "cdktf.PgBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.PgBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.PgBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.PgBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.PgBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.PgBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.PgBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.PgBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.PgBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.PgBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.PgBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.PgBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.PgBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.PgBackend;\n\nPgBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.PgBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.PgBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.PgBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.PgBackend;\n\nPgBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.property.node",
            "displayName": "node",
            "id": "cdktf.PgBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.PgBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.PgBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.PgBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.PgBackend",
        "displayName": "PgBackend",
        "id": "cdktf.PgBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.RemoteBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.RemoteBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer.parameter.organization",
              "displayName": "organization",
              "id": "cdktf.RemoteBackend.Initializer.parameter.organization",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer.parameter.workspaces",
              "displayName": "workspaces",
              "id": "cdktf.RemoteBackend.Initializer.parameter.workspaces",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IRemoteWorkspace",
                    "displayName": "IRemoteWorkspace",
                    "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer.parameter.hostname",
              "displayName": "hostname",
              "id": "cdktf.RemoteBackend.Initializer.parameter.hostname",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.RemoteBackend.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.RemoteBackend.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.RemoteBackend;\n\nRemoteBackend.Builder.create(Construct scope)\n    .organization(java.lang.String)\n    .workspaces(IRemoteWorkspace)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.toString",
            "displayName": "toString",
            "id": "cdktf.RemoteBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.RemoteBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.RemoteBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.RemoteBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.RemoteBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.RemoteBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.RemoteBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.RemoteBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.RemoteBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.RemoteBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.RemoteBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.RemoteBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.RemoteBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.RemoteBackend;\n\nRemoteBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.RemoteBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.RemoteBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.RemoteBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.RemoteBackend;\n\nRemoteBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.property.node",
            "displayName": "node",
            "id": "cdktf.RemoteBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.RemoteBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.RemoteBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.RemoteBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.RemoteBackend",
        "displayName": "RemoteBackend",
        "id": "cdktf.RemoteBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Resource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Resource.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.Resource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.Resource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.Resource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.Resource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.Resource;\n\nnew Resource(Construct scope, java.lang.String id);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IResource",
            "displayName": "IResource",
            "id": "cdktf.IResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Resource.toString",
            "displayName": "toString",
            "id": "cdktf.Resource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Resource.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.Resource.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Resource.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.Resource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "import com.hashicorp.cdktf.Resource;\n\nResource.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.Resource.property.node",
            "displayName": "node",
            "id": "cdktf.Resource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.Resource.property.stack",
            "displayName": "stack",
            "id": "cdktf.Resource.property.stack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The stack in which this resource is defined.",
              "deprecated": true,
              "deprecationReason": "- Please use Construct from the constructs package instead."
            },
            "usage": "public TerraformStack getStack();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.Resource",
        "displayName": "Resource",
        "id": "cdktf.Resource",
        "docs": {
          "summary": "A construct which represents a resource.",
          "deprecated": true,
          "deprecationReason": "- Please use Construct from the constructs package instead."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.S3Backend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.S3Backend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.S3Backend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.bucket",
              "displayName": "bucket",
              "id": "cdktf.S3Backend.Initializer.parameter.bucket",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Name of the S3 Bucket."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.S3Backend.Initializer.parameter.key",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "Path to the state file inside the S3 Bucket.",
                "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.accessKey",
              "displayName": "accessKey",
              "id": "cdktf.S3Backend.Initializer.parameter.accessKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) AWS access key.",
                "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.acl",
              "displayName": "acl",
              "id": "cdktf.S3Backend.Initializer.parameter.acl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Canned ACL to be applied to the state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.assumeRolePolicy",
              "displayName": "assumeRolePolicy",
              "id": "cdktf.S3Backend.Initializer.parameter.assumeRolePolicy",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.assumeRolePolicyArns",
              "displayName": "assumeRolePolicyArns",
              "id": "cdktf.S3Backend.Initializer.parameter.assumeRolePolicyArns",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.assumeRoleTags",
              "displayName": "assumeRoleTags",
              "id": "cdktf.S3Backend.Initializer.parameter.assumeRoleTags",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Map of assume role session tags."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.assumeRoleTransitiveTagKeys",
              "displayName": "assumeRoleTransitiveTagKeys",
              "id": "cdktf.S3Backend.Initializer.parameter.assumeRoleTransitiveTagKeys",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {
                "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.dynamodbEndpoint",
              "displayName": "dynamodbEndpoint",
              "id": "cdktf.S3Backend.Initializer.parameter.dynamodbEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
                "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.dynamodbTable",
              "displayName": "dynamodbTable",
              "id": "cdktf.S3Backend.Initializer.parameter.dynamodbTable",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
                "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.encrypt",
              "displayName": "encrypt",
              "id": "cdktf.S3Backend.Initializer.parameter.encrypt",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Enable server side encryption of the state file."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.endpoint",
              "displayName": "endpoint",
              "id": "cdktf.S3Backend.Initializer.parameter.endpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS S3 API.",
                "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.externalId",
              "displayName": "externalId",
              "id": "cdktf.S3Backend.Initializer.parameter.externalId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) External identifier to use when assuming the role."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.forcePathStyle",
              "displayName": "forcePathStyle",
              "id": "cdktf.S3Backend.Initializer.parameter.forcePathStyle",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.iamEndpoint",
              "displayName": "iamEndpoint",
              "id": "cdktf.S3Backend.Initializer.parameter.iamEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
                "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.kmsKeyId",
              "displayName": "kmsKeyId",
              "id": "cdktf.S3Backend.Initializer.parameter.kmsKeyId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
                "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.maxRetries",
              "displayName": "maxRetries",
              "id": "cdktf.S3Backend.Initializer.parameter.maxRetries",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {
                "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
                "remarks": "Defaults to 5."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.profile",
              "displayName": "profile",
              "id": "cdktf.S3Backend.Initializer.parameter.profile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.region",
              "displayName": "region",
              "id": "cdktf.S3Backend.Initializer.parameter.region",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
                "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.roleArn",
              "displayName": "roleArn",
              "id": "cdktf.S3Backend.Initializer.parameter.roleArn",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.secretKey",
              "displayName": "secretKey",
              "id": "cdktf.S3Backend.Initializer.parameter.secretKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) AWS secret access key.",
                "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.sessionName",
              "displayName": "sessionName",
              "id": "cdktf.S3Backend.Initializer.parameter.sessionName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Session name to use when assuming the role."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.sharedCredentialsFile",
              "displayName": "sharedCredentialsFile",
              "id": "cdktf.S3Backend.Initializer.parameter.sharedCredentialsFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Path to the AWS shared credentials file.",
                "remarks": "Defaults to ~/.aws/credentials."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.skipCredentialsValidation",
              "displayName": "skipCredentialsValidation",
              "id": "cdktf.S3Backend.Initializer.parameter.skipCredentialsValidation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip credentials validation via the STS API."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.skipMetadataApiCheck",
              "displayName": "skipMetadataApiCheck",
              "id": "cdktf.S3Backend.Initializer.parameter.skipMetadataApiCheck",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip usage of EC2 Metadata API."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.skipRegionValidation",
              "displayName": "skipRegionValidation",
              "id": "cdktf.S3Backend.Initializer.parameter.skipRegionValidation",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "(Optional) Skip validation of provided region name."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.sseCustomerKey",
              "displayName": "sseCustomerKey",
              "id": "cdktf.S3Backend.Initializer.parameter.sseCustomerKey",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
                "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.stsEndpoint",
              "displayName": "stsEndpoint",
              "id": "cdktf.S3Backend.Initializer.parameter.stsEndpoint",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
                "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.S3Backend.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
                "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.S3Backend.Initializer.parameter.workspaceKeyPrefix",
              "displayName": "workspaceKeyPrefix",
              "id": "cdktf.S3Backend.Initializer.parameter.workspaceKeyPrefix",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "(Optional) Prefix applied to the state path inside the bucket.",
                "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.S3Backend;\n\nS3Backend.Builder.create(Construct scope)\n    .bucket(java.lang.String)\n    .key(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRolePolicy(java.lang.String)\n//  .assumeRolePolicyArns(java.util.List<java.lang.String>)\n//  .assumeRoleTags(java.util.Map<java.lang.String, java.lang.String>)\n//  .assumeRoleTransitiveTagKeys(java.util.List<java.lang.String>)\n//  .dynamodbEndpoint(java.lang.String)\n//  .dynamodbTable(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .externalId(java.lang.String)\n//  .forcePathStyle(java.lang.Boolean)\n//  .iamEndpoint(java.lang.String)\n//  .kmsKeyId(java.lang.String)\n//  .maxRetries(java.lang.Number)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .roleArn(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .sessionName(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .skipCredentialsValidation(java.lang.Boolean)\n//  .skipMetadataApiCheck(java.lang.Boolean)\n//  .skipRegionValidation(java.lang.Boolean)\n//  .sseCustomerKey(java.lang.String)\n//  .stsEndpoint(java.lang.String)\n//  .token(java.lang.String)\n//  .workspaceKeyPrefix(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.toString",
            "displayName": "toString",
            "id": "cdktf.S3Backend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.S3Backend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.S3Backend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.S3Backend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.S3Backend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.S3Backend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.S3Backend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.S3Backend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.S3Backend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.S3Backend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.S3Backend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.S3Backend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.S3Backend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.S3Backend;\n\nS3Backend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.S3Backend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.S3Backend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.S3Backend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.S3Backend;\n\nS3Backend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.property.node",
            "displayName": "node",
            "id": "cdktf.S3Backend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.S3Backend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.S3Backend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3Backend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.S3Backend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.S3Backend",
        "displayName": "S3Backend",
        "id": "cdktf.S3Backend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.SwiftBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.SwiftBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.container",
              "displayName": "container",
              "id": "cdktf.SwiftBackend.Initializer.parameter.container",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.applicationCredentialId",
              "displayName": "applicationCredentialId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.applicationCredentialId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.applicationCredentialName",
              "displayName": "applicationCredentialName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.applicationCredentialName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.applicationCredentialSecret",
              "displayName": "applicationCredentialSecret",
              "id": "cdktf.SwiftBackend.Initializer.parameter.applicationCredentialSecret",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.archiveContainer",
              "displayName": "archiveContainer",
              "id": "cdktf.SwiftBackend.Initializer.parameter.archiveContainer",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.authUrl",
              "displayName": "authUrl",
              "id": "cdktf.SwiftBackend.Initializer.parameter.authUrl",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.cacertFile",
              "displayName": "cacertFile",
              "id": "cdktf.SwiftBackend.Initializer.parameter.cacertFile",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.cert",
              "displayName": "cert",
              "id": "cdktf.SwiftBackend.Initializer.parameter.cert",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.cloud",
              "displayName": "cloud",
              "id": "cdktf.SwiftBackend.Initializer.parameter.cloud",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.defaultDomain",
              "displayName": "defaultDomain",
              "id": "cdktf.SwiftBackend.Initializer.parameter.defaultDomain",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.domainId",
              "displayName": "domainId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.domainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.domainName",
              "displayName": "domainName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.domainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.expireAfter",
              "displayName": "expireAfter",
              "id": "cdktf.SwiftBackend.Initializer.parameter.expireAfter",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.insecure",
              "displayName": "insecure",
              "id": "cdktf.SwiftBackend.Initializer.parameter.insecure",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.key",
              "displayName": "key",
              "id": "cdktf.SwiftBackend.Initializer.parameter.key",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.password",
              "displayName": "password",
              "id": "cdktf.SwiftBackend.Initializer.parameter.password",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.projectDomainId",
              "displayName": "projectDomainId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.projectDomainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.projectDomainName",
              "displayName": "projectDomainName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.projectDomainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.regionName",
              "displayName": "regionName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.regionName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.stateName",
              "displayName": "stateName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.stateName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.tenantId",
              "displayName": "tenantId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.tenantId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.tenantName",
              "displayName": "tenantName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.tenantName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.token",
              "displayName": "token",
              "id": "cdktf.SwiftBackend.Initializer.parameter.token",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.userDomainId",
              "displayName": "userDomainId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.userDomainId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.userDomainName",
              "displayName": "userDomainName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.userDomainName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.userId",
              "displayName": "userId",
              "id": "cdktf.SwiftBackend.Initializer.parameter.userId",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.SwiftBackend.Initializer.parameter.userName",
              "displayName": "userName",
              "id": "cdktf.SwiftBackend.Initializer.parameter.userName",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.SwiftBackend;\n\nSwiftBackend.Builder.create(Construct scope)\n    .container(java.lang.String)\n//  .applicationCredentialId(java.lang.String)\n//  .applicationCredentialName(java.lang.String)\n//  .applicationCredentialSecret(java.lang.String)\n//  .archiveContainer(java.lang.String)\n//  .authUrl(java.lang.String)\n//  .cacertFile(java.lang.String)\n//  .cert(java.lang.String)\n//  .cloud(java.lang.String)\n//  .defaultDomain(java.lang.String)\n//  .domainId(java.lang.String)\n//  .domainName(java.lang.String)\n//  .expireAfter(java.lang.String)\n//  .insecure(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .password(java.lang.String)\n//  .projectDomainId(java.lang.String)\n//  .projectDomainName(java.lang.String)\n//  .regionName(java.lang.String)\n//  .stateName(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .tenantName(java.lang.String)\n//  .token(java.lang.String)\n//  .userDomainId(java.lang.String)\n//  .userDomainName(java.lang.String)\n//  .userId(java.lang.String)\n//  .userName(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.toString",
            "displayName": "toString",
            "id": "cdktf.SwiftBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.SwiftBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.SwiftBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.SwiftBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.SwiftBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.SwiftBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.SwiftBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.SwiftBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.SwiftBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.SwiftBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.getRemoteStateDataSource.parameter._fromStack",
                "displayName": "_fromStack",
                "id": "cdktf.SwiftBackend.getRemoteStateDataSource.parameter._fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String _fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.SwiftBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.SwiftBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.SwiftBackend;\n\nSwiftBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.SwiftBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.SwiftBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.SwiftBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.SwiftBackend;\n\nSwiftBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.property.node",
            "displayName": "node",
            "id": "cdktf.SwiftBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.SwiftBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.SwiftBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.SwiftBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.SwiftBackend",
        "displayName": "SwiftBackend",
        "id": "cdktf.SwiftBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformAsset.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformAsset.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformAsset.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer.parameter.path",
              "displayName": "path",
              "id": "cdktf.TerraformAsset.Initializer.parameter.path",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer.parameter.assetHash",
              "displayName": "assetHash",
              "id": "cdktf.TerraformAsset.Initializer.parameter.assetHash",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformAsset.Initializer.parameter.type",
              "displayName": "type",
              "id": "cdktf.TerraformAsset.Initializer.parameter.type",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.AssetType",
                    "displayName": "AssetType",
                    "fqn": "com.hashicorp.cdktf.AssetType",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformAsset;\n\nTerraformAsset.Builder.create(Construct scope, java.lang.String id)\n    .path(java.lang.String)\n//  .assetHash(java.lang.String)\n//  .type(AssetType)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformAsset.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformAsset.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformAsset.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformAsset.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformAsset;\n\nTerraformAsset.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformAsset.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.property.fileName",
            "displayName": "fileName",
            "id": "cdktf.TerraformAsset.property.fileName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Name of the asset."
            },
            "usage": "public java.lang.String getFileName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.property.path",
            "displayName": "path",
            "id": "cdktf.TerraformAsset.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The path relative to the root of the terraform directory in posix format Use this property to reference the asset."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.property.assetHash",
            "displayName": "assetHash",
            "id": "cdktf.TerraformAsset.property.assetHash",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAssetHash();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAsset.property.type",
            "displayName": "type",
            "id": "cdktf.TerraformAsset.property.type",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AssetType",
                  "displayName": "AssetType",
                  "fqn": "com.hashicorp.cdktf.AssetType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public AssetType getType();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformAsset",
        "displayName": "TerraformAsset",
        "id": "cdktf.TerraformAsset",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformBackend.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformBackend.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformBackend.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformBackend.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformBackend.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformBackend.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformBackend.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.TerraformBackend.Initializer.parameter.name",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformBackend;\n\nnew TerraformBackend(Construct scope, java.lang.String id, java.lang.String name);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformBackend.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformBackend.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformBackend.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformBackend.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformBackend.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformBackend.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformBackend.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformBackend.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformBackend.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.getRemoteStateDataSource",
            "displayName": "getRemoteStateDataSource",
            "id": "cdktf.TerraformBackend.getRemoteStateDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.getRemoteStateDataSource.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.Construct",
                      "displayName": "Construct",
                      "fqn": "software.constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.getRemoteStateDataSource.parameter.name",
                "displayName": "name",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.getRemoteStateDataSource.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.TerraformBackend.getRemoteStateDataSource.parameter.fromStack",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a TerraformRemoteState resource that accesses this backend."
            },
            "usage": "public TerraformRemoteState getRemoteStateDataSource(Construct scope, java.lang.String name, java.lang.String fromStack)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformBackend.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformBackend.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformBackend;\n\nTerraformBackend.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.isBackend",
            "displayName": "isBackend",
            "id": "cdktf.TerraformBackend.isBackend",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformBackend.isBackend.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformBackend.isBackend.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.TerraformBackend;\n\nTerraformBackend.isBackend(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformBackend.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformBackend.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformBackend.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformBackend.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformBackend.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformBackend",
        "displayName": "TerraformBackend",
        "id": "cdktf.TerraformBackend",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformDataSource.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.connection",
              "displayName": "connection",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.connection",
              "optional": true,
              "type": {
                "formattingPattern": "% OR %",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.SSHProvisionerConnection",
                        "displayName": "SSHProvisionerConnection",
                        "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.WinrmProvisionerConnection",
                        "displayName": "WinrmProvisionerConnection",
                        "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.count",
              "displayName": "count",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.count",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.dependsOn",
              "displayName": "dependsOn",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.dependsOn",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ITerraformDependable",
                        "displayName": "ITerraformDependable",
                        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.forEach",
              "displayName": "forEach",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.forEach",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ITerraformIterator",
                    "displayName": "ITerraformIterator",
                    "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.lifecycle",
              "displayName": "lifecycle",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.lifecycle",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformResourceLifecycle",
                    "displayName": "TerraformResourceLifecycle",
                    "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.provider",
              "displayName": "provider",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.provider",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProvider",
                    "displayName": "TerraformProvider",
                    "fqn": "com.hashicorp.cdktf.TerraformProvider",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.provisioners",
              "displayName": "provisioners",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.provisioners",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "% OR % OR %",
                    "types": [
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.FileProvisioner",
                            "displayName": "FileProvisioner",
                            "fqn": "com.hashicorp.cdktf.FileProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.LocalExecProvisioner",
                            "displayName": "LocalExecProvisioner",
                            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.RemoteExecProvisioner",
                            "displayName": "RemoteExecProvisioner",
                            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.terraformResourceType",
              "displayName": "terraformResourceType",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.terraformResourceType",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformDataSource.Initializer.parameter.terraformGeneratorMetadata",
              "displayName": "terraformGeneratorMetadata",
              "id": "cdktf.TerraformDataSource.Initializer.parameter.terraformGeneratorMetadata",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProviderGeneratorMetadata",
                    "displayName": "TerraformProviderGeneratorMetadata",
                    "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformDataSource;\n\nTerraformDataSource.Builder.create(Construct scope, java.lang.String id)\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .count(java.lang.Number)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .lifecycle(TerraformResourceLifecycle)\n//  .provider(TerraformProvider)\n//  .provisioners(java.util.List<FileProvisioner)\n//  .provisioners(LocalExecProvisioner)\n//  .provisioners(RemoteExecProvisioner>)\n    .terraformResourceType(java.lang.String)\n//  .terraformGeneratorMetadata(TerraformProviderGeneratorMetadata)\n    .build();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformDataSource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformDataSource.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformDataSource.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformDataSource.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformDataSource.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformDataSource.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformDataSource.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformDataSource.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformDataSource.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getAnyMapAttribute",
            "displayName": "getAnyMapAttribute",
            "id": "cdktf.TerraformDataSource.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getBooleanAttribute",
            "displayName": "getBooleanAttribute",
            "id": "cdktf.TerraformDataSource.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBooleanAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getBooleanMapAttribute",
            "displayName": "getBooleanMapAttribute",
            "id": "cdktf.TerraformDataSource.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getListAttribute",
            "displayName": "getListAttribute",
            "id": "cdktf.TerraformDataSource.getListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberAttribute",
            "displayName": "getNumberAttribute",
            "id": "cdktf.TerraformDataSource.getNumberAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumberAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberListAttribute",
            "displayName": "getNumberListAttribute",
            "id": "cdktf.TerraformDataSource.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberMapAttribute",
            "displayName": "getNumberMapAttribute",
            "id": "cdktf.TerraformDataSource.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getStringAttribute",
            "displayName": "getStringAttribute",
            "id": "cdktf.TerraformDataSource.getStringAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getStringAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.getStringMapAttribute",
            "displayName": "getStringMapAttribute",
            "id": "cdktf.TerraformDataSource.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.getStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.TerraformDataSource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.interpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformDataSource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String terraformAttribute)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformDataSource.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformDataSource.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformDataSource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformDataSource;\n\nTerraformDataSource.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformDataSource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformDataSource.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformDataSource.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformDataSource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.terraformMetaArguments",
            "displayName": "terraformMetaArguments",
            "id": "cdktf.TerraformDataSource.property.terraformMetaArguments",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getTerraformMetaArguments();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.TerraformDataSource.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.terraformGeneratorMetadata",
            "displayName": "terraformGeneratorMetadata",
            "id": "cdktf.TerraformDataSource.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProviderGeneratorMetadata getTerraformGeneratorMetadata();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.count",
            "displayName": "count",
            "id": "cdktf.TerraformDataSource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getCount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformDataSource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformDataSource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.lifecycle",
            "displayName": "lifecycle",
            "id": "cdktf.TerraformDataSource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformResourceLifecycle getLifecycle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource.property.provider",
            "displayName": "provider",
            "id": "cdktf.TerraformDataSource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformDataSource",
        "displayName": "TerraformDataSource",
        "id": "cdktf.TerraformDataSource",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformElement.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformElement.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformElement.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformElement.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformElement.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformElement.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformElement.Initializer.parameter.elementType",
              "displayName": "elementType",
              "id": "cdktf.TerraformElement.Initializer.parameter.elementType",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformElement;\n\nnew TerraformElement(Construct scope, java.lang.String id);,new TerraformElement(Construct scope, java.lang.String id, java.lang.String elementType);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformElement.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformElement.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformElement.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformElement.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformElement.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformElement.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformElement.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformElement.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformElement.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformElement.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformElement.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformElement.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformElement.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformElement.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformElement.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformElement;\n\nTerraformElement.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformElement.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformElement.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformElement.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElement.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformElement.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformElement",
        "displayName": "TerraformElement",
        "id": "cdktf.TerraformElement",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformHclModule.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.dependsOn",
              "displayName": "dependsOn",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.dependsOn",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ITerraformDependable",
                        "displayName": "ITerraformDependable",
                        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.forEach",
              "displayName": "forEach",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.forEach",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ITerraformIterator",
                    "displayName": "ITerraformIterator",
                    "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.providers",
              "displayName": "providers",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.providers",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "% OR %",
                    "types": [
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.TerraformProvider",
                            "displayName": "TerraformProvider",
                            "fqn": "com.hashicorp.cdktf.TerraformProvider",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.TerraformModuleProvider",
                            "displayName": "TerraformModuleProvider",
                            "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.skipAssetCreationFromLocalModules",
              "displayName": "skipAssetCreationFromLocalModules",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.skipAssetCreationFromLocalModules",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.source",
              "displayName": "source",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.source",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.version",
              "displayName": "version",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.version",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformHclModule.Initializer.parameter.variables",
              "displayName": "variables",
              "id": "cdktf.TerraformHclModule.Initializer.parameter.variables",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformHclModule;\n\nTerraformHclModule.Builder.create(Construct scope, java.lang.String id)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .providers(java.util.List<TerraformProvider)\n//  .providers(TerraformModuleProvider>)\n//  .skipAssetCreationFromLocalModules(java.lang.Boolean)\n    .source(java.lang.String)\n//  .version(java.lang.String)\n//  .variables(java.util.Map<java.lang.String, java.lang.Object>)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformHclModule.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformHclModule.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformHclModule.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformHclModule.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformHclModule.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformHclModule.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformHclModule.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformHclModule.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformHclModule.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.addProvider",
            "displayName": "addProvider",
            "id": "cdktf.TerraformHclModule.addProvider",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.addProvider.parameter.provider",
                "displayName": "provider",
                "id": "cdktf.TerraformHclModule.addProvider.parameter.provider",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addProvider(TerraformProvider OR TerraformModuleProvider provider)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.getString",
            "displayName": "getString",
            "id": "cdktf.TerraformHclModule.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.interpolationForOutput",
            "displayName": "interpolationForOutput",
            "id": "cdktf.TerraformHclModule.interpolationForOutput",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.interpolationForOutput.parameter.moduleOutput",
                "displayName": "moduleOutput",
                "id": "cdktf.TerraformHclModule.interpolationForOutput.parameter.moduleOutput",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForOutput(java.lang.String moduleOutput)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.get",
            "displayName": "get",
            "id": "cdktf.TerraformHclModule.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Object get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.TerraformHclModule.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.getList",
            "displayName": "getList",
            "id": "cdktf.TerraformHclModule.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.TerraformHclModule.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformHclModule.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.set",
            "displayName": "set",
            "id": "cdktf.TerraformHclModule.set",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.set.parameter.variable",
                "displayName": "variable",
                "id": "cdktf.TerraformHclModule.set.parameter.variable",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.set.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformHclModule.set.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void set(java.lang.String variable, java.lang.Object value)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformHclModule.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformHclModule.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformHclModule.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformHclModule;\n\nTerraformHclModule.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformHclModule.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformHclModule.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformHclModule.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformHclModule.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.source",
            "displayName": "source",
            "id": "cdktf.TerraformHclModule.property.source",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSource();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.providers",
            "displayName": "providers",
            "id": "cdktf.TerraformHclModule.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProviders();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.skipAssetCreationFromLocalModules",
            "displayName": "skipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformHclModule.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipAssetCreationFromLocalModules();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.version",
            "displayName": "version",
            "id": "cdktf.TerraformHclModule.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformHclModule.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformHclModule.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule.property.variables",
            "displayName": "variables",
            "id": "cdktf.TerraformHclModule.property.variables",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getVariables();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformHclModule",
        "displayName": "TerraformHclModule",
        "id": "cdktf.TerraformHclModule",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformLocal.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformLocal.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformLocal.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformLocal.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformLocal.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformLocal.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformLocal.Initializer.parameter.expression",
              "displayName": "expression",
              "id": "cdktf.TerraformLocal.Initializer.parameter.expression",
              "type": {
                "formattingPattern": "java.lang.Object"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformLocal;\n\nnew TerraformLocal(Construct scope, java.lang.String id, java.lang.Object expression);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformLocal.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformLocal.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformLocal.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformLocal.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformLocal.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformLocal.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformLocal.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformLocal.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformLocal.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformLocal.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformLocal.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformLocal.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformLocal.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformLocal.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformLocal.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformLocal;\n\nTerraformLocal.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformLocal.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformLocal.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformLocal.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformLocal.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.asBoolean",
            "displayName": "asBoolean",
            "id": "cdktf.TerraformLocal.property.asBoolean",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "com.hashicorp.cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public IResolvable getAsBoolean();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.asList",
            "displayName": "asList",
            "id": "cdktf.TerraformLocal.property.asList",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getAsList();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.asNumber",
            "displayName": "asNumber",
            "id": "cdktf.TerraformLocal.property.asNumber",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getAsNumber();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.asString",
            "displayName": "asString",
            "id": "cdktf.TerraformLocal.property.asString",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAsString();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal.property.expression",
            "displayName": "expression",
            "id": "cdktf.TerraformLocal.property.expression",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getExpression();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformLocal",
        "displayName": "TerraformLocal",
        "id": "cdktf.TerraformLocal",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformModule.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformModule.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformModule.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.dependsOn",
              "displayName": "dependsOn",
              "id": "cdktf.TerraformModule.Initializer.parameter.dependsOn",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ITerraformDependable",
                        "displayName": "ITerraformDependable",
                        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.forEach",
              "displayName": "forEach",
              "id": "cdktf.TerraformModule.Initializer.parameter.forEach",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ITerraformIterator",
                    "displayName": "ITerraformIterator",
                    "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.providers",
              "displayName": "providers",
              "id": "cdktf.TerraformModule.Initializer.parameter.providers",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "% OR %",
                    "types": [
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.TerraformProvider",
                            "displayName": "TerraformProvider",
                            "fqn": "com.hashicorp.cdktf.TerraformProvider",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.TerraformModuleProvider",
                            "displayName": "TerraformModuleProvider",
                            "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.skipAssetCreationFromLocalModules",
              "displayName": "skipAssetCreationFromLocalModules",
              "id": "cdktf.TerraformModule.Initializer.parameter.skipAssetCreationFromLocalModules",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.source",
              "displayName": "source",
              "id": "cdktf.TerraformModule.Initializer.parameter.source",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformModule.Initializer.parameter.version",
              "displayName": "version",
              "id": "cdktf.TerraformModule.Initializer.parameter.version",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformModule;\n\nTerraformModule.Builder.create(Construct scope, java.lang.String id)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .providers(java.util.List<TerraformProvider)\n//  .providers(TerraformModuleProvider>)\n//  .skipAssetCreationFromLocalModules(java.lang.Boolean)\n    .source(java.lang.String)\n//  .version(java.lang.String)\n    .build();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformModule.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformModule.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformModule.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformModule.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformModule.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformModule.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformModule.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformModule.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformModule.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.addProvider",
            "displayName": "addProvider",
            "id": "cdktf.TerraformModule.addProvider",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.addProvider.parameter.provider",
                "displayName": "provider",
                "id": "cdktf.TerraformModule.addProvider.parameter.provider",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addProvider(TerraformProvider OR TerraformModuleProvider provider)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.getString",
            "displayName": "getString",
            "id": "cdktf.TerraformModule.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformModule.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.interpolationForOutput",
            "displayName": "interpolationForOutput",
            "id": "cdktf.TerraformModule.interpolationForOutput",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.interpolationForOutput.parameter.moduleOutput",
                "displayName": "moduleOutput",
                "id": "cdktf.TerraformModule.interpolationForOutput.parameter.moduleOutput",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForOutput(java.lang.String moduleOutput)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformModule.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformModule.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformModule.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformModule;\n\nTerraformModule.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformModule.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformModule.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformModule.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformModule.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.source",
            "displayName": "source",
            "id": "cdktf.TerraformModule.property.source",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSource();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.providers",
            "displayName": "providers",
            "id": "cdktf.TerraformModule.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProviders();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.skipAssetCreationFromLocalModules",
            "displayName": "skipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModule.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipAssetCreationFromLocalModules();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.version",
            "displayName": "version",
            "id": "cdktf.TerraformModule.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformModule.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformModule.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformModule",
        "displayName": "TerraformModule",
        "id": "cdktf.TerraformModule",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformOutput.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformOutput.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformOutput.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.value",
              "displayName": "value",
              "id": "cdktf.TerraformOutput.Initializer.parameter.value",
              "type": {
                "formattingPattern": "java.lang.Object"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.dependsOn",
              "displayName": "dependsOn",
              "id": "cdktf.TerraformOutput.Initializer.parameter.dependsOn",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ITerraformDependable",
                        "displayName": "ITerraformDependable",
                        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.description",
              "displayName": "description",
              "id": "cdktf.TerraformOutput.Initializer.parameter.description",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.sensitive",
              "displayName": "sensitive",
              "id": "cdktf.TerraformOutput.Initializer.parameter.sensitive",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformOutput.Initializer.parameter.staticId",
              "displayName": "staticId",
              "id": "cdktf.TerraformOutput.Initializer.parameter.staticId",
              "optional": true,
              "default": "false",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "If set to true the synthesized Terraform Output will be named after the `id` passed to the constructor instead of the default (TerraformOutput.friendlyUniqueId)."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformOutput;\n\nTerraformOutput.Builder.create(Construct scope, java.lang.String id)\n    .value(java.lang.Object)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .description(java.lang.String)\n//  .sensitive(java.lang.Boolean)\n//  .staticId(java.lang.Boolean)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformOutput.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformOutput.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformOutput.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformOutput.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformOutput.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformOutput.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformOutput.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformOutput.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformOutput.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformOutput.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformOutput.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformOutput.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformOutput.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformOutput.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformOutput.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformOutput;\n\nTerraformOutput.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.isTerrafromOutput",
            "displayName": "isTerrafromOutput",
            "id": "cdktf.TerraformOutput.isTerrafromOutput",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformOutput.isTerrafromOutput.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformOutput.isTerrafromOutput.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.TerraformOutput;\n\nTerraformOutput.isTerrafromOutput(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformOutput.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformOutput.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformOutput.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformOutput.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.staticId",
            "displayName": "staticId",
            "id": "cdktf.TerraformOutput.property.staticId",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getStaticId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.value",
            "displayName": "value",
            "id": "cdktf.TerraformOutput.property.value",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformOutput.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.description",
            "displayName": "description",
            "id": "cdktf.TerraformOutput.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDescription();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutput.property.sensitive",
            "displayName": "sensitive",
            "id": "cdktf.TerraformOutput.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSensitive();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformOutput",
        "displayName": "TerraformOutput",
        "id": "cdktf.TerraformOutput",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformProvider.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformProvider.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformProvider.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer.parameter.terraformResourceType",
              "displayName": "terraformResourceType",
              "id": "cdktf.TerraformProvider.Initializer.parameter.terraformResourceType",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer.parameter.terraformGeneratorMetadata",
              "displayName": "terraformGeneratorMetadata",
              "id": "cdktf.TerraformProvider.Initializer.parameter.terraformGeneratorMetadata",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProviderGeneratorMetadata",
                    "displayName": "TerraformProviderGeneratorMetadata",
                    "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformProvider.Initializer.parameter.terraformProviderSource",
              "displayName": "terraformProviderSource",
              "id": "cdktf.TerraformProvider.Initializer.parameter.terraformProviderSource",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformProvider;\n\nTerraformProvider.Builder.create(Construct scope, java.lang.String id)\n    .terraformResourceType(java.lang.String)\n//  .terraformGeneratorMetadata(TerraformProviderGeneratorMetadata)\n//  .terraformProviderSource(java.lang.String)\n    .build();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformProvider.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformProvider.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformProvider.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformProvider.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformProvider.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformProvider.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformProvider.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformProvider.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformProvider.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformProvider.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformProvider.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformProvider.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformProvider.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformProvider.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformProvider.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformProvider;\n\nTerraformProvider.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformProvider.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformProvider.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformProvider.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformProvider.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.metaAttributes",
            "displayName": "metaAttributes",
            "id": "cdktf.TerraformProvider.property.metaAttributes",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getMetaAttributes();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.TerraformProvider.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.terraformGeneratorMetadata",
            "displayName": "terraformGeneratorMetadata",
            "id": "cdktf.TerraformProvider.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProviderGeneratorMetadata getTerraformGeneratorMetadata();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.terraformProviderSource",
            "displayName": "terraformProviderSource",
            "id": "cdktf.TerraformProvider.property.terraformProviderSource",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformProviderSource();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProvider.property.alias",
            "displayName": "alias",
            "id": "cdktf.TerraformProvider.property.alias",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAlias();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformProvider",
        "displayName": "TerraformProvider",
        "id": "cdktf.TerraformProvider",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformRemoteState.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer.parameter.backend",
              "displayName": "backend",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.backend",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer.parameter.defaults",
              "displayName": "defaults",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.defaults",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.Map<java.lang.String, %>",
                "types": [
                  {
                    "formattingPattern": "java.lang.Object"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformRemoteState.Initializer.parameter.workspace",
              "displayName": "workspace",
              "id": "cdktf.TerraformRemoteState.Initializer.parameter.workspace",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformRemoteState;\n\nTerraformRemoteState.Builder.create(Construct scope, java.lang.String id, java.lang.String backend)\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .build();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformRemoteState.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformRemoteState.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformRemoteState.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformRemoteState.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformRemoteState.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformRemoteState.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformRemoteState.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformRemoteState.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformRemoteState.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.get",
            "displayName": "get",
            "id": "cdktf.TerraformRemoteState.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.get.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.get.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable get(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.TerraformRemoteState.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getBoolean.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getBoolean.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getList",
            "displayName": "getList",
            "id": "cdktf.TerraformRemoteState.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getList.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getList.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.TerraformRemoteState.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getNumber.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getNumber.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String output)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getString",
            "displayName": "getString",
            "id": "cdktf.TerraformRemoteState.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.getString.parameter.output",
                "displayName": "output",
                "id": "cdktf.TerraformRemoteState.getString.parameter.output",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String output)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformRemoteState.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformRemoteState.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformRemoteState.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformRemoteState;\n\nTerraformRemoteState.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.TerraformRemoteState.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformRemoteState.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformRemoteState.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformRemoteState.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformRemoteState.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformRemoteState",
        "displayName": "TerraformRemoteState",
        "id": "cdktf.TerraformRemoteState",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformResource.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformResource.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformResource.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.connection",
              "displayName": "connection",
              "id": "cdktf.TerraformResource.Initializer.parameter.connection",
              "optional": true,
              "type": {
                "formattingPattern": "% OR %",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.SSHProvisionerConnection",
                        "displayName": "SSHProvisionerConnection",
                        "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.WinrmProvisionerConnection",
                        "displayName": "WinrmProvisionerConnection",
                        "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.count",
              "displayName": "count",
              "id": "cdktf.TerraformResource.Initializer.parameter.count",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Number"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.dependsOn",
              "displayName": "dependsOn",
              "id": "cdktf.TerraformResource.Initializer.parameter.dependsOn",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ITerraformDependable",
                        "displayName": "ITerraformDependable",
                        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.forEach",
              "displayName": "forEach",
              "id": "cdktf.TerraformResource.Initializer.parameter.forEach",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.ITerraformIterator",
                    "displayName": "ITerraformIterator",
                    "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.lifecycle",
              "displayName": "lifecycle",
              "id": "cdktf.TerraformResource.Initializer.parameter.lifecycle",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformResourceLifecycle",
                    "displayName": "TerraformResourceLifecycle",
                    "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.provider",
              "displayName": "provider",
              "id": "cdktf.TerraformResource.Initializer.parameter.provider",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProvider",
                    "displayName": "TerraformProvider",
                    "fqn": "com.hashicorp.cdktf.TerraformProvider",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.provisioners",
              "displayName": "provisioners",
              "id": "cdktf.TerraformResource.Initializer.parameter.provisioners",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "% OR % OR %",
                    "types": [
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.FileProvisioner",
                            "displayName": "FileProvisioner",
                            "fqn": "com.hashicorp.cdktf.FileProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.LocalExecProvisioner",
                            "displayName": "LocalExecProvisioner",
                            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      },
                      {
                        "formattingPattern": "%",
                        "types": [
                          {
                            "id": "cdktf.RemoteExecProvisioner",
                            "displayName": "RemoteExecProvisioner",
                            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
                            "packageName": "cdktf",
                            "packageVersion": "0.0.0"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.terraformResourceType",
              "displayName": "terraformResourceType",
              "id": "cdktf.TerraformResource.Initializer.parameter.terraformResourceType",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformResource.Initializer.parameter.terraformGeneratorMetadata",
              "displayName": "terraformGeneratorMetadata",
              "id": "cdktf.TerraformResource.Initializer.parameter.terraformGeneratorMetadata",
              "optional": true,
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.TerraformProviderGeneratorMetadata",
                    "displayName": "TerraformProviderGeneratorMetadata",
                    "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformResource;\n\nTerraformResource.Builder.create(Construct scope, java.lang.String id)\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .count(java.lang.Number)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .lifecycle(TerraformResourceLifecycle)\n//  .provider(TerraformProvider)\n//  .provisioners(java.util.List<FileProvisioner)\n//  .provisioners(LocalExecProvisioner)\n//  .provisioners(RemoteExecProvisioner>)\n    .terraformResourceType(java.lang.String)\n//  .terraformGeneratorMetadata(TerraformProviderGeneratorMetadata)\n    .build();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformResource.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformResource.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformResource.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformResource.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformResource.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformResource.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformResource.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformResource.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformResource.toTerraform",
            "parameters": [],
            "docs": {
              "summary": "Adds this resource to the terraform JSON output."
            },
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getAnyMapAttribute",
            "displayName": "getAnyMapAttribute",
            "id": "cdktf.TerraformResource.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getBooleanAttribute",
            "displayName": "getBooleanAttribute",
            "id": "cdktf.TerraformResource.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBooleanAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getBooleanMapAttribute",
            "displayName": "getBooleanMapAttribute",
            "id": "cdktf.TerraformResource.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getListAttribute",
            "displayName": "getListAttribute",
            "id": "cdktf.TerraformResource.getListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberAttribute",
            "displayName": "getNumberAttribute",
            "id": "cdktf.TerraformResource.getNumberAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumberAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberListAttribute",
            "displayName": "getNumberListAttribute",
            "id": "cdktf.TerraformResource.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberMapAttribute",
            "displayName": "getNumberMapAttribute",
            "id": "cdktf.TerraformResource.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getStringAttribute",
            "displayName": "getStringAttribute",
            "id": "cdktf.TerraformResource.getStringAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getStringAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.getStringMapAttribute",
            "displayName": "getStringMapAttribute",
            "id": "cdktf.TerraformResource.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.getStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.TerraformResource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.TerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String terraformAttribute)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformResource.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformResource.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformResource.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformResource;\n\nTerraformResource.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformResource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformResource.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformResource.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformResource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.terraformMetaArguments",
            "displayName": "terraformMetaArguments",
            "id": "cdktf.TerraformResource.property.terraformMetaArguments",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getTerraformMetaArguments();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.TerraformResource.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.terraformGeneratorMetadata",
            "displayName": "terraformGeneratorMetadata",
            "id": "cdktf.TerraformResource.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProviderGeneratorMetadata getTerraformGeneratorMetadata();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.connection",
            "displayName": "connection",
            "id": "cdktf.TerraformResource.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getConnection();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.count",
            "displayName": "count",
            "id": "cdktf.TerraformResource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getCount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformResource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformResource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.lifecycle",
            "displayName": "lifecycle",
            "id": "cdktf.TerraformResource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformResourceLifecycle getLifecycle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.provider",
            "displayName": "provider",
            "id": "cdktf.TerraformResource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource.property.provisioners",
            "displayName": "provisioners",
            "id": "cdktf.TerraformResource.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "com.hashicorp.cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProvisioners();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformResource",
        "displayName": "TerraformResource",
        "id": "cdktf.TerraformResource",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformStack.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformStack.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformStack.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformStack.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformStack.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformStack.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformStack;\n\nnew TerraformStack(Construct scope, java.lang.String id);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformStack.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.addDependency",
            "displayName": "addDependency",
            "id": "cdktf.TerraformStack.addDependency",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.addDependency.parameter.dependency",
                "displayName": "dependency",
                "id": "cdktf.TerraformStack.addDependency.parameter.dependency",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addDependency(TerraformStack dependency)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformStack.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformStack.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformStack.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.allProviders",
            "displayName": "allProviders",
            "id": "cdktf.TerraformStack.allProviders",
            "parameters": [],
            "docs": {},
            "usage": "public java.util.List<TerraformProvider> allProviders()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformStack.dependsOn",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.dependsOn.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.TerraformStack.dependsOn.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Boolean dependsOn(TerraformStack stack)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.ensureBackendExists",
            "displayName": "ensureBackendExists",
            "id": "cdktf.TerraformStack.ensureBackendExists",
            "parameters": [],
            "docs": {},
            "usage": "public TerraformBackend ensureBackendExists()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.getLogicalId",
            "displayName": "getLogicalId",
            "id": "cdktf.TerraformStack.getLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.getLogicalId.parameter.tfElement",
                "displayName": "tfElement",
                "id": "cdktf.TerraformStack.getLogicalId.parameter.tfElement",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformElement",
                          "displayName": "TerraformElement",
                          "fqn": "com.hashicorp.cdktf.TerraformElement",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "constructs.Node",
                          "displayName": "Node",
                          "fqn": "software.constructs.Node",
                          "packageName": "constructs",
                          "packageVersion": "10.1.45"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getLogicalId(TerraformElement OR Node tfElement)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.prepareStack",
            "displayName": "prepareStack",
            "id": "cdktf.TerraformStack.prepareStack",
            "parameters": [],
            "docs": {},
            "usage": "public void prepareStack()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.registerIncomingCrossStackReference",
            "displayName": "registerIncomingCrossStackReference",
            "id": "cdktf.TerraformStack.registerIncomingCrossStackReference",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.registerIncomingCrossStackReference.parameter.fromStack",
                "displayName": "fromStack",
                "id": "cdktf.TerraformStack.registerIncomingCrossStackReference.parameter.fromStack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public TerraformRemoteState registerIncomingCrossStackReference(TerraformStack fromStack)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.registerOutgoingCrossStackReference",
            "displayName": "registerOutgoingCrossStackReference",
            "id": "cdktf.TerraformStack.registerOutgoingCrossStackReference",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.registerOutgoingCrossStackReference.parameter.identifier",
                "displayName": "identifier",
                "id": "cdktf.TerraformStack.registerOutgoingCrossStackReference.parameter.identifier",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public TerraformOutput registerOutgoingCrossStackReference(java.lang.String identifier)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.runAllValidations",
            "displayName": "runAllValidations",
            "id": "cdktf.TerraformStack.runAllValidations",
            "parameters": [],
            "docs": {
              "summary": "Run all validations on the stack."
            },
            "usage": "public void runAllValidations()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformStack.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformStack.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformStack.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformStack;\n\nTerraformStack.isConstruct(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.isStack",
            "displayName": "isStack",
            "id": "cdktf.TerraformStack.isStack",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.isStack.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformStack.isStack.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.TerraformStack;\n\nTerraformStack.isStack(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.of",
            "displayName": "of",
            "id": "cdktf.TerraformStack.of",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformStack.of.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.TerraformStack.of.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.TerraformStack;\n\nTerraformStack.of(IConstruct construct)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformStack.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.property.dependencies",
            "displayName": "dependencies",
            "id": "cdktf.TerraformStack.property.dependencies",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<TerraformStack> getDependencies();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStack.property.synthesizer",
            "displayName": "synthesizer",
            "id": "cdktf.TerraformStack.property.synthesizer",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IStackSynthesizer",
                  "displayName": "IStackSynthesizer",
                  "fqn": "com.hashicorp.cdktf.IStackSynthesizer",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public IStackSynthesizer getSynthesizer();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformStack",
        "displayName": "TerraformStack",
        "id": "cdktf.TerraformStack",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformVariable.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.scope",
              "displayName": "scope",
              "id": "cdktf.TerraformVariable.Initializer.parameter.scope",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "constructs.Construct",
                    "displayName": "Construct",
                    "fqn": "software.constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "10.1.45"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.id",
              "displayName": "id",
              "id": "cdktf.TerraformVariable.Initializer.parameter.id",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.default",
              "displayName": "default",
              "id": "cdktf.TerraformVariable.Initializer.parameter.default",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Object"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.description",
              "displayName": "description",
              "id": "cdktf.TerraformVariable.Initializer.parameter.description",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.nullable",
              "displayName": "nullable",
              "id": "cdktf.TerraformVariable.Initializer.parameter.nullable",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.sensitive",
              "displayName": "sensitive",
              "id": "cdktf.TerraformVariable.Initializer.parameter.sensitive",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.type",
              "displayName": "type",
              "id": "cdktf.TerraformVariable.Initializer.parameter.type",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {
                "summary": "The type argument in a variable block allows you to restrict the type of value that will be accepted as the value for a variable.",
                "remarks": "If no type constraint is set then a value of any type is accepted.\n\nWhile type constraints are optional, we recommend specifying them; they serve as easy reminders for users of the module, and allow Terraform to return a helpful error message if the wrong type is used.\n\nType constraints are created from a mixture of type keywords and type constructors. The supported type keywords are:\n\n* string\n* number\n* bool\n\nThe type constructors allow you to specify complex types such as collections:\n\n* list(<TYPE>)\n* set(<TYPE>)\n* map(<TYPE>)\n* object({<ATTR NAME> = <TYPE>, ... })\n* tuple([<TYPE>, ...])\n\nThe keyword any may be used to indicate that any type is acceptable. For more information on the meaning and behavior of these different types, as well as detailed information about automatic conversion of complex types, see {@link https://www.terraform.io/docs/configuration/types.html|Type Constraints}.\n\nIf both the type and default arguments are specified, the given default value must be convertible to the specified type."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.TerraformVariable.Initializer.parameter.validation",
              "displayName": "validation",
              "id": "cdktf.TerraformVariable.Initializer.parameter.validation",
              "optional": true,
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.TerraformVariableValidationConfig",
                        "displayName": "TerraformVariableValidationConfig",
                        "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  }
                ]
              },
              "docs": {
                "summary": "Specify arbitrary custom validation rules for a particular variable using a validation block nested within the corresponding variable block."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.TerraformVariable;\n\nTerraformVariable.Builder.create(Construct scope, java.lang.String id)\n//  .default(java.lang.Object)\n//  .description(java.lang.String)\n//  .nullable(java.lang.Boolean)\n//  .sensitive(java.lang.Boolean)\n//  .type(java.lang.String)\n//  .validation(java.util.List<TerraformVariableValidationConfig>)\n    .build();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.toString",
            "displayName": "toString",
            "id": "cdktf.TerraformVariable.toString",
            "parameters": [],
            "docs": {
              "summary": "Returns a string representation of this construct."
            },
            "usage": "public java.lang.String toString()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.addOverride",
            "displayName": "addOverride",
            "id": "cdktf.TerraformVariable.addOverride",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformVariable.addOverride.parameter.path",
                "displayName": "path",
                "id": "cdktf.TerraformVariable.addOverride.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.TerraformVariable.addOverride.parameter.value",
                "displayName": "value",
                "id": "cdktf.TerraformVariable.addOverride.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addOverride(java.lang.String path, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.overrideLogicalId",
            "displayName": "overrideLogicalId",
            "id": "cdktf.TerraformVariable.overrideLogicalId",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformVariable.overrideLogicalId.parameter.newLogicalId",
                "displayName": "newLogicalId",
                "id": "cdktf.TerraformVariable.overrideLogicalId.parameter.newLogicalId",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The new logical ID to use for this stack element."
                }
              }
            ],
            "docs": {
              "summary": "Overrides the auto-generated logical ID with a specific ID."
            },
            "usage": "public void overrideLogicalId(java.lang.String newLogicalId)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.resetOverrideLogicalId",
            "displayName": "resetOverrideLogicalId",
            "id": "cdktf.TerraformVariable.resetOverrideLogicalId",
            "parameters": [],
            "docs": {
              "summary": "Resets a previously passed logical Id to use the auto-generated logical id again."
            },
            "usage": "public void resetOverrideLogicalId()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.toMetadata",
            "displayName": "toMetadata",
            "id": "cdktf.TerraformVariable.toMetadata",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toMetadata()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TerraformVariable.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.addValidation",
            "displayName": "addValidation",
            "id": "cdktf.TerraformVariable.addValidation",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformVariable.addValidation.parameter.validation",
                "displayName": "validation",
                "id": "cdktf.TerraformVariable.addValidation.parameter.validation",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addValidation(TerraformVariableValidationConfig validation)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.synthesizeAttributes",
            "displayName": "synthesizeAttributes",
            "id": "cdktf.TerraformVariable.synthesizeAttributes",
            "parameters": [],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> synthesizeAttributes()"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.isConstruct",
            "displayName": "isConstruct",
            "id": "cdktf.TerraformVariable.isConstruct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformVariable.isConstruct.parameter.x",
                "displayName": "x",
                "id": "cdktf.TerraformVariable.isConstruct.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "Any object."
                }
              }
            ],
            "docs": {
              "summary": "Checks if `x` is a construct.",
              "remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead."
            },
            "usage": "import com.hashicorp.cdktf.TerraformVariable;\n\nTerraformVariable.isConstruct(java.lang.Object x)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.node",
            "displayName": "node",
            "id": "cdktf.TerraformVariable.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.cdktfStack",
            "displayName": "cdktfStack",
            "id": "cdktf.TerraformVariable.property.cdktfStack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformStack getCdktfStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.TerraformVariable.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.TerraformVariable.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.booleanValue",
            "displayName": "booleanValue",
            "id": "cdktf.TerraformVariable.property.booleanValue",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "com.hashicorp.cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public IResolvable getBooleanValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.listValue",
            "displayName": "listValue",
            "id": "cdktf.TerraformVariable.property.listValue",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getListValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.numberValue",
            "displayName": "numberValue",
            "id": "cdktf.TerraformVariable.property.numberValue",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getNumberValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.stringValue",
            "displayName": "stringValue",
            "id": "cdktf.TerraformVariable.property.stringValue",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStringValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.value",
            "displayName": "value",
            "id": "cdktf.TerraformVariable.property.value",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.default",
            "displayName": "default",
            "id": "cdktf.TerraformVariable.property.default",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getDefault();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.description",
            "displayName": "description",
            "id": "cdktf.TerraformVariable.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDescription();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.nullable",
            "displayName": "nullable",
            "id": "cdktf.TerraformVariable.property.nullable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getNullable();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.sensitive",
            "displayName": "sensitive",
            "id": "cdktf.TerraformVariable.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSensitive();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.type",
            "displayName": "type",
            "id": "cdktf.TerraformVariable.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable.property.validation",
            "displayName": "validation",
            "id": "cdktf.TerraformVariable.property.validation",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<TerraformVariableValidationConfig> getValidation();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TerraformVariable",
        "displayName": "TerraformVariable",
        "id": "cdktf.TerraformVariable",
        "docs": {}
      }
    ],
    "classes": [
      {
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Annotations.addError",
            "displayName": "addError",
            "id": "cdktf.Annotations.addError",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Annotations.addError.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addError.parameter.message",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The error message."
                }
              }
            ],
            "docs": {
              "summary": "Adds an { \"error\": <message> } metadata entry to this construct.",
              "remarks": "The toolkit will fail synthesis when errors are reported."
            },
            "usage": "public void addError(java.lang.String message)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Annotations.addInfo",
            "displayName": "addInfo",
            "id": "cdktf.Annotations.addInfo",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Annotations.addInfo.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addInfo.parameter.message",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The info message."
                }
              }
            ],
            "docs": {
              "summary": "Adds an info metadata entry to this construct.",
              "remarks": "The CLI will display the info message when apps are synthesized."
            },
            "usage": "public void addInfo(java.lang.String message)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Annotations.addWarning",
            "displayName": "addWarning",
            "id": "cdktf.Annotations.addWarning",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Annotations.addWarning.parameter.message",
                "displayName": "message",
                "id": "cdktf.Annotations.addWarning.parameter.message",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "The warning message."
                }
              }
            ],
            "docs": {
              "summary": "Adds a warning metadata entry to this construct.",
              "remarks": "The CLI will display the warning when an app is synthesized.\nIn a future release the CLI might introduce a --strict flag which\nwill then fail the synthesis if it encounters a warning."
            },
            "usage": "public void addWarning(java.lang.String message)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Annotations.of",
            "displayName": "of",
            "id": "cdktf.Annotations.of",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Annotations.of.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.Annotations.of.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {
                  "summary": "The scope."
                }
              }
            ],
            "docs": {
              "summary": "Returns the annotations API for a construct scope."
            },
            "usage": "import com.hashicorp.cdktf.Annotations;\n\nAnnotations.of(IConstruct scope)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Annotations",
        "displayName": "Annotations",
        "id": "cdktf.Annotations",
        "docs": {
          "summary": "Includes API for attaching annotations such as warning messages to constructs."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.AnyMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AnyMap.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.AnyMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.AnyMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.AnyMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.AnyMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.AnyMap;\n\nnew AnyMap(IInterpolatingParent terraformResource, java.lang.String terraformAttribute);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.AnyMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.lookup",
            "displayName": "lookup",
            "id": "cdktf.AnyMap.lookup",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AnyMap.lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.AnyMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Object lookup(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.resolve",
            "displayName": "resolve",
            "id": "cdktf.AnyMap.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AnyMap.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.AnyMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.toString",
            "displayName": "toString",
            "id": "cdktf.AnyMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.AnyMap.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMap.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.AnyMap.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.AnyMap",
        "displayName": "AnyMap",
        "id": "cdktf.AnyMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.AnyMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.AnyMapList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.AnyMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.AnyMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.AnyMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.AnyMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.AnyMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.AnyMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.AnyMapList;\n\nnew AnyMapList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.AnyMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.get",
            "displayName": "get",
            "id": "cdktf.AnyMapList.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AnyMapList.get.parameter.index",
                "displayName": "index",
                "id": "cdktf.AnyMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public AnyMap get(java.lang.Number index)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.AnyMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AnyMapList.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.AnyMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.resolve",
            "displayName": "resolve",
            "id": "cdktf.AnyMapList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.AnyMapList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.AnyMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.toString",
            "displayName": "toString",
            "id": "cdktf.AnyMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.AnyMapList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.AnyMapList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.AnyMapList",
        "displayName": "AnyMapList",
        "id": "cdktf.AnyMapList",
        "docs": {}
      },
      {
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Aspects.add",
            "displayName": "add",
            "id": "cdktf.Aspects.add",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Aspects.add.parameter.aspect",
                "displayName": "aspect",
                "id": "cdktf.Aspects.add.parameter.aspect",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAspect",
                      "displayName": "IAspect",
                      "fqn": "com.hashicorp.cdktf.IAspect",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The aspect to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds an aspect to apply this scope before synthesis."
            },
            "usage": "public void add(IAspect aspect)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Aspects.of",
            "displayName": "of",
            "id": "cdktf.Aspects.of",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Aspects.of.parameter.scope",
                "displayName": "scope",
                "id": "cdktf.Aspects.of.parameter.scope",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {
                  "summary": "The scope for which these aspects will apply."
                }
              }
            ],
            "docs": {
              "summary": "Returns the `Aspects` object associated with a construct scope."
            },
            "usage": "import com.hashicorp.cdktf.Aspects;\n\nAspects.of(IConstruct scope)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.Aspects.property.all",
            "displayName": "all",
            "id": "cdktf.Aspects.property.all",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAspect",
                      "displayName": "IAspect",
                      "fqn": "com.hashicorp.cdktf.IAspect",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "The list of aspects which were directly applied on this scope."
            },
            "usage": "public java.util.List<IAspect> getAll();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.Aspects",
        "displayName": "Aspects",
        "id": "cdktf.Aspects",
        "docs": {
          "summary": "Aspects can be applied to CDK tree scopes and can operate on the tree before synthesis."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.testingMatchers.AssertionReturn.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn.Initializer.parameter.message",
              "displayName": "message",
              "id": "cdktf.testingMatchers.AssertionReturn.Initializer.parameter.message",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn.Initializer.parameter.pass",
              "displayName": "pass",
              "id": "cdktf.testingMatchers.AssertionReturn.Initializer.parameter.pass",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.testing_matchers.AssertionReturn;\n\nnew AssertionReturn(java.lang.String message, java.lang.Boolean pass);"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn.property.message",
            "displayName": "message",
            "id": "cdktf.testingMatchers.AssertionReturn.property.message",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMessage();"
          },
          {
            "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn.property.pass",
            "displayName": "pass",
            "id": "cdktf.testingMatchers.AssertionReturn.property.pass",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getPass();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.testing_matchers.AssertionReturn",
        "displayName": "AssertionReturn",
        "id": "cdktf.testingMatchers.AssertionReturn",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.BooleanMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.BooleanMap.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.BooleanMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.BooleanMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.BooleanMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.BooleanMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.BooleanMap;\n\nnew BooleanMap(IInterpolatingParent terraformResource, java.lang.String terraformAttribute);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.BooleanMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.lookup",
            "displayName": "lookup",
            "id": "cdktf.BooleanMap.lookup",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.BooleanMap.lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.BooleanMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable lookup(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.resolve",
            "displayName": "resolve",
            "id": "cdktf.BooleanMap.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.BooleanMap.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.BooleanMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.toString",
            "displayName": "toString",
            "id": "cdktf.BooleanMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.BooleanMap.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.BooleanMap.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.BooleanMap",
        "displayName": "BooleanMap",
        "id": "cdktf.BooleanMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.BooleanMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.BooleanMapList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.BooleanMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.BooleanMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.BooleanMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.BooleanMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.BooleanMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.BooleanMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.BooleanMapList;\n\nnew BooleanMapList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.BooleanMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.get",
            "displayName": "get",
            "id": "cdktf.BooleanMapList.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.BooleanMapList.get.parameter.index",
                "displayName": "index",
                "id": "cdktf.BooleanMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public BooleanMap get(java.lang.Number index)"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.BooleanMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.BooleanMapList.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.BooleanMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.resolve",
            "displayName": "resolve",
            "id": "cdktf.BooleanMapList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.BooleanMapList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.BooleanMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.toString",
            "displayName": "toString",
            "id": "cdktf.BooleanMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.BooleanMapList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.BooleanMapList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.BooleanMapList",
        "displayName": "BooleanMapList",
        "id": "cdktf.BooleanMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.CloudWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.CloudWorkspace.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.CloudWorkspace;\n\nnew CloudWorkspace();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.CloudWorkspace.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.CloudWorkspace.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.CloudWorkspace",
        "displayName": "CloudWorkspace",
        "id": "cdktf.CloudWorkspace",
        "docs": {
          "summary": "A cloud workspace can either be a single named workspace, or a list of tagged workspaces."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ComplexComputedList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexComputedList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ComplexComputedList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexComputedList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexComputedList.Initializer.parameter.complexComputedListIndex",
              "displayName": "complexComputedListIndex",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.complexComputedListIndex",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexComputedList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.ComplexComputedList.Initializer.parameter.wrapsSet",
              "optional": true,
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.ComplexComputedList;\n\nnew ComplexComputedList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.String complexComputedListIndex);,new ComplexComputedList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.String complexComputedListIndex, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.ComplexComputedList.computeFqn",
            "parameters": [],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getAnyMapAttribute",
            "displayName": "getAnyMapAttribute",
            "id": "cdktf.ComplexComputedList.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getBooleanAttribute",
            "displayName": "getBooleanAttribute",
            "id": "cdktf.ComplexComputedList.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public IResolvable getBooleanAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getBooleanMapAttribute",
            "displayName": "getBooleanMapAttribute",
            "id": "cdktf.ComplexComputedList.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getListAttribute",
            "displayName": "getListAttribute",
            "id": "cdktf.ComplexComputedList.getListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.List<java.lang.String> getListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberAttribute",
            "displayName": "getNumberAttribute",
            "id": "cdktf.ComplexComputedList.getNumberAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.Number getNumberAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberListAttribute",
            "displayName": "getNumberListAttribute",
            "id": "cdktf.ComplexComputedList.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.List<java.lang.Number> getNumberListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberMapAttribute",
            "displayName": "getNumberMapAttribute",
            "id": "cdktf.ComplexComputedList.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getStringAttribute",
            "displayName": "getStringAttribute",
            "id": "cdktf.ComplexComputedList.getStringAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.String getStringAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.getStringMapAttribute",
            "displayName": "getStringMapAttribute",
            "id": "cdktf.ComplexComputedList.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.getStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexComputedList.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.ComplexComputedList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.ComplexComputedList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.resolve",
            "displayName": "resolve",
            "id": "cdktf.ComplexComputedList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexComputedList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexComputedList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.toString",
            "displayName": "toString",
            "id": "cdktf.ComplexComputedList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.ComplexComputedList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached.",
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ComplexComputedList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "deprecated": true,
              "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
            },
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ComplexComputedList",
        "displayName": "ComplexComputedList",
        "id": "cdktf.ComplexComputedList",
        "docs": {
          "deprecated": true,
          "deprecationReason": "Going to be replaced by Array of ComplexListItem\nand will be removed in the future"
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ComplexList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ComplexList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.ComplexList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.ComplexList;\n\nnew ComplexList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.ComplexList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexList.resolve",
            "displayName": "resolve",
            "id": "cdktf.ComplexList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexList.toString",
            "displayName": "toString",
            "id": "cdktf.ComplexList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.ComplexList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ComplexList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ComplexList",
        "displayName": "ComplexList",
        "id": "cdktf.ComplexList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ComplexMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexMap.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ComplexMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.ComplexMap;\n\nnew ComplexMap(IInterpolatingParent terraformResource, java.lang.String terraformAttribute);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.ComplexMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap.resolve",
            "displayName": "resolve",
            "id": "cdktf.ComplexMap.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexMap.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap.toString",
            "displayName": "toString",
            "id": "cdktf.ComplexMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.ComplexMap.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ComplexMap.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ComplexMap",
        "displayName": "ComplexMap",
        "id": "cdktf.ComplexMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ComplexObject.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ComplexObject.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ComplexObject.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.ComplexObject.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexObject.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.ComplexObject.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexObject.Initializer.parameter.complexObjectIsFromSet",
              "displayName": "complexObjectIsFromSet",
              "id": "cdktf.ComplexObject.Initializer.parameter.complexObjectIsFromSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {
                "summary": "set to true if this item is from inside a set and needs tolist() for accessing it set to \"0\" for single list items."
              }
            },
            {
              "fqn": "com.hashicorp.cdktf.ComplexObject.Initializer.parameter.complexObjectIndex",
              "displayName": "complexObjectIndex",
              "id": "cdktf.ComplexObject.Initializer.parameter.complexObjectIndex",
              "optional": true,
              "type": {
                "formattingPattern": "% OR %",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  },
                  {
                    "formattingPattern": "java.lang.Number"
                  }
                ]
              },
              "docs": {
                "summary": "the index of the complex object in a list."
              }
            }
          ],
          "usage": "import com.hashicorp.cdktf.ComplexObject;\n\nnew ComplexObject(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean complexObjectIsFromSet);,new ComplexObject(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean complexObjectIsFromSet, java.lang.String OR java.lang.Number complexObjectIndex);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.ComplexObject.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getAnyMapAttribute",
            "displayName": "getAnyMapAttribute",
            "id": "cdktf.ComplexObject.getAnyMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getAnyMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getAnyMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getBooleanAttribute",
            "displayName": "getBooleanAttribute",
            "id": "cdktf.ComplexObject.getBooleanAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getBooleanAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getBooleanAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBooleanAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getBooleanMapAttribute",
            "displayName": "getBooleanMapAttribute",
            "id": "cdktf.ComplexObject.getBooleanMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getBooleanMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getBooleanMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getListAttribute",
            "displayName": "getListAttribute",
            "id": "cdktf.ComplexObject.getListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberAttribute",
            "displayName": "getNumberAttribute",
            "id": "cdktf.ComplexObject.getNumberAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumberAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberListAttribute",
            "displayName": "getNumberListAttribute",
            "id": "cdktf.ComplexObject.getNumberListAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberListAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberListAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberListAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberMapAttribute",
            "displayName": "getNumberMapAttribute",
            "id": "cdktf.ComplexObject.getNumberMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getNumberMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getNumberMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getStringAttribute",
            "displayName": "getStringAttribute",
            "id": "cdktf.ComplexObject.getStringAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getStringAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getStringAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getStringAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.getStringMapAttribute",
            "displayName": "getStringMapAttribute",
            "id": "cdktf.ComplexObject.getStringMapAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.getStringMapAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ComplexObject.getStringMapAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMapAttribute(java.lang.String terraformAttribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.ComplexObject.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.ComplexObject.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.resolve",
            "displayName": "resolve",
            "id": "cdktf.ComplexObject.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ComplexObject.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.ComplexObject.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.toString",
            "displayName": "toString",
            "id": "cdktf.ComplexObject.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.ComplexObject.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ComplexObject.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ComplexObject",
        "displayName": "ComplexObject",
        "id": "cdktf.ComplexObject",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.DefaultTokenResolver.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.Initializer.parameter.concat",
              "displayName": "concat",
              "id": "cdktf.DefaultTokenResolver.Initializer.parameter.concat",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IFragmentConcatenator",
                    "displayName": "IFragmentConcatenator",
                    "fqn": "com.hashicorp.cdktf.IFragmentConcatenator",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.DefaultTokenResolver;\n\nnew DefaultTokenResolver(IFragmentConcatenator concat);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver",
            "displayName": "ITokenResolver",
            "id": "cdktf.ITokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveList",
            "displayName": "resolveList",
            "id": "cdktf.DefaultTokenResolver.resolveList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveList.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveList.parameter.xs",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveList.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a list of string."
            },
            "usage": "public java.lang.Object resolveList(java.util.List<java.lang.String> xs, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveMap",
            "displayName": "resolveMap",
            "id": "cdktf.DefaultTokenResolver.resolveMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveMap.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveMap.parameter.xs",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveMap.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveMap.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a map token."
            },
            "usage": "public java.lang.Object resolveMap(java.util.Map<java.lang.String, java.lang.Object> xs, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveNumberList",
            "displayName": "resolveNumberList",
            "id": "cdktf.DefaultTokenResolver.resolveNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveNumberList.parameter.xs",
                "displayName": "xs",
                "id": "cdktf.DefaultTokenResolver.resolveNumberList.parameter.xs",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveNumberList.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveNumberList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolves a list of numbers."
            },
            "usage": "public java.lang.Object resolveNumberList(java.util.List<java.lang.Number> xs, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveString",
            "displayName": "resolveString",
            "id": "cdktf.DefaultTokenResolver.resolveString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveString.parameter.fragments",
                "displayName": "fragments",
                "id": "cdktf.DefaultTokenResolver.resolveString.parameter.fragments",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TokenizedStringFragments",
                      "displayName": "TokenizedStringFragments",
                      "fqn": "com.hashicorp.cdktf.TokenizedStringFragments",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveString.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveString.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve string fragments to Tokens."
            },
            "usage": "public java.lang.Object resolveString(TokenizedStringFragments fragments, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveToken",
            "displayName": "resolveToken",
            "id": "cdktf.DefaultTokenResolver.resolveToken",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveToken.parameter.context",
                "displayName": "context",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.DefaultTokenResolver.resolveToken.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.DefaultTokenResolver.resolveToken.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "com.hashicorp.cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Default Token resolution.",
              "remarks": "Resolve the Token, recurse into whatever it returns,\nthen finally post-process it."
            },
            "usage": "public java.lang.Object resolveToken(IResolvable t, IResolveContext context, IPostProcessor postProcessor)"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.DefaultTokenResolver",
        "displayName": "DefaultTokenResolver",
        "id": "cdktf.DefaultTokenResolver",
        "docs": {
          "summary": "Default resolver implementation."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Fn.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Fn.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.Fn;\n\nnew Fn();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Fn.abs",
            "displayName": "abs",
            "id": "cdktf.Fn.abs",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.abs.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.abs.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/abs.html abs} returns the absolute value of the given number."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.abs(java.lang.Number value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.abspath",
            "displayName": "abspath",
            "id": "cdktf.Fn.abspath",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.abspath.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.abspath.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/abspath.html abspath} takes a string containing a filesystem path and converts it to an absolute path."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.abspath(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.alltrue",
            "displayName": "alltrue",
            "id": "cdktf.Fn.alltrue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.alltrue.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.alltrue.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/alltrue.html alltrue} returns true if all elements in a given collection are true or \"true\"."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.alltrue(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.anytrue",
            "displayName": "anytrue",
            "id": "cdktf.Fn.anytrue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.anytrue.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.anytrue.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/anytrue.html anytrue} returns true if any element in a given collection is true or \"true\"."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.anytrue(java.util.List<java.lang.Object> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.base64decode",
            "displayName": "base64decode",
            "id": "cdktf.Fn.base64decode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.base64decode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64decode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64decode.html base64decode} takes a string containing a Base64 character sequence and returns the original string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.base64decode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.base64encode",
            "displayName": "base64encode",
            "id": "cdktf.Fn.base64encode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.base64encode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64encode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64encode.html base64encode} takes a string containing a Base64 character sequence and returns the original string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.base64encode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.base64gzip",
            "displayName": "base64gzip",
            "id": "cdktf.Fn.base64gzip",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.base64gzip.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64gzip.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64gzip.html base64gzip} compresses a string with gzip and then encodes the result in Base64 encoding."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.base64gzip(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.base64sha256",
            "displayName": "base64sha256",
            "id": "cdktf.Fn.base64sha256",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.base64sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64sha256.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64sha256.html base64sha256} computes the SHA256 hash of a given string and encodes it with Base64."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.base64sha256(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.base64sha512",
            "displayName": "base64sha512",
            "id": "cdktf.Fn.base64sha512",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.base64sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.base64sha512.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/base64sha512.html base64sha512} computes the SHA512 hash of a given string and encodes it with Base64."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.base64sha512(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.basename",
            "displayName": "basename",
            "id": "cdktf.Fn.basename",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.basename.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.basename.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/basename.html basename} takes a string containing a filesystem path and removes all except the last portion from it."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.basename(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.bcrypt",
            "displayName": "bcrypt",
            "id": "cdktf.Fn.bcrypt",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.bcrypt.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.bcrypt.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.bcrypt.parameter.cost",
                "displayName": "cost",
                "id": "cdktf.Fn.bcrypt.parameter.cost",
                "optional": true,
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/bcrypt.html bcrypt} computes a hash of the given string using the Blowfish cipher, returning a string in the Modular Crypt Format usually expected in the shadow password file on many Unix systems."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.bcrypt(java.lang.String value),Fn.bcrypt(java.lang.String value, java.lang.Number cost)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.can",
            "displayName": "can",
            "id": "cdktf.Fn.can",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.can.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.can.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/can.html can} evaluates the given expression and returns a boolean value indicating whether the expression produced a result without any errors."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.can(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.ceil",
            "displayName": "ceil",
            "id": "cdktf.Fn.ceil",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.ceil.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.ceil.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/ceil.html ceil} returns the closest whole number that is greater than or equal to the given value, which may be a fraction."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.ceil(java.lang.Number value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.chomp",
            "displayName": "chomp",
            "id": "cdktf.Fn.chomp",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.chomp.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.chomp.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/chomp.html chomp} removes newline characters at the end of a string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.chomp(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.chunklist",
            "displayName": "chunklist",
            "id": "cdktf.Fn.chunklist",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.chunklist.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.chunklist.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.chunklist.parameter.chunkSize",
                "displayName": "chunkSize",
                "id": "cdktf.Fn.chunklist.parameter.chunkSize",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/chunklist.html chunklist} splits a single list into fixed-size chunks, returning a list of lists."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.chunklist(java.util.List<java.lang.Object> value, java.lang.Number chunkSize)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.cidrhost",
            "displayName": "cidrhost",
            "id": "cdktf.Fn.cidrhost",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrhost.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrhost.parameter.prefix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrhost.parameter.hostnum",
                "displayName": "hostnum",
                "id": "cdktf.Fn.cidrhost.parameter.hostnum",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrhost.html cidrhost} calculates a full host IP address for a given host number within a given IP network address prefix."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.cidrhost(java.lang.String prefix, java.lang.Number hostnum)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.cidrnetmask",
            "displayName": "cidrnetmask",
            "id": "cdktf.Fn.cidrnetmask",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrnetmask.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrnetmask.parameter.prefix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrnetmask.html cidrnetmask} converts an IPv4 address prefix given in CIDR notation into a subnet mask address."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.cidrnetmask(java.lang.String prefix)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.cidrsubnet",
            "displayName": "cidrsubnet",
            "id": "cdktf.Fn.cidrsubnet",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrsubnet.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrsubnet.parameter.prefix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrsubnet.parameter.newbits",
                "displayName": "newbits",
                "id": "cdktf.Fn.cidrsubnet.parameter.newbits",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrsubnet.parameter.netnum",
                "displayName": "netnum",
                "id": "cdktf.Fn.cidrsubnet.parameter.netnum",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrsubnet.html cidrsubnet} calculates a subnet address within given IP network address prefix."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.cidrsubnet(java.lang.String prefix, java.lang.Number newbits, java.lang.Number netnum)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.cidrsubnets",
            "displayName": "cidrsubnets",
            "id": "cdktf.Fn.cidrsubnets",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrsubnets.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.cidrsubnets.parameter.prefix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.cidrsubnets.parameter.newbits",
                "displayName": "newbits",
                "id": "cdktf.Fn.cidrsubnets.parameter.newbits",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/cidrsubnets.html cidrsubnets} calculates a sequence of consecutive IP address ranges within a particular CIDR prefix."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.cidrsubnets(java.lang.String prefix, java.util.List<java.lang.Number> newbits)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.coalesce",
            "displayName": "coalesce",
            "id": "cdktf.Fn.coalesce",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.coalesce.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.coalesce.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/coalesce.html coalesce} takes any number of arguments and returns the first one that isn't null or an empty string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.coalesce(java.util.List<java.lang.Object> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.coalescelist",
            "displayName": "coalescelist",
            "id": "cdktf.Fn.coalescelist",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.coalescelist.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.coalescelist.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/coalescelist.html coalescelist} takes any number of list arguments and returns the first one that isn't empty."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.coalescelist(java.util.List<java.util.List<java.lang.Object>> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.compact",
            "displayName": "compact",
            "id": "cdktf.Fn.compact",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.compact.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.compact.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/compact.html compact} takes a list of strings and returns a new list with any empty string elements removed."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.compact(java.util.List<java.lang.String> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.concat",
            "displayName": "concat",
            "id": "cdktf.Fn.concat",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.concat.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.concat.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/concat.html concat} takes two or more lists and combines them into a single list."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.concat(java.util.List<java.util.List<java.lang.Object>> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.contains",
            "displayName": "contains",
            "id": "cdktf.Fn.contains",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.contains.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.contains.parameter.list",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.contains.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.contains.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/contains.html contains} determines whether a given list or set contains a given single value as one of its elements."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.contains(java.util.List<java.lang.Object> OR IResolvable list, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.csvdecode",
            "displayName": "csvdecode",
            "id": "cdktf.Fn.csvdecode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.csvdecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.csvdecode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/csvdecode.html csvdecode} decodes a string containing CSV-formatted data and produces a list of maps representing that data."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.csvdecode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.dirname",
            "displayName": "dirname",
            "id": "cdktf.Fn.dirname",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.dirname.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.dirname.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/dirname.html dirname} takes a string containing a filesystem path and removes the last portion from it."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.dirname(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.distinct",
            "displayName": "distinct",
            "id": "cdktf.Fn.distinct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.distinct.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.distinct.parameter.list",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/distinct.html distinct} takes a list and returns a new list with any duplicate elements removed."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.distinct(java.util.List<java.lang.Object> OR IResolvable list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.element",
            "displayName": "element",
            "id": "cdktf.Fn.element",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.element.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.element.parameter.list",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.element.parameter.index",
                "displayName": "index",
                "id": "cdktf.Fn.element.parameter.index",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/element.html element} retrieves a single element from a list."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.element(java.util.List<java.lang.Object> OR IResolvable list, java.lang.Number index)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.file",
            "displayName": "file",
            "id": "cdktf.Fn.file",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.file.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.file.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/file.html file} takes a string containing a filesystem path and removes all except the last portion from it."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.file(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filebase64",
            "displayName": "filebase64",
            "id": "cdktf.Fn.filebase64",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64.html filebase64} reads the contents of a file at the given path and returns them as a base64-encoded string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filebase64(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filebase64sha256",
            "displayName": "filebase64sha256",
            "id": "cdktf.Fn.filebase64sha256",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filebase64sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64sha256.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64sha256.html filebase64sha256} is a variant of base64sha256 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filebase64sha256(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filebase64sha512",
            "displayName": "filebase64sha512",
            "id": "cdktf.Fn.filebase64sha512",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filebase64sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filebase64sha512.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filebase64sha512.html filebase64sha512} is a variant of base64sha512 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filebase64sha512(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.fileexists",
            "displayName": "fileexists",
            "id": "cdktf.Fn.fileexists",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.fileexists.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.fileexists.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/fileexists.html fileexists} determines whether a file exists at a given path."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.fileexists(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filemd5",
            "displayName": "filemd5",
            "id": "cdktf.Fn.filemd5",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filemd5.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filemd5.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filemd5.html filemd5} is a variant of md5 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filemd5(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.fileset",
            "displayName": "fileset",
            "id": "cdktf.Fn.fileset",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.fileset.parameter.path",
                "displayName": "path",
                "id": "cdktf.Fn.fileset.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.fileset.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.fileset.parameter.pattern",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/fileset.html fileset} enumerates a set of regular file names given a path and pattern."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.fileset(java.lang.String path, java.lang.String pattern)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filesha1",
            "displayName": "filesha1",
            "id": "cdktf.Fn.filesha1",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filesha1.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha1.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha1.html filesha1} is a variant of sha1 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filesha1(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filesha256",
            "displayName": "filesha256",
            "id": "cdktf.Fn.filesha256",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filesha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha256.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha256.html filesha256} is a variant of sha256 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filesha256(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.filesha512",
            "displayName": "filesha512",
            "id": "cdktf.Fn.filesha512",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.filesha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.filesha512.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/filesha512.html filesha512} is a variant of sha512 that hashes the contents of a given file rather than a literal string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.filesha512(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.flatten",
            "displayName": "flatten",
            "id": "cdktf.Fn.flatten",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.flatten.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.flatten.parameter.list",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/flatten.html flatten} takes a list and replaces any elements that are lists with a flattened sequence of the list contents."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.flatten(java.util.List<java.lang.Object> OR IResolvable list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.floor",
            "displayName": "floor",
            "id": "cdktf.Fn.floor",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.floor.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.floor.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/floor.html floor} returns the closest whole number that is less than or equal to the given value, which may be a fraction."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.floor(java.lang.Number value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.format",
            "displayName": "format",
            "id": "cdktf.Fn.format",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.format.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.format.parameter.spec",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.format.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.format.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/format.html format} produces a string by formatting a number of other values according to a specification string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.format(java.lang.String spec, java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.formatdate",
            "displayName": "formatdate",
            "id": "cdktf.Fn.formatdate",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.formatdate.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.formatdate.parameter.spec",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.formatdate.parameter.timestamp",
                "displayName": "timestamp",
                "id": "cdktf.Fn.formatdate.parameter.timestamp",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/formatdate.html formatdate} converts a timestamp into a different time format."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.formatdate(java.lang.String spec, java.lang.String timestamp)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.formatlist",
            "displayName": "formatlist",
            "id": "cdktf.Fn.formatlist",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.formatlist.parameter.spec",
                "displayName": "spec",
                "id": "cdktf.Fn.formatlist.parameter.spec",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.formatlist.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.formatlist.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/formatlist.html formatlist} produces a list of strings by formatting a number of other values according to a specification string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.formatlist(java.lang.String spec, java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.indent",
            "displayName": "indent",
            "id": "cdktf.Fn.indent",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.indent.parameter.indentation",
                "displayName": "indentation",
                "id": "cdktf.Fn.indent.parameter.indentation",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.indent.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.indent.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/indent.html indent} adds a given number of spaces to the beginnings of all but the first line in a given multi-line string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.indent(java.lang.Number indentation, java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.index",
            "displayName": "index",
            "id": "cdktf.Fn.index",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.index.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.index.parameter.list",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.index.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.index.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/index.html index} finds the element index for a given value in a list."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.index(java.util.List<java.lang.Object> OR IResolvable list, java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.join",
            "displayName": "join",
            "id": "cdktf.Fn.join",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.join.parameter.separator",
                "displayName": "separator",
                "id": "cdktf.Fn.join.parameter.separator",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.join.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.join.parameter.value",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/join.html join} produces a string by concatenating together all elements of a given list of strings with the given delimiter."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.join(java.lang.String separator, java.util.List<java.lang.String> value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.jsondecode",
            "displayName": "jsondecode",
            "id": "cdktf.Fn.jsondecode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.jsondecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.jsondecode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/jsondecode.html jsondecode} interprets a given string as JSON, returning a representation of the result of decoding that string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.jsondecode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.jsonencode",
            "displayName": "jsonencode",
            "id": "cdktf.Fn.jsonencode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.jsonencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.jsonencode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/jsonencode.html jsonencode} encodes a given value to a string using JSON syntax."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.jsonencode(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.keys",
            "displayName": "keys",
            "id": "cdktf.Fn.keys",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.keys.parameter.map",
                "displayName": "map",
                "id": "cdktf.Fn.keys.parameter.map",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/keys.html keys} takes a map and returns a list containing the keys from that map."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.keys(IResolvable OR java.util.Map<java.lang.String, java.lang.Object> map)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.lengthOf",
            "displayName": "lengthOf",
            "id": "cdktf.Fn.lengthOf",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.lengthOf.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lengthOf.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/length.html length} determines the length of a given list, map, or string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.lengthOf(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.log",
            "displayName": "log",
            "id": "cdktf.Fn.log",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.log.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.log.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.log.parameter.base",
                "displayName": "base",
                "id": "cdktf.Fn.log.parameter.base",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/log.html log} returns the logarithm of a given number in a given base."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.log(java.lang.Number value, java.lang.Number base)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.lookup",
            "displayName": "lookup",
            "id": "cdktf.Fn.lookup",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.lookup.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lookup.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.Fn.lookup.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.lookup.parameter.defaultValue",
                "displayName": "defaultValue",
                "id": "cdktf.Fn.lookup.parameter.defaultValue",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/lookup.html lookup} retrieves the value of a single element from a map, given its key. If the given key does not exist, the given default value is returned instead."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.lookup(java.lang.Object value, java.lang.Object key, java.lang.Object defaultValue)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.lower",
            "displayName": "lower",
            "id": "cdktf.Fn.lower",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.lower.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.lower.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/lower.html lower} converts all cased letters in the given string to lowercase."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.lower(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.matchkeys",
            "displayName": "matchkeys",
            "id": "cdktf.Fn.matchkeys",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.matchkeys.parameter.valuesList",
                "displayName": "valuesList",
                "id": "cdktf.Fn.matchkeys.parameter.valuesList",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.matchkeys.parameter.keysList",
                "displayName": "keysList",
                "id": "cdktf.Fn.matchkeys.parameter.keysList",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.matchkeys.parameter.searchSet",
                "displayName": "searchSet",
                "id": "cdktf.Fn.matchkeys.parameter.searchSet",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/matchkeys.html matchkeys} constructs a new list by taking a subset of elements from one list whose indexes match the corresponding indexes of values in another list."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.matchkeys(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable valuesList, java.lang.String OR java.util.List<java.lang.Object> OR IResolvable keysList, java.lang.String OR java.util.List<java.lang.Object> OR IResolvable searchSet)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.max",
            "displayName": "max",
            "id": "cdktf.Fn.max",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.max.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.max.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/max.html max} takes one or more numbers and returns the greatest number from the set."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.max(java.util.List<java.lang.Number> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.md5",
            "displayName": "md5",
            "id": "cdktf.Fn.md5",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.md5.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.md5.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/md5.html md5} computes the MD5 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.md5(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.mergeLists",
            "displayName": "mergeLists",
            "id": "cdktf.Fn.mergeLists",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.mergeLists.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.mergeLists.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/merge.html merge} takes an arbitrary number of maps or objects, and returns a single map or object that contains a merged set of elements from all arguments."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.mergeLists(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.mergeMaps",
            "displayName": "mergeMaps",
            "id": "cdktf.Fn.mergeMaps",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.mergeMaps.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.mergeMaps.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/merge.html merge} takes an arbitrary number of maps or objects, and returns a single map or object that contains a merged set of elements from all arguments."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.mergeMaps(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.min",
            "displayName": "min",
            "id": "cdktf.Fn.min",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.min.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.min.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/min.html min} takes one or more numbers and returns the smallest number from the set."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.min(java.util.List<java.lang.Number> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.nonsensitive",
            "displayName": "nonsensitive",
            "id": "cdktf.Fn.nonsensitive",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.nonsensitive.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.nonsensitive.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/nonsensitive.html nonsensitive} takes a sensitive value and returns a copy of that value with the sensitive marking removed, thereby exposing the sensitive value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.nonsensitive(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.one",
            "displayName": "one",
            "id": "cdktf.Fn.one",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.one.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.one.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/one.html one} takes a list, set, or tuple value with either zero or one elements."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.one(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.parseInt",
            "displayName": "parseInt",
            "id": "cdktf.Fn.parseInt",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.parseInt.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.parseInt.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.parseInt.parameter.base",
                "displayName": "base",
                "id": "cdktf.Fn.parseInt.parameter.base",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/parseint.html parseInt} parses the given string as a representation of an integer in the specified base and returns the resulting number. The base must be between 2 and 62 inclusive."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.parseInt(java.lang.String value, java.lang.Number base)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.pathexpand",
            "displayName": "pathexpand",
            "id": "cdktf.Fn.pathexpand",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.pathexpand.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.pathexpand.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/pathexpand.html pathexpand} takes a string containing a filesystem path and removes the last portion from it."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.pathexpand(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.pow",
            "displayName": "pow",
            "id": "cdktf.Fn.pow",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.pow.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.pow.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.pow.parameter.power",
                "displayName": "power",
                "id": "cdktf.Fn.pow.parameter.power",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/pow.html pow} calculates an exponent, by raising its first argument to the power of the second argument."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.pow(java.lang.Number value, java.lang.Number power)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.range",
            "displayName": "range",
            "id": "cdktf.Fn.range",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.range.parameter.start",
                "displayName": "start",
                "id": "cdktf.Fn.range.parameter.start",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.range.parameter.limit",
                "displayName": "limit",
                "id": "cdktf.Fn.range.parameter.limit",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.range.parameter.step",
                "displayName": "step",
                "id": "cdktf.Fn.range.parameter.step",
                "optional": true,
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/range.html range} generates a list of numbers using a start value, a limit value, and a step value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.range(java.lang.Number start, java.lang.Number limit),Fn.range(java.lang.Number start, java.lang.Number limit, java.lang.Number step)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.rawString",
            "displayName": "rawString",
            "id": "cdktf.Fn.rawString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.rawString.parameter.str",
                "displayName": "str",
                "id": "cdktf.Fn.rawString.parameter.str",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Use this function to wrap a string and escape it properly for the use in Terraform This is only needed in certain scenarios (e.g., if you have unescaped double quotes in the string)."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.rawString(java.lang.String str)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.regex",
            "displayName": "regex",
            "id": "cdktf.Fn.regex",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.regex.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.regex.parameter.pattern",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.regex.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.regex.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/regex.html regex} applies a regular expression to a string and returns the matching substrings in pattern."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.regex(java.lang.String pattern, java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.regexall",
            "displayName": "regexall",
            "id": "cdktf.Fn.regexall",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.regexall.parameter.pattern",
                "displayName": "pattern",
                "id": "cdktf.Fn.regexall.parameter.pattern",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.regexall.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.regexall.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/regexall.html regexall} applies a regular expression to a string and returns a list of all matches."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.regexall(java.lang.String pattern, java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.replace",
            "displayName": "replace",
            "id": "cdktf.Fn.replace",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.replace.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.replace.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.replace.parameter.substring",
                "displayName": "substring",
                "id": "cdktf.Fn.replace.parameter.substring",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.replace.parameter.replacement",
                "displayName": "replacement",
                "id": "cdktf.Fn.replace.parameter.replacement",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/replace.html replace} searches a given string for another given substring, and replaces each occurrence with a given replacement string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.replace(java.lang.String value, java.lang.String substring, java.lang.String replacement)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.reverse",
            "displayName": "reverse",
            "id": "cdktf.Fn.reverse",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.reverse.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.reverse.parameter.values",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/reverse.html reverse} takes a sequence and produces a new sequence of the same length with all of the same elements as the given sequence but in reverse order."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.reverse(java.util.List<java.lang.Object> OR IResolvable values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.rsadecrypt",
            "displayName": "rsadecrypt",
            "id": "cdktf.Fn.rsadecrypt",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.rsadecrypt.parameter.ciphertext",
                "displayName": "ciphertext",
                "id": "cdktf.Fn.rsadecrypt.parameter.ciphertext",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.rsadecrypt.parameter.privatekey",
                "displayName": "privatekey",
                "id": "cdktf.Fn.rsadecrypt.parameter.privatekey",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/rsadecrypt.html rsadecrypt} decrypts an RSA-encrypted ciphertext, returning the corresponding cleartext."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.rsadecrypt(java.lang.String ciphertext, java.lang.String privatekey)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sensitive",
            "displayName": "sensitive",
            "id": "cdktf.Fn.sensitive",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sensitive.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.sensitive.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sensitive.html sensitive} takes any value and returns a copy of it marked so that Terraform will treat it as sensitive, with the same meaning and behavior as for sensitive input variables."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sensitive(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.setintersection",
            "displayName": "setintersection",
            "id": "cdktf.Fn.setintersection",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.setintersection.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setintersection.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setintersection.html setintersection} function takes multiple sets and produces a single set containing only the elements that all of the given sets have in common."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.setintersection(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.setproduct",
            "displayName": "setproduct",
            "id": "cdktf.Fn.setproduct",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.setproduct.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setproduct.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setproduct.html setproduct} function finds all of the possible combinations of elements from all of the given sets by computing the Cartesian product."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.setproduct(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.setsubtract",
            "displayName": "setsubtract",
            "id": "cdktf.Fn.setsubtract",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.setsubtract.parameter.minuend",
                "displayName": "minuend",
                "id": "cdktf.Fn.setsubtract.parameter.minuend",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.setsubtract.parameter.subtrahend",
                "displayName": "subtrahend",
                "id": "cdktf.Fn.setsubtract.parameter.subtrahend",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/slice.html setsubtract} function returns a new set containing the elements from the first set that are not present in the second set."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.setsubtract(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable minuend, java.lang.String OR java.util.List<java.lang.Object> OR IResolvable subtrahend)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.setunion",
            "displayName": "setunion",
            "id": "cdktf.Fn.setunion",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.setunion.parameter.values",
                "displayName": "values",
                "id": "cdktf.Fn.setunion.parameter.values",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {
                  "summary": "- Arguments are passed in an array."
                }
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/setunion.html setunion} function takes multiple sets and produces a single set containing the elements from all of the given sets."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.setunion(java.util.List<java.lang.Object> values)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sha1",
            "displayName": "sha1",
            "id": "cdktf.Fn.sha1",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sha1.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha1.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha1.html sha1} computes the SHA1 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sha1(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sha256",
            "displayName": "sha256",
            "id": "cdktf.Fn.sha256",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sha256.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha256.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha256.html sha256} computes the SHA256 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sha256(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sha512",
            "displayName": "sha512",
            "id": "cdktf.Fn.sha512",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sha512.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.sha512.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sha512.html sha512} computes the SHA512 hash of a given string and encodes it with hexadecimal digits."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sha512(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.signum",
            "displayName": "signum",
            "id": "cdktf.Fn.signum",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.signum.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.signum.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/signum.html signum} determines the sign of a number, returning a number between -1 and 1 to represent the sign."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.signum(java.lang.Number value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.slice",
            "displayName": "slice",
            "id": "cdktf.Fn.slice",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.slice.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.slice.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.slice.parameter.startindex",
                "displayName": "startindex",
                "id": "cdktf.Fn.slice.parameter.startindex",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.slice.parameter.endindex",
                "displayName": "endindex",
                "id": "cdktf.Fn.slice.parameter.endindex",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/slice.html slice} extracts some consecutive elements from within a list."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.slice(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable list, java.lang.Number startindex, java.lang.Number endindex)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sort",
            "displayName": "sort",
            "id": "cdktf.Fn.sort",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sort.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.sort.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sort.html sort} takes a list of strings and returns a new list with those strings sorted lexicographically."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sort(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.split",
            "displayName": "split",
            "id": "cdktf.Fn.split",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.split.parameter.seperator",
                "displayName": "seperator",
                "id": "cdktf.Fn.split.parameter.seperator",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.split.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.split.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/split.html split} produces a list by dividing a given string at all occurrences of a given separator."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.split(java.lang.String seperator, java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.strrev",
            "displayName": "strrev",
            "id": "cdktf.Fn.strrev",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.strrev.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.strrev.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/strrev.html strrev} reverses the characters in a string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.strrev(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.substr",
            "displayName": "substr",
            "id": "cdktf.Fn.substr",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.substr.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.substr.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.substr.parameter.offset",
                "displayName": "offset",
                "id": "cdktf.Fn.substr.parameter.offset",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.substr.parameter.length",
                "displayName": "length",
                "id": "cdktf.Fn.substr.parameter.length",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/substr.html substr} extracts a substring from a given string by offset and length."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.substr(java.lang.String value, java.lang.Number offset, java.lang.Number length)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.sum",
            "displayName": "sum",
            "id": "cdktf.Fn.sum",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.sum.parameter.list",
                "displayName": "list",
                "id": "cdktf.Fn.sum.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/sum.html sum} takes a list or set of numbers and returns the sum of those numbers."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.sum(java.lang.String OR java.util.List<java.lang.Object> OR IResolvable list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.templatefile",
            "displayName": "templatefile",
            "id": "cdktf.Fn.templatefile",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.templatefile.parameter.path",
                "displayName": "path",
                "id": "cdktf.Fn.templatefile.parameter.path",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.templatefile.parameter.vars",
                "displayName": "vars",
                "id": "cdktf.Fn.templatefile.parameter.vars",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/templatefile.html templatefile} reads the file at the given path and renders its content as a template using a supplied set of template variables."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.templatefile(java.lang.String path, java.lang.Object vars)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.textdecodebase64",
            "displayName": "textdecodebase64",
            "id": "cdktf.Fn.textdecodebase64",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.textdecodebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.textdecodebase64.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.textdecodebase64.parameter.encodingName",
                "displayName": "encodingName",
                "id": "cdktf.Fn.textdecodebase64.parameter.encodingName",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/textdecodebase64.html textdecodebase64} function decodes a string that was previously Base64-encoded, and then interprets the result as characters in a specified character encoding."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.textdecodebase64(java.lang.String value, java.lang.String encodingName)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.textencodebase64",
            "displayName": "textencodebase64",
            "id": "cdktf.Fn.textencodebase64",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.textencodebase64.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.textencodebase64.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.textencodebase64.parameter.encodingName",
                "displayName": "encodingName",
                "id": "cdktf.Fn.textencodebase64.parameter.encodingName",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/textencodebase64.html textencodebase64}  encodes the unicode characters in a given string using a specified character encoding, returning the result base64 encoded because Terraform language strings are always sequences of unicode characters."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.textencodebase64(java.lang.String value, java.lang.String encodingName)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.timeadd",
            "displayName": "timeadd",
            "id": "cdktf.Fn.timeadd",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.timeadd.parameter.timestamp",
                "displayName": "timestamp",
                "id": "cdktf.Fn.timeadd.parameter.timestamp",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.timeadd.parameter.duration",
                "displayName": "duration",
                "id": "cdktf.Fn.timeadd.parameter.duration",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/timeadd.html timeadd} adds a duration to a timestamp, returning a new timestamp."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.timeadd(java.lang.String timestamp, java.lang.String duration)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.timestamp",
            "displayName": "timestamp",
            "id": "cdktf.Fn.timestamp",
            "parameters": [],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/timestamp.html timestamp} returns a UTC timestamp string in RFC 3339 format."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.timestamp()"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.title",
            "displayName": "title",
            "id": "cdktf.Fn.title",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.title.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.title.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/title.html title} converts the first letter of each word in the given string to uppercase."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.title(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.tobool",
            "displayName": "tobool",
            "id": "cdktf.Fn.tobool",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.tobool.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tobool.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tobool.html tobool} converts its argument to a boolean value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.tobool(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.tolist",
            "displayName": "tolist",
            "id": "cdktf.Fn.tolist",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.tolist.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tolist.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tolist.html tolist} converts its argument to a list value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.tolist(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.tomap",
            "displayName": "tomap",
            "id": "cdktf.Fn.tomap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.tomap.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tomap.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tomap.html tomap} converts its argument to a map value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.tomap(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.tonumber",
            "displayName": "tonumber",
            "id": "cdktf.Fn.tonumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.tonumber.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tonumber.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tonumber.html tonumber} converts its argument to a number value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.tonumber(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.toset",
            "displayName": "toset",
            "id": "cdktf.Fn.toset",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.toset.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.toset.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/toset.html toset} converts its argument to a set value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.toset(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.tostring",
            "displayName": "tostring",
            "id": "cdktf.Fn.tostring",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.tostring.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.tostring.parameter.expression",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/tostring.html tostring} converts its argument to a string value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.tostring(java.lang.Object expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.transpose",
            "displayName": "transpose",
            "id": "cdktf.Fn.transpose",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.transpose.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.transpose.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/transpose.html transpose} takes a map of lists of strings and swaps the keys and values to produce a new map of lists of strings."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.transpose(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.trim",
            "displayName": "trim",
            "id": "cdktf.Fn.trim",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.trim.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trim.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.trim.parameter.replacement",
                "displayName": "replacement",
                "id": "cdktf.Fn.trim.parameter.replacement",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trim.html trim} removes the specified characters from the start and end of the given string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.trim(java.lang.String value, java.lang.String replacement)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.trimprefix",
            "displayName": "trimprefix",
            "id": "cdktf.Fn.trimprefix",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.trimprefix.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimprefix.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.trimprefix.parameter.prefix",
                "displayName": "prefix",
                "id": "cdktf.Fn.trimprefix.parameter.prefix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimprefix.html trimprefix} removes the specified prefix from the start of the given string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.trimprefix(java.lang.String value, java.lang.String prefix)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.trimspace",
            "displayName": "trimspace",
            "id": "cdktf.Fn.trimspace",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.trimspace.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimspace.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimspace.html trimspace} removes any space characters from the start and end of the given string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.trimspace(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.trimsuffix",
            "displayName": "trimsuffix",
            "id": "cdktf.Fn.trimsuffix",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.trimsuffix.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.trimsuffix.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.trimsuffix.parameter.suffix",
                "displayName": "suffix",
                "id": "cdktf.Fn.trimsuffix.parameter.suffix",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/trimsuffix.html trimsuffix} removes the specified suffix from the end of the given string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.trimsuffix(java.lang.String value, java.lang.String suffix)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.try",
            "displayName": "try",
            "id": "cdktf.Fn.try",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.try.parameter.expression",
                "displayName": "expression",
                "id": "cdktf.Fn.try.parameter.expression",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/try.html try} evaluates all of its argument expressions in turn and returns the result of the first one that does not produce any errors."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.try(java.util.List<java.lang.Object> expression)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.upper",
            "displayName": "upper",
            "id": "cdktf.Fn.upper",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.upper.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.upper.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/upper.html upper} converts all cased letters in the given string to uppercase."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.upper(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.urlencode",
            "displayName": "urlencode",
            "id": "cdktf.Fn.urlencode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.urlencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.urlencode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/urlencode.html urlencode} applies URL encoding to a given string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.urlencode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.uuid",
            "displayName": "uuid",
            "id": "cdktf.Fn.uuid",
            "parameters": [],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/uuid.html uuid} generates a unique identifier string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.uuid()"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.uuidv5",
            "displayName": "uuidv5",
            "id": "cdktf.Fn.uuidv5",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.uuidv5.parameter.namespace",
                "displayName": "namespace",
                "id": "cdktf.Fn.uuidv5.parameter.namespace",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.uuidv5.parameter.name",
                "displayName": "name",
                "id": "cdktf.Fn.uuidv5.parameter.name",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/uuidv5.html uuidv5} generates a unique identifier string."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.uuidv5(java.lang.String namespace, java.lang.String name)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.values",
            "displayName": "values",
            "id": "cdktf.Fn.values",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.values.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.values.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/values.html values} takes a map and returns a list containing the values of the elements in that map."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.values(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.yamldecode",
            "displayName": "yamldecode",
            "id": "cdktf.Fn.yamldecode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.yamldecode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.yamldecode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/yamldecode.html yamldecode} parses a string as a subset of YAML, and produces a representation of its value."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.yamldecode(java.lang.String value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.yamlencode",
            "displayName": "yamlencode",
            "id": "cdktf.Fn.yamlencode",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.yamlencode.parameter.value",
                "displayName": "value",
                "id": "cdktf.Fn.yamlencode.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/yamlencode.html yamlencode} encodes a given value to a string using JSON syntax."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.yamlencode(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Fn.zipmap",
            "displayName": "zipmap",
            "id": "cdktf.Fn.zipmap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Fn.zipmap.parameter.keyslist",
                "displayName": "keyslist",
                "id": "cdktf.Fn.zipmap.parameter.keyslist",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Fn.zipmap.parameter.valueslist",
                "displayName": "valueslist",
                "id": "cdktf.Fn.zipmap.parameter.valueslist",
                "type": {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "{@link https://www.terraform.io/docs/language/functions/zipmap.html zipmap} constructs a map from a list of keys and a corresponding list of values."
            },
            "usage": "import com.hashicorp.cdktf.Fn;\n\nFn.zipmap(java.util.List<java.lang.Object> OR IResolvable keyslist, java.util.List<java.lang.Object> OR IResolvable valueslist)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Fn",
        "displayName": "Fn",
        "id": "cdktf.Fn",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Lazy.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Lazy.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.Lazy;\n\nnew Lazy();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Lazy.anyValue",
            "displayName": "anyValue",
            "id": "cdktf.Lazy.anyValue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Lazy.anyValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.anyValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IAnyProducer",
                      "displayName": "IAnyProducer",
                      "fqn": "com.hashicorp.cdktf.IAnyProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The lazy producer."
                }
              },
              {
                "fqn": "com.hashicorp.cdktf.Lazy.anyValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.anyValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyAnyValueOptions",
                      "displayName": "LazyAnyValueOptions",
                      "fqn": "com.hashicorp.cdktf.LazyAnyValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Produces a lazy token from an untyped value."
            },
            "usage": "import com.hashicorp.cdktf.Lazy;\n\nLazy.anyValue(IAnyProducer producer),Lazy.anyValue(IAnyProducer producer, LazyAnyValueOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Lazy.listValue",
            "displayName": "listValue",
            "id": "cdktf.Lazy.listValue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Lazy.listValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.listValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IListProducer",
                      "displayName": "IListProducer",
                      "fqn": "com.hashicorp.cdktf.IListProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              },
              {
                "fqn": "com.hashicorp.cdktf.Lazy.listValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.listValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyListValueOptions",
                      "displayName": "LazyListValueOptions",
                      "fqn": "com.hashicorp.cdktf.LazyListValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Returns a list-ified token for a lazy value."
            },
            "usage": "import com.hashicorp.cdktf.Lazy;\n\nLazy.listValue(IListProducer producer),Lazy.listValue(IListProducer producer, LazyListValueOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Lazy.numberValue",
            "displayName": "numberValue",
            "id": "cdktf.Lazy.numberValue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Lazy.numberValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.numberValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.INumberProducer",
                      "displayName": "INumberProducer",
                      "fqn": "com.hashicorp.cdktf.INumberProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              }
            ],
            "docs": {
              "summary": "Returns a numberified token for a lazy value."
            },
            "usage": "import com.hashicorp.cdktf.Lazy;\n\nLazy.numberValue(INumberProducer producer)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Lazy.stringValue",
            "displayName": "stringValue",
            "id": "cdktf.Lazy.stringValue",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Lazy.stringValue.parameter.producer",
                "displayName": "producer",
                "id": "cdktf.Lazy.stringValue.parameter.producer",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IStringProducer",
                      "displayName": "IStringProducer",
                      "fqn": "com.hashicorp.cdktf.IStringProducer",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "The producer."
                }
              },
              {
                "fqn": "com.hashicorp.cdktf.Lazy.stringValue.parameter.options",
                "displayName": "options",
                "id": "cdktf.Lazy.stringValue.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.LazyStringValueOptions",
                      "displayName": "LazyStringValueOptions",
                      "fqn": "com.hashicorp.cdktf.LazyStringValueOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Options."
                }
              }
            ],
            "docs": {
              "summary": "Returns a stringified token for a lazy value."
            },
            "usage": "import com.hashicorp.cdktf.Lazy;\n\nLazy.stringValue(IStringProducer producer),Lazy.stringValue(IStringProducer producer, LazyStringValueOptions options)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Lazy",
        "displayName": "Lazy",
        "id": "cdktf.Lazy",
        "docs": {
          "summary": "Lazily produce a value.",
          "remarks": "Can be used to return a string, list or numeric value whose actual value\nwill only be calculated later, during synthesis."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.LazyBase.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.LazyBase.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.LazyBase;\n\nnew LazyBase();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.LazyBase.addPostProcessor",
            "displayName": "addPostProcessor",
            "id": "cdktf.LazyBase.addPostProcessor",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LazyBase.addPostProcessor.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.LazyBase.addPostProcessor.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "com.hashicorp.cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public void addPostProcessor(IPostProcessor postProcessor)"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyBase.resolve",
            "displayName": "resolve",
            "id": "cdktf.LazyBase.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.LazyBase.resolve.parameter.context",
                "displayName": "context",
                "id": "cdktf.LazyBase.resolve.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyBase.toJSON",
            "displayName": "toJSON",
            "id": "cdktf.LazyBase.toJSON",
            "parameters": [],
            "docs": {
              "summary": "Turn this Token into JSON.",
              "remarks": "Called automatically when JSON.stringify() is called on a Token."
            },
            "usage": "public java.lang.Object toJSON()"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyBase.toString",
            "displayName": "toString",
            "id": "cdktf.LazyBase.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LazyBase.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.LazyBase.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.LazyBase",
        "displayName": "LazyBase",
        "id": "cdktf.LazyBase",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.ListTerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.ListTerraformIterator.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.ListTerraformIterator.Initializer.parameter.list",
              "displayName": "list",
              "id": "cdktf.ListTerraformIterator.Initializer.parameter.list",
              "type": {
                "formattingPattern": "% OR % OR % OR % OR % OR % OR % OR % OR %",
                "types": [
                  {
                    "formattingPattern": "java.util.List<%>",
                    "types": [
                      {
                        "formattingPattern": "java.lang.String"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.IResolvable",
                        "displayName": "IResolvable",
                        "fqn": "com.hashicorp.cdktf.IResolvable",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "java.util.List<%>",
                    "types": [
                      {
                        "formattingPattern": "java.lang.Number"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ComplexList",
                        "displayName": "ComplexList",
                        "fqn": "com.hashicorp.cdktf.ComplexList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.StringMapList",
                        "displayName": "StringMapList",
                        "fqn": "com.hashicorp.cdktf.StringMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.NumberMapList",
                        "displayName": "NumberMapList",
                        "fqn": "com.hashicorp.cdktf.NumberMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.BooleanMapList",
                        "displayName": "BooleanMapList",
                        "fqn": "com.hashicorp.cdktf.BooleanMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.AnyMapList",
                        "displayName": "AnyMapList",
                        "fqn": "com.hashicorp.cdktf.AnyMapList",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "java.util.List<%>",
                    "types": [
                      {
                        "formattingPattern": "% OR %",
                        "types": [
                          {
                            "formattingPattern": "java.lang.Boolean"
                          },
                          {
                            "formattingPattern": "%",
                            "types": [
                              {
                                "id": "cdktf.IResolvable",
                                "displayName": "IResolvable",
                                "fqn": "com.hashicorp.cdktf.IResolvable",
                                "packageName": "cdktf",
                                "packageVersion": "0.0.0"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.ListTerraformIterator;\n\nnew ListTerraformIterator(java.util.List<java.lang.String> OR IResolvable OR java.util.List<java.lang.Number> OR ComplexList OR StringMapList OR NumberMapList OR BooleanMapList OR AnyMapList OR java.util.List<java.lang.Boolean OR IResolvable> list);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.dynamic",
            "displayName": "dynamic",
            "id": "cdktf.ListTerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.ListTerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable dynamic(java.util.Map<java.lang.String, java.lang.Object> attributes)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getAny",
            "displayName": "getAny",
            "id": "cdktf.ListTerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getAny(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getAnyMap",
            "displayName": "getAnyMap",
            "id": "cdktf.ListTerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.ListTerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getBooleanMap",
            "displayName": "getBooleanMap",
            "id": "cdktf.ListTerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getList",
            "displayName": "getList",
            "id": "cdktf.ListTerraformIterator.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getMap",
            "displayName": "getMap",
            "id": "cdktf.ListTerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.ListTerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumberList",
            "displayName": "getNumberList",
            "id": "cdktf.ListTerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumberMap",
            "displayName": "getNumberMap",
            "id": "cdktf.ListTerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getString",
            "displayName": "getString",
            "id": "cdktf.ListTerraformIterator.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getStringMap",
            "displayName": "getStringMap",
            "id": "cdktf.ListTerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.getStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.ListTerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMap(java.lang.String attribute)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.fromList",
            "displayName": "fromList",
            "id": "cdktf.ListTerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.fromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.ListTerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR % OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "com.hashicorp.cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "com.hashicorp.cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "com.hashicorp.cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "com.hashicorp.cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "com.hashicorp.cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "% OR %",
                          "types": [
                            {
                              "formattingPattern": "java.lang.Boolean"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "com.hashicorp.cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import com.hashicorp.cdktf.ListTerraformIterator;\n\nListTerraformIterator.fromList(java.util.List<java.lang.String> OR IResolvable OR java.util.List<java.lang.Number> OR ComplexList OR StringMapList OR NumberMapList OR BooleanMapList OR AnyMapList OR java.util.List<java.lang.Boolean OR IResolvable> list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.fromMap",
            "displayName": "fromMap",
            "id": "cdktf.ListTerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ListTerraformIterator.fromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.ListTerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "com.hashicorp.cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Boolean"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import com.hashicorp.cdktf.ListTerraformIterator;\n\nListTerraformIterator.fromMap(ComplexMap OR java.util.Map<java.lang.String, java.lang.Object> OR java.util.Map<java.lang.String, java.lang.String> OR java.util.Map<java.lang.String, java.lang.Number> OR java.util.Map<java.lang.String, java.lang.Boolean> map)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.property.key",
            "displayName": "key",
            "id": "cdktf.ListTerraformIterator.property.key",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {
              "summary": "Returns the currenty entry in the list or set that is being iterated over.",
              "remarks": "For lists this is the same as `iterator.value`. If you need the index,\nuse count using the escape hatch:\nhttps://www.terraform.io/cdktf/concepts/resources#escape-hatch"
            },
            "usage": "public java.lang.Object getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator.property.value",
            "displayName": "value",
            "id": "cdktf.ListTerraformIterator.property.value",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {
              "summary": "Returns the value of the current item iterated over."
            },
            "usage": "public java.lang.Object getValue();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.ListTerraformIterator",
        "displayName": "ListTerraformIterator",
        "id": "cdktf.ListTerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Manifest.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Manifest.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.Manifest.Initializer.parameter.version",
              "displayName": "version",
              "id": "cdktf.Manifest.Initializer.parameter.version",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.Manifest.Initializer.parameter.outdir",
              "displayName": "outdir",
              "id": "cdktf.Manifest.Initializer.parameter.outdir",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.Manifest;\n\nnew Manifest(java.lang.String version, java.lang.String outdir);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IManifest",
            "displayName": "IManifest",
            "id": "cdktf.IManifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Manifest.buildManifest",
            "displayName": "buildManifest",
            "id": "cdktf.Manifest.buildManifest",
            "parameters": [],
            "docs": {},
            "usage": "public IManifest buildManifest()"
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.forStack",
            "displayName": "forStack",
            "id": "cdktf.Manifest.forStack",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Manifest.forStack.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Manifest.forStack.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public StackManifest forStack(TerraformStack stack)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.writeToFile",
            "displayName": "writeToFile",
            "id": "cdktf.Manifest.writeToFile",
            "parameters": [],
            "docs": {},
            "usage": "public void writeToFile()"
          }
        ],
        "staticMethods": [],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.fileName",
            "displayName": "fileName",
            "id": "cdktf.Manifest.property.fileName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFileName();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.stackFileName",
            "displayName": "stackFileName",
            "id": "cdktf.Manifest.property.stackFileName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStackFileName();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.stacksFolder",
            "displayName": "stacksFolder",
            "id": "cdktf.Manifest.property.stacksFolder",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStacksFolder();",
            "const": true
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.outdir",
            "displayName": "outdir",
            "id": "cdktf.Manifest.property.outdir",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getOutdir();"
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.stacks",
            "displayName": "stacks",
            "id": "cdktf.Manifest.property.stacks",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackManifest",
                      "displayName": "StackManifest",
                      "fqn": "com.hashicorp.cdktf.StackManifest",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, StackManifest> getStacks();"
          },
          {
            "fqn": "com.hashicorp.cdktf.Manifest.property.version",
            "displayName": "version",
            "id": "cdktf.Manifest.property.version",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.Manifest",
        "displayName": "Manifest",
        "id": "cdktf.Manifest",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.MapTerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.MapTerraformIterator.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.MapTerraformIterator.Initializer.parameter.map",
              "displayName": "map",
              "id": "cdktf.MapTerraformIterator.Initializer.parameter.map",
              "type": {
                "formattingPattern": "% OR % OR % OR % OR % OR % OR % OR %",
                "types": [
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.StringMap",
                        "displayName": "StringMap",
                        "fqn": "com.hashicorp.cdktf.StringMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.NumberMap",
                        "displayName": "NumberMap",
                        "fqn": "com.hashicorp.cdktf.NumberMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.BooleanMap",
                        "displayName": "BooleanMap",
                        "fqn": "com.hashicorp.cdktf.BooleanMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.AnyMap",
                        "displayName": "AnyMap",
                        "fqn": "com.hashicorp.cdktf.AnyMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "%",
                    "types": [
                      {
                        "id": "cdktf.ComplexMap",
                        "displayName": "ComplexMap",
                        "fqn": "com.hashicorp.cdktf.ComplexMap",
                        "packageName": "cdktf",
                        "packageVersion": "0.0.0"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "java.util.Map<java.lang.String, %>",
                    "types": [
                      {
                        "formattingPattern": "java.lang.Object"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "java.util.Map<java.lang.String, %>",
                    "types": [
                      {
                        "formattingPattern": "java.lang.String"
                      }
                    ]
                  },
                  {
                    "formattingPattern": "java.util.Map<java.lang.String, %>",
                    "types": [
                      {
                        "formattingPattern": "java.lang.Number"
                      }
                    ]
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.MapTerraformIterator;\n\nnew MapTerraformIterator(StringMap OR NumberMap OR BooleanMap OR AnyMap OR ComplexMap OR java.util.Map<java.lang.String, java.lang.Object> OR java.util.Map<java.lang.String, java.lang.String> OR java.util.Map<java.lang.String, java.lang.Number> map);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.dynamic",
            "displayName": "dynamic",
            "id": "cdktf.MapTerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.MapTerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable dynamic(java.util.Map<java.lang.String, java.lang.Object> attributes)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getAny",
            "displayName": "getAny",
            "id": "cdktf.MapTerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getAny(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getAnyMap",
            "displayName": "getAnyMap",
            "id": "cdktf.MapTerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.MapTerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getBooleanMap",
            "displayName": "getBooleanMap",
            "id": "cdktf.MapTerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getList",
            "displayName": "getList",
            "id": "cdktf.MapTerraformIterator.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getMap",
            "displayName": "getMap",
            "id": "cdktf.MapTerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.MapTerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumberList",
            "displayName": "getNumberList",
            "id": "cdktf.MapTerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumberMap",
            "displayName": "getNumberMap",
            "id": "cdktf.MapTerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getString",
            "displayName": "getString",
            "id": "cdktf.MapTerraformIterator.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getStringMap",
            "displayName": "getStringMap",
            "id": "cdktf.MapTerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.getStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.MapTerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMap(java.lang.String attribute)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.fromList",
            "displayName": "fromList",
            "id": "cdktf.MapTerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.fromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.MapTerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR % OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "com.hashicorp.cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "com.hashicorp.cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "com.hashicorp.cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "com.hashicorp.cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "com.hashicorp.cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "% OR %",
                          "types": [
                            {
                              "formattingPattern": "java.lang.Boolean"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "com.hashicorp.cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import com.hashicorp.cdktf.MapTerraformIterator;\n\nMapTerraformIterator.fromList(java.util.List<java.lang.String> OR IResolvable OR java.util.List<java.lang.Number> OR ComplexList OR StringMapList OR NumberMapList OR BooleanMapList OR AnyMapList OR java.util.List<java.lang.Boolean OR IResolvable> list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.fromMap",
            "displayName": "fromMap",
            "id": "cdktf.MapTerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.MapTerraformIterator.fromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.MapTerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "com.hashicorp.cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Boolean"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import com.hashicorp.cdktf.MapTerraformIterator;\n\nMapTerraformIterator.fromMap(ComplexMap OR java.util.Map<java.lang.String, java.lang.Object> OR java.util.Map<java.lang.String, java.lang.String> OR java.util.Map<java.lang.String, java.lang.Number> OR java.util.Map<java.lang.String, java.lang.Boolean> map)"
          }
        ],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.property.key",
            "displayName": "key",
            "id": "cdktf.MapTerraformIterator.property.key",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Returns the key of the current entry in the map that is being iterated over."
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator.property.value",
            "displayName": "value",
            "id": "cdktf.MapTerraformIterator.property.value",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {
              "summary": "Returns the value of the current item iterated over."
            },
            "usage": "public java.lang.Object getValue();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.MapTerraformIterator",
        "displayName": "MapTerraformIterator",
        "id": "cdktf.MapTerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NamedCloudWorkspace.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.NamedCloudWorkspace.Initializer.parameter.name",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.NamedCloudWorkspace;\n\nnew NamedCloudWorkspace(java.lang.String name);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.NamedCloudWorkspace.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace.property.name",
            "displayName": "name",
            "id": "cdktf.NamedCloudWorkspace.property.name",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getName();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace",
        "displayName": "NamedCloudWorkspace",
        "id": "cdktf.NamedCloudWorkspace",
        "docs": {
          "summary": "The name of a single Terraform Cloud workspace.",
          "remarks": "You will only be able to use the workspace specified in the configuration with this working directory, and cannot manage workspaces from the CLI (e.g. terraform workspace select or terraform workspace new)."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.NamedRemoteWorkspace.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NamedRemoteWorkspace.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.NamedRemoteWorkspace.Initializer.parameter.name",
              "displayName": "name",
              "id": "cdktf.NamedRemoteWorkspace.Initializer.parameter.name",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.NamedRemoteWorkspace;\n\nnew NamedRemoteWorkspace(java.lang.String name);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.NamedRemoteWorkspace.property.name",
            "displayName": "name",
            "id": "cdktf.NamedRemoteWorkspace.property.name",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getName();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.NamedRemoteWorkspace",
        "displayName": "NamedRemoteWorkspace",
        "id": "cdktf.NamedRemoteWorkspace",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.NumberMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NumberMap.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.NumberMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.NumberMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.NumberMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.NumberMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.NumberMap;\n\nnew NumberMap(IInterpolatingParent terraformResource, java.lang.String terraformAttribute);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.NumberMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.lookup",
            "displayName": "lookup",
            "id": "cdktf.NumberMap.lookup",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.NumberMap.lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.NumberMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number lookup(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.resolve",
            "displayName": "resolve",
            "id": "cdktf.NumberMap.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.NumberMap.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.NumberMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.toString",
            "displayName": "toString",
            "id": "cdktf.NumberMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.NumberMap.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.NumberMap.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.NumberMap",
        "displayName": "NumberMap",
        "id": "cdktf.NumberMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.NumberMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.NumberMapList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.NumberMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.NumberMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.NumberMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.NumberMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.NumberMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.NumberMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.NumberMapList;\n\nnew NumberMapList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.NumberMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.get",
            "displayName": "get",
            "id": "cdktf.NumberMapList.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.NumberMapList.get.parameter.index",
                "displayName": "index",
                "id": "cdktf.NumberMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public NumberMap get(java.lang.Number index)"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.NumberMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.NumberMapList.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.NumberMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.resolve",
            "displayName": "resolve",
            "id": "cdktf.NumberMapList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.NumberMapList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.NumberMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.toString",
            "displayName": "toString",
            "id": "cdktf.NumberMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.NumberMapList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.NumberMapList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.NumberMapList",
        "displayName": "NumberMapList",
        "id": "cdktf.NumberMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.PrefixedRemoteWorkspaces.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.PrefixedRemoteWorkspaces.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.PrefixedRemoteWorkspaces.Initializer.parameter.prefix",
              "displayName": "prefix",
              "id": "cdktf.PrefixedRemoteWorkspaces.Initializer.parameter.prefix",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.PrefixedRemoteWorkspaces;\n\nnew PrefixedRemoteWorkspaces(java.lang.String prefix);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.PrefixedRemoteWorkspaces.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.PrefixedRemoteWorkspaces.property.prefix",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPrefix();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.PrefixedRemoteWorkspaces",
        "displayName": "PrefixedRemoteWorkspaces",
        "id": "cdktf.PrefixedRemoteWorkspaces",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.StringConcat.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringConcat.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.StringConcat;\n\nnew StringConcat();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.IFragmentConcatenator",
            "displayName": "IFragmentConcatenator",
            "id": "cdktf.IFragmentConcatenator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.StringConcat.join",
            "displayName": "join",
            "id": "cdktf.StringConcat.join",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringConcat.join.parameter.left",
                "displayName": "left",
                "id": "cdktf.StringConcat.join.parameter.left",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.StringConcat.join.parameter.right",
                "displayName": "right",
                "id": "cdktf.StringConcat.join.parameter.right",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Concatenates string fragments."
            },
            "usage": "public java.lang.Object join(java.lang.Object left, java.lang.Object right)"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.StringConcat",
        "displayName": "StringConcat",
        "id": "cdktf.StringConcat",
        "docs": {
          "summary": "Converts all fragments to strings and concats those.",
          "remarks": "Drops 'undefined's."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.StringMap.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringMap.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.StringMap.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.StringMap.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.StringMap.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.StringMap.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.StringMap;\n\nnew StringMap(IInterpolatingParent terraformResource, java.lang.String terraformAttribute);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.StringMap.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.StringMap.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap.lookup",
            "displayName": "lookup",
            "id": "cdktf.StringMap.lookup",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringMap.lookup.parameter.key",
                "displayName": "key",
                "id": "cdktf.StringMap.lookup.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public java.lang.String lookup(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap.resolve",
            "displayName": "resolve",
            "id": "cdktf.StringMap.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringMap.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.StringMap.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap.toString",
            "displayName": "toString",
            "id": "cdktf.StringMap.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.StringMap.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.StringMap.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.StringMap.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.StringMap",
        "displayName": "StringMap",
        "id": "cdktf.StringMap",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.StringMapList.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.StringMapList.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.StringMapList.Initializer.parameter.terraformResource",
              "displayName": "terraformResource",
              "id": "cdktf.StringMapList.Initializer.parameter.terraformResource",
              "type": {
                "formattingPattern": "%",
                "types": [
                  {
                    "id": "cdktf.IInterpolatingParent",
                    "displayName": "IInterpolatingParent",
                    "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
                    "packageName": "cdktf",
                    "packageVersion": "0.0.0"
                  }
                ]
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.StringMapList.Initializer.parameter.terraformAttribute",
              "displayName": "terraformAttribute",
              "id": "cdktf.StringMapList.Initializer.parameter.terraformAttribute",
              "type": {
                "formattingPattern": "java.lang.String"
              },
              "docs": {}
            },
            {
              "fqn": "com.hashicorp.cdktf.StringMapList.Initializer.parameter.wrapsSet",
              "displayName": "wrapsSet",
              "id": "cdktf.StringMapList.Initializer.parameter.wrapsSet",
              "type": {
                "formattingPattern": "java.lang.Boolean"
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.StringMapList;\n\nnew StringMapList(IInterpolatingParent terraformResource, java.lang.String terraformAttribute, java.lang.Boolean wrapsSet);"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.computeFqn",
            "displayName": "computeFqn",
            "id": "cdktf.StringMapList.computeFqn",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.String computeFqn()"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.get",
            "displayName": "get",
            "id": "cdktf.StringMapList.get",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringMapList.get.parameter.index",
                "displayName": "index",
                "id": "cdktf.StringMapList.get.parameter.index",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public StringMap get(java.lang.Number index)"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.StringMapList.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringMapList.interpolationForAttribute.parameter.property",
                "displayName": "property",
                "id": "cdktf.StringMapList.interpolationForAttribute.parameter.property",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String property)"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.resolve",
            "displayName": "resolve",
            "id": "cdktf.StringMapList.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.StringMapList.resolve.parameter._context",
                "displayName": "_context",
                "id": "cdktf.StringMapList.resolve.parameter._context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext _context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.toString",
            "displayName": "toString",
            "id": "cdktf.StringMapList.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.StringMapList.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.StringMapList.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.StringMapList",
        "displayName": "StringMapList",
        "id": "cdktf.StringMapList",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TaggedCloudWorkspaces.Initializer",
          "parameters": [
            {
              "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces.Initializer.parameter.tags",
              "displayName": "tags",
              "id": "cdktf.TaggedCloudWorkspaces.Initializer.parameter.tags",
              "type": {
                "formattingPattern": "java.util.List<%>",
                "types": [
                  {
                    "formattingPattern": "java.lang.String"
                  }
                ]
              },
              "docs": {}
            }
          ],
          "usage": "import com.hashicorp.cdktf.TaggedCloudWorkspaces;\n\nnew TaggedCloudWorkspaces(java.util.List<java.lang.String> tags);"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces.toTerraform",
            "displayName": "toTerraform",
            "id": "cdktf.TaggedCloudWorkspaces.toTerraform",
            "parameters": [],
            "docs": {},
            "usage": "public java.lang.Object toTerraform()"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces.property.tags",
            "displayName": "tags",
            "id": "cdktf.TaggedCloudWorkspaces.property.tags",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getTags();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces",
        "displayName": "TaggedCloudWorkspaces",
        "id": "cdktf.TaggedCloudWorkspaces",
        "docs": {
          "summary": "A set of Terraform Cloud workspace tags.",
          "remarks": "You will be able to use this working directory with any workspaces that have all of the specified tags, and can use the terraform workspace commands to switch between them or create new workspaces. New workspaces will automatically have the specified tags. This option conflicts with name."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformIterator.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformIterator.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.TerraformIterator;\n\nnew TerraformIterator();"
        },
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformIterator",
            "displayName": "ITerraformIterator",
            "id": "cdktf.ITerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.dynamic",
            "displayName": "dynamic",
            "id": "cdktf.TerraformIterator.dynamic",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.dynamic.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.TerraformIterator.dynamic.parameter.attributes",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable dynamic(java.util.Map<java.lang.String, java.lang.Object> attributes)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getAny",
            "displayName": "getAny",
            "id": "cdktf.TerraformIterator.getAny",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getAny.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getAny.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getAny(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getAnyMap",
            "displayName": "getAnyMap",
            "id": "cdktf.TerraformIterator.getAnyMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getAnyMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getAnyMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getAnyMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getBoolean",
            "displayName": "getBoolean",
            "id": "cdktf.TerraformIterator.getBoolean",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getBoolean.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getBoolean.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public IResolvable getBoolean(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getBooleanMap",
            "displayName": "getBooleanMap",
            "id": "cdktf.TerraformIterator.getBooleanMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getBooleanMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getBooleanMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getList",
            "displayName": "getList",
            "id": "cdktf.TerraformIterator.getList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getMap",
            "displayName": "getMap",
            "id": "cdktf.TerraformIterator.getMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.TerraformIterator.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumber.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumber.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.Number getNumber(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumberList",
            "displayName": "getNumberList",
            "id": "cdktf.TerraformIterator.getNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumberList.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumberList.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.List<java.lang.Number> getNumberList(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumberMap",
            "displayName": "getNumberMap",
            "id": "cdktf.TerraformIterator.getNumberMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getNumberMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getNumberMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Number> getNumberMap(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getString",
            "displayName": "getString",
            "id": "cdktf.TerraformIterator.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getString.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getString.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.lang.String getString(java.lang.String attribute)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.getStringMap",
            "displayName": "getStringMap",
            "id": "cdktf.TerraformIterator.getStringMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.getStringMap.parameter.attribute",
                "displayName": "attribute",
                "id": "cdktf.TerraformIterator.getStringMap.parameter.attribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {
                  "summary": "name of the property to retrieve."
                }
              }
            ],
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getStringMap(java.lang.String attribute)"
          }
        ],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.fromList",
            "displayName": "fromList",
            "id": "cdktf.TerraformIterator.fromList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.fromList.parameter.list",
                "displayName": "list",
                "id": "cdktf.TerraformIterator.fromList.parameter.list",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR % OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.IResolvable",
                          "displayName": "IResolvable",
                          "fqn": "com.hashicorp.cdktf.IResolvable",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexList",
                          "displayName": "ComplexList",
                          "fqn": "com.hashicorp.cdktf.ComplexList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.StringMapList",
                          "displayName": "StringMapList",
                          "fqn": "com.hashicorp.cdktf.StringMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.NumberMapList",
                          "displayName": "NumberMapList",
                          "fqn": "com.hashicorp.cdktf.NumberMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.BooleanMapList",
                          "displayName": "BooleanMapList",
                          "fqn": "com.hashicorp.cdktf.BooleanMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.AnyMapList",
                          "displayName": "AnyMapList",
                          "fqn": "com.hashicorp.cdktf.AnyMapList",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.List<%>",
                      "types": [
                        {
                          "formattingPattern": "% OR %",
                          "types": [
                            {
                              "formattingPattern": "java.lang.Boolean"
                            },
                            {
                              "formattingPattern": "%",
                              "types": [
                                {
                                  "id": "cdktf.IResolvable",
                                  "displayName": "IResolvable",
                                  "fqn": "com.hashicorp.cdktf.IResolvable",
                                  "packageName": "cdktf",
                                  "packageVersion": "0.0.0"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a list."
            },
            "usage": "import com.hashicorp.cdktf.TerraformIterator;\n\nTerraformIterator.fromList(java.util.List<java.lang.String> OR IResolvable OR java.util.List<java.lang.Number> OR ComplexList OR StringMapList OR NumberMapList OR BooleanMapList OR AnyMapList OR java.util.List<java.lang.Boolean OR IResolvable> list)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator.fromMap",
            "displayName": "fromMap",
            "id": "cdktf.TerraformIterator.fromMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformIterator.fromMap.parameter.map",
                "displayName": "map",
                "id": "cdktf.TerraformIterator.fromMap.parameter.map",
                "type": {
                  "formattingPattern": "% OR % OR % OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.ComplexMap",
                          "displayName": "ComplexMap",
                          "fqn": "com.hashicorp.cdktf.ComplexMap",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Object"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.String"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Number"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "java.util.Map<java.lang.String, %>",
                      "types": [
                        {
                          "formattingPattern": "java.lang.Boolean"
                        }
                      ]
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Creates a new iterator from a map."
            },
            "usage": "import com.hashicorp.cdktf.TerraformIterator;\n\nTerraformIterator.fromMap(ComplexMap OR java.util.Map<java.lang.String, java.lang.Object> OR java.util.Map<java.lang.String, java.lang.String> OR java.util.Map<java.lang.String, java.lang.Number> OR java.util.Map<java.lang.String, java.lang.Boolean> map)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.TerraformIterator",
        "displayName": "TerraformIterator",
        "id": "cdktf.TerraformIterator",
        "docs": {}
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TerraformSelf.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TerraformSelf.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.TerraformSelf;\n\nnew TerraformSelf();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformSelf.getAny",
            "displayName": "getAny",
            "id": "cdktf.TerraformSelf.getAny",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformSelf.getAny.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getAny.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getAny(\"hostPort\")`"
            },
            "usage": "import com.hashicorp.cdktf.TerraformSelf;\n\nTerraformSelf.getAny(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformSelf.getNumber",
            "displayName": "getNumber",
            "id": "cdktf.TerraformSelf.getNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformSelf.getNumber.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getNumber.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getNumber(\"hostPort\")`"
            },
            "usage": "import com.hashicorp.cdktf.TerraformSelf;\n\nTerraformSelf.getNumber(java.lang.String key)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformSelf.getString",
            "displayName": "getString",
            "id": "cdktf.TerraformSelf.getString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TerraformSelf.getString.parameter.key",
                "displayName": "key",
                "id": "cdktf.TerraformSelf.getString.parameter.key",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Only usable within a connection block to reference the connections parent resource.",
              "remarks": "Access a property on the resource like this: `getString(\"publicIp\")`"
            },
            "usage": "import com.hashicorp.cdktf.TerraformSelf;\n\nTerraformSelf.getString(java.lang.String key)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.TerraformSelf",
        "displayName": "TerraformSelf",
        "id": "cdktf.TerraformSelf",
        "docs": {
          "summary": "Expressions in connection blocks cannot refer to their parent resource by name.",
          "remarks": "References create dependencies, and referring to a resource by name within its own block would create a dependency cycle.\nInstead, expressions can use the self object, which represents the connection's parent resource and has all of that resource's attributes.\nFor example, use self.public_ip to reference an aws_instance's public_ip attribute."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Testing.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Testing.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.Testing;\n\nnew Testing();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Testing.app",
            "displayName": "app",
            "id": "cdktf.Testing.app",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.app.parameter.options",
                "displayName": "options",
                "id": "cdktf.Testing.app.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TestingAppOptions",
                      "displayName": "TestingAppOptions",
                      "fqn": "com.hashicorp.cdktf.TestingAppOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Returns an app for testing with the following properties: - Output directory is a temp dir."
            },
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.app(),Testing.app(TestingAppOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.enableFutureFlags",
            "displayName": "enableFutureFlags",
            "id": "cdktf.Testing.enableFutureFlags",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.enableFutureFlags.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.enableFutureFlags.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "com.hashicorp.cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.enableFutureFlags(App app)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.fakeCdktfJsonPath",
            "displayName": "fakeCdktfJsonPath",
            "id": "cdktf.Testing.fakeCdktfJsonPath",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.fakeCdktfJsonPath.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.fakeCdktfJsonPath.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "com.hashicorp.cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.fakeCdktfJsonPath(App app)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.fullSynth",
            "displayName": "fullSynth",
            "id": "cdktf.Testing.fullSynth",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.fullSynth.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Testing.fullSynth.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.fullSynth(TerraformStack stack)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.renderConstructTree",
            "displayName": "renderConstructTree",
            "id": "cdktf.Testing.renderConstructTree",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.renderConstructTree.parameter.construct",
                "displayName": "construct",
                "id": "cdktf.Testing.renderConstructTree.parameter.construct",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.renderConstructTree(IConstruct construct)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.setupJest",
            "displayName": "setupJest",
            "id": "cdktf.Testing.setupJest",
            "parameters": [],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.setupJest()"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.stubVersion",
            "displayName": "stubVersion",
            "id": "cdktf.Testing.stubVersion",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.stubVersion.parameter.app",
                "displayName": "app",
                "id": "cdktf.Testing.stubVersion.parameter.app",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.App",
                      "displayName": "App",
                      "fqn": "com.hashicorp.cdktf.App",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.stubVersion(App app)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.synth",
            "displayName": "synth",
            "id": "cdktf.Testing.synth",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.synth.parameter.stack",
                "displayName": "stack",
                "id": "cdktf.Testing.synth.parameter.stack",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformStack",
                      "displayName": "TerraformStack",
                      "fqn": "com.hashicorp.cdktf.TerraformStack",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.synth.parameter.runValidations",
                "displayName": "runValidations",
                "id": "cdktf.Testing.synth.parameter.runValidations",
                "optional": true,
                "type": {
                  "formattingPattern": "java.lang.Boolean"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Returns the Terraform synthesized JSON."
            },
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.synth(TerraformStack stack),Testing.synth(TerraformStack stack, java.lang.Boolean runValidations)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.synthScope",
            "displayName": "synthScope",
            "id": "cdktf.Testing.synthScope",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.synthScope.parameter.fn",
                "displayName": "fn",
                "id": "cdktf.Testing.synthScope.parameter.fn",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IScopeCallback",
                      "displayName": "IScopeCallback",
                      "fqn": "com.hashicorp.cdktf.IScopeCallback",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.synthScope(IScopeCallback fn)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.toBeValidTerraform",
            "displayName": "toBeValidTerraform",
            "id": "cdktf.Testing.toBeValidTerraform",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.toBeValidTerraform.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toBeValidTerraform.parameter.received",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.toBeValidTerraform(java.lang.String received)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSource",
            "displayName": "toHaveDataSource",
            "id": "cdktf.Testing.toHaveDataSource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSource.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveDataSource.parameter.received",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSource.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveDataSource.parameter.resourceType",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.toHaveDataSource(java.lang.String received, java.lang.String resourceType)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSourceWithProperties",
            "displayName": "toHaveDataSourceWithProperties",
            "id": "cdktf.Testing.toHaveDataSourceWithProperties",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSourceWithProperties.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.received",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSourceWithProperties.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.resourceType",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveDataSourceWithProperties.parameter.properties",
                "displayName": "properties",
                "id": "cdktf.Testing.toHaveDataSourceWithProperties.parameter.properties",
                "optional": true,
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.toHaveDataSourceWithProperties(java.lang.String received, java.lang.String resourceType),Testing.toHaveDataSourceWithProperties(java.lang.String received, java.lang.String resourceType, java.util.Map<java.lang.String, java.lang.Object> properties)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.toHaveResource",
            "displayName": "toHaveResource",
            "id": "cdktf.Testing.toHaveResource",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveResource.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveResource.parameter.received",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveResource.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveResource.parameter.resourceType",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.toHaveResource(java.lang.String received, java.lang.String resourceType)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Testing.toHaveResourceWithProperties",
            "displayName": "toHaveResourceWithProperties",
            "id": "cdktf.Testing.toHaveResourceWithProperties",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveResourceWithProperties.parameter.received",
                "displayName": "received",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.received",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveResourceWithProperties.parameter.resourceType",
                "displayName": "resourceType",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.resourceType",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Testing.toHaveResourceWithProperties.parameter.properties",
                "displayName": "properties",
                "id": "cdktf.Testing.toHaveResourceWithProperties.parameter.properties",
                "optional": true,
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.Testing;\n\nTesting.toHaveResourceWithProperties(java.lang.String received, java.lang.String resourceType),Testing.toHaveResourceWithProperties(java.lang.String received, java.lang.String resourceType, java.util.Map<java.lang.String, java.lang.Object> properties)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Testing",
        "displayName": "Testing",
        "id": "cdktf.Testing",
        "docs": {
          "summary": "Testing utilities for cdktf applications."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Token.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Token.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.Token;\n\nnew Token();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Token.asAny",
            "displayName": "asAny",
            "id": "cdktf.Token.asAny",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asAny.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asAny.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a resolvable representation of the given value."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asAny(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asAnyMap",
            "displayName": "asAnyMap",
            "id": "cdktf.Token.asAnyMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asAnyMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asAnyMap.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asAnyMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asAnyMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asAnyMap(java.lang.Object value),Token.asAnyMap(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asBooleanMap",
            "displayName": "asBooleanMap",
            "id": "cdktf.Token.asBooleanMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asBooleanMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asBooleanMap.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asBooleanMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asBooleanMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asBooleanMap(java.lang.Object value),Token.asBooleanMap(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asList",
            "displayName": "asList",
            "id": "cdktf.Token.asList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asList.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asList.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asList.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asList.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible list representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asList(java.lang.Object value),Token.asList(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asMap",
            "displayName": "asMap",
            "id": "cdktf.Token.asMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asMap.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asMap.parameter.mapValue",
                "displayName": "mapValue",
                "id": "cdktf.Token.asMap.parameter.mapValue",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asMap(java.lang.Object value, java.lang.Object mapValue),Token.asMap(java.lang.Object value, java.lang.Object mapValue, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asNumber",
            "displayName": "asNumber",
            "id": "cdktf.Token.asNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asNumber.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumber.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible number representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asNumber(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asNumberList",
            "displayName": "asNumberList",
            "id": "cdktf.Token.asNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asNumberList.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumberList.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible list representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asNumberList(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asNumberMap",
            "displayName": "asNumberMap",
            "id": "cdktf.Token.asNumberMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asNumberMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asNumberMap.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asNumberMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asNumberMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asNumberMap(java.lang.Object value),Token.asNumberMap(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asString",
            "displayName": "asString",
            "id": "cdktf.Token.asString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asString.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asString.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asString.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asString.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible string representation of this token.",
              "remarks": "If the Token is initialized with a literal, the stringified value of the\nliteral is returned. Otherwise, a special quoted string representation\nof the Token is returned that can be embedded into other strings.\n\nStrings with quoted Tokens in them can be restored back into\ncomplex values with the Tokens restored by calling `resolve()`\non the string."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asString(java.lang.Object value),Token.asString(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.asStringMap",
            "displayName": "asStringMap",
            "id": "cdktf.Token.asStringMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.asStringMap.parameter.value",
                "displayName": "value",
                "id": "cdktf.Token.asStringMap.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.Token.asStringMap.parameter.options",
                "displayName": "options",
                "id": "cdktf.Token.asStringMap.parameter.options",
                "optional": true,
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.EncodingOptions",
                      "displayName": "EncodingOptions",
                      "fqn": "com.hashicorp.cdktf.EncodingOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return a reversible map representation of this token."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.asStringMap(java.lang.Object value),Token.asStringMap(java.lang.Object value, EncodingOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.isUnresolved",
            "displayName": "isUnresolved",
            "id": "cdktf.Token.isUnresolved",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Token.isUnresolved.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Token.isUnresolved.parameter.obj",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "The object to test."
                }
              }
            ],
            "docs": {
              "summary": "Returns true if obj represents an unresolved value.",
              "remarks": "One of these must be true:\n\n* `obj` is an IResolvable\n* `obj` is a string containing at least one encoded `IResolvable`\n* `obj` is either an encoded number or list\n\nThis does NOT recurse into lists or objects to see if they\ncontaining resolvables."
            },
            "usage": "import com.hashicorp.cdktf.Token;\n\nToken.isUnresolved(java.lang.Object obj)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.Token.property.ANY_MAP_TOKEN_VALUE",
            "displayName": "ANY_MAP_TOKEN_VALUE",
            "id": "cdktf.Token.property.ANY_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Any map token representation."
            },
            "usage": "public java.lang.String getAnyMapTokenValue();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.property.NUMBER_MAP_TOKEN_VALUE",
            "displayName": "NUMBER_MAP_TOKEN_VALUE",
            "id": "cdktf.Token.property.NUMBER_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "Number Map token value representation."
            },
            "usage": "public java.lang.Number getNumberMapTokenValue();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.Token.property.STRING_MAP_TOKEN_VALUE",
            "displayName": "STRING_MAP_TOKEN_VALUE",
            "id": "cdktf.Token.property.STRING_MAP_TOKEN_VALUE",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "String Map token value representation."
            },
            "usage": "public java.lang.String getStringMapTokenValue();",
            "const": true
          }
        ],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Token",
        "displayName": "Token",
        "id": "cdktf.Token",
        "docs": {
          "summary": "Represents a special or lazily-evaluated value.",
          "remarks": "Can be used to delay evaluation of a certain value in case, for example,\nthat it requires some context or late-bound data. Can also be used to\nmark values that need special processing at document rendering time.\n\nTokens can be embedded into strings while retaining their original\nsemantics."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.Tokenization.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.Tokenization.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.Tokenization;\n\nnew Tokenization();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.isResolvable",
            "displayName": "isResolvable",
            "id": "cdktf.Tokenization.isResolvable",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.isResolvable.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Tokenization.isResolvable.parameter.obj",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Return whether the given object is an IResolvable object.",
              "remarks": "This is different from Token.isUnresolved() which will also check for\nencoded Tokens, whereas this method will only do a type check on the given\nobject."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.isResolvable(java.lang.Object obj)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.resolve",
            "displayName": "resolve",
            "id": "cdktf.Tokenization.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.resolve.parameter.obj",
                "displayName": "obj",
                "id": "cdktf.Tokenization.resolve.parameter.obj",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "The object to resolve."
                }
              },
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.resolve.parameter.options",
                "displayName": "options",
                "id": "cdktf.Tokenization.resolve.parameter.options",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ResolveOptions",
                      "displayName": "ResolveOptions",
                      "fqn": "com.hashicorp.cdktf.ResolveOptions",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "Prefix key path components for diagnostics."
                }
              }
            ],
            "docs": {
              "summary": "Resolves an object by evaluating all tokens and removing any undefined or empty objects or arrays.",
              "remarks": "Values can only be primitives, arrays or tokens. Other objects (i.e. with methods) will be rejected."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.resolve(java.lang.Object obj, ResolveOptions options)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverse",
            "displayName": "reverse",
            "id": "cdktf.Tokenization.reverse",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverse.parameter.x",
                "displayName": "x",
                "id": "cdktf.Tokenization.reverse.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Reverse any value into Resolvables, if possible."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverse(java.lang.Object x)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverseList",
            "displayName": "reverseList",
            "id": "cdktf.Tokenization.reverseList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverseList.parameter.l",
                "displayName": "l",
                "id": "cdktf.Tokenization.reverseList.parameter.l",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a list."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverseList(java.util.List<java.lang.String> l)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverseMap",
            "displayName": "reverseMap",
            "id": "cdktf.Tokenization.reverseMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverseMap.parameter.m",
                "displayName": "m",
                "id": "cdktf.Tokenization.reverseMap.parameter.m",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a map."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverseMap(java.util.Map<java.lang.String, java.lang.Object> m)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverseNumber",
            "displayName": "reverseNumber",
            "id": "cdktf.Tokenization.reverseNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverseNumber.parameter.n",
                "displayName": "n",
                "id": "cdktf.Tokenization.reverseNumber.parameter.n",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a number."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverseNumber(java.lang.Number n)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverseNumberList",
            "displayName": "reverseNumberList",
            "id": "cdktf.Tokenization.reverseNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverseNumberList.parameter.l",
                "displayName": "l",
                "id": "cdktf.Tokenization.reverseNumberList.parameter.l",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a Tokenized value from a list."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverseNumberList(java.util.List<java.lang.Number> l)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.reverseString",
            "displayName": "reverseString",
            "id": "cdktf.Tokenization.reverseString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.reverseString.parameter.s",
                "displayName": "s",
                "id": "cdktf.Tokenization.reverseString.parameter.s",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Un-encode a string potentially containing encoded tokens."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.reverseString(java.lang.String s)"
          },
          {
            "fqn": "com.hashicorp.cdktf.Tokenization.stringifyNumber",
            "displayName": "stringifyNumber",
            "id": "cdktf.Tokenization.stringifyNumber",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.Tokenization.stringifyNumber.parameter.x",
                "displayName": "x",
                "id": "cdktf.Tokenization.stringifyNumber.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Number"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Stringify a number directly or lazily if it's a Token.",
              "remarks": "If it is an object (i.e., { Ref: 'SomeLogicalId' }), return it as-is."
            },
            "usage": "import com.hashicorp.cdktf.Tokenization;\n\nTokenization.stringifyNumber(java.lang.Number x)"
          }
        ],
        "constants": [],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.Tokenization",
        "displayName": "Tokenization",
        "id": "cdktf.Tokenization",
        "docs": {
          "summary": "Less oft-needed functions to manipulate Tokens."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.TokenizedStringFragments.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.TokenizedStringFragments;\n\nnew TokenizedStringFragments();"
        },
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addIntrinsic",
            "displayName": "addIntrinsic",
            "id": "cdktf.TokenizedStringFragments.addIntrinsic",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addIntrinsic.parameter.value",
                "displayName": "value",
                "id": "cdktf.TokenizedStringFragments.addIntrinsic.parameter.value",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "the intrinsic value to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds an intrinsic fragment."
            },
            "usage": "public void addIntrinsic(java.lang.Object value)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addLiteral",
            "displayName": "addLiteral",
            "id": "cdktf.TokenizedStringFragments.addLiteral",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addLiteral.parameter.lit",
                "displayName": "lit",
                "id": "cdktf.TokenizedStringFragments.addLiteral.parameter.lit",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {
                  "summary": "the literal to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds a literal fragment."
            },
            "usage": "public void addLiteral(java.lang.Object lit)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addToken",
            "displayName": "addToken",
            "id": "cdktf.TokenizedStringFragments.addToken",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.addToken.parameter.token",
                "displayName": "token",
                "id": "cdktf.TokenizedStringFragments.addToken.parameter.token",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {
                  "summary": "the token to add."
                }
              }
            ],
            "docs": {
              "summary": "Adds a token fragment."
            },
            "usage": "public void addToken(IResolvable token)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.join",
            "displayName": "join",
            "id": "cdktf.TokenizedStringFragments.join",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.join.parameter.concat",
                "displayName": "concat",
                "id": "cdktf.TokenizedStringFragments.join.parameter.concat",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IFragmentConcatenator",
                      "displayName": "IFragmentConcatenator",
                      "fqn": "com.hashicorp.cdktf.IFragmentConcatenator",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Combine the string fragments using the given joiner.",
              "remarks": "If there are any"
            },
            "usage": "public java.lang.Object join(IFragmentConcatenator concat)"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.mapTokens",
            "displayName": "mapTokens",
            "id": "cdktf.TokenizedStringFragments.mapTokens",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.mapTokens.parameter.mapper",
                "displayName": "mapper",
                "id": "cdktf.TokenizedStringFragments.mapTokens.parameter.mapper",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITokenMapper",
                      "displayName": "ITokenMapper",
                      "fqn": "com.hashicorp.cdktf.ITokenMapper",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Apply a transformation function to all tokens in the string."
            },
            "usage": "public TokenizedStringFragments mapTokens(ITokenMapper mapper)"
          }
        ],
        "staticMethods": [],
        "constants": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.firstValue",
            "displayName": "firstValue",
            "id": "cdktf.TokenizedStringFragments.property.firstValue",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {
              "summary": "Returns the first value."
            },
            "usage": "public java.lang.Object getFirstValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.intrinsic",
            "displayName": "intrinsic",
            "id": "cdktf.TokenizedStringFragments.property.intrinsic",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all intrinsic fragments from this string."
            },
            "usage": "public java.util.List<IResolvable> getIntrinsic();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.length",
            "displayName": "length",
            "id": "cdktf.TokenizedStringFragments.property.length",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "Returns the number of fragments."
            },
            "usage": "public java.lang.Number getLength();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.literals",
            "displayName": "literals",
            "id": "cdktf.TokenizedStringFragments.property.literals",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all literals from this string."
            },
            "usage": "public java.util.List<IResolvable> getLiterals();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.tokens",
            "displayName": "tokens",
            "id": "cdktf.TokenizedStringFragments.property.tokens",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Return all Tokens from this string."
            },
            "usage": "public java.util.List<IResolvable> getTokens();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TokenizedStringFragments.property.firstToken",
            "displayName": "firstToken",
            "id": "cdktf.TokenizedStringFragments.property.firstToken",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IResolvable",
                  "displayName": "IResolvable",
                  "fqn": "com.hashicorp.cdktf.IResolvable",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "Returns the first token."
            },
            "usage": "public IResolvable getFirstToken();"
          }
        ],
        "fqn": "com.hashicorp.cdktf.TokenizedStringFragments",
        "displayName": "TokenizedStringFragments",
        "id": "cdktf.TokenizedStringFragments",
        "docs": {
          "summary": "Fragments of a concatenated string containing stringified Tokens."
        }
      },
      {
        "initializer": {
          "fqn": "com.hashicorp.cdktf.VariableType.Initializer",
          "displayName": "Initializer",
          "id": "cdktf.VariableType.Initializer",
          "parameters": [],
          "usage": "import com.hashicorp.cdktf.VariableType;\n\nnew VariableType();"
        },
        "interfaces": [],
        "instanceMethods": [],
        "staticMethods": [
          {
            "fqn": "com.hashicorp.cdktf.VariableType.list",
            "displayName": "list",
            "id": "cdktf.VariableType.list",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.VariableType.list.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.list.parameter.type",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.VariableType;\n\nVariableType.list(java.lang.String type)"
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.map",
            "displayName": "map",
            "id": "cdktf.VariableType.map",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.VariableType.map.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.map.parameter.type",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.VariableType;\n\nVariableType.map(java.lang.String type)"
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.object",
            "displayName": "object",
            "id": "cdktf.VariableType.object",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.VariableType.object.parameter.attributes",
                "displayName": "attributes",
                "id": "cdktf.VariableType.object.parameter.attributes",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.VariableType;\n\nVariableType.object(java.util.Map<java.lang.String, java.lang.String> attributes)"
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.set",
            "displayName": "set",
            "id": "cdktf.VariableType.set",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.VariableType.set.parameter.type",
                "displayName": "type",
                "id": "cdktf.VariableType.set.parameter.type",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.VariableType;\n\nVariableType.set(java.lang.String type)"
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.tuple",
            "displayName": "tuple",
            "id": "cdktf.VariableType.tuple",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.VariableType.tuple.parameter.elements",
                "displayName": "elements",
                "id": "cdktf.VariableType.tuple.parameter.elements",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "import com.hashicorp.cdktf.VariableType;\n\nVariableType.tuple(java.lang.String elements)"
          }
        ],
        "constants": [
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.ANY",
            "displayName": "ANY",
            "id": "cdktf.VariableType.property.ANY",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAny();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.BOOL",
            "displayName": "BOOL",
            "id": "cdktf.VariableType.property.BOOL",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getBool();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.LIST",
            "displayName": "LIST",
            "id": "cdktf.VariableType.property.LIST",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getList();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.LIST_BOOL",
            "displayName": "LIST_BOOL",
            "id": "cdktf.VariableType.property.LIST_BOOL",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getListBool();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.LIST_NUMBER",
            "displayName": "LIST_NUMBER",
            "id": "cdktf.VariableType.property.LIST_NUMBER",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getListNumber();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.LIST_STRING",
            "displayName": "LIST_STRING",
            "id": "cdktf.VariableType.property.LIST_STRING",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getListString();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.MAP",
            "displayName": "MAP",
            "id": "cdktf.VariableType.property.MAP",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMap();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.MAP_BOOL",
            "displayName": "MAP_BOOL",
            "id": "cdktf.VariableType.property.MAP_BOOL",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMapBool();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.MAP_NUMBER",
            "displayName": "MAP_NUMBER",
            "id": "cdktf.VariableType.property.MAP_NUMBER",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMapNumber();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.MAP_STRING",
            "displayName": "MAP_STRING",
            "id": "cdktf.VariableType.property.MAP_STRING",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMapString();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.NUMBER",
            "displayName": "NUMBER",
            "id": "cdktf.VariableType.property.NUMBER",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getNumber();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.SET",
            "displayName": "SET",
            "id": "cdktf.VariableType.property.SET",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSet();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.SET_BOOL",
            "displayName": "SET_BOOL",
            "id": "cdktf.VariableType.property.SET_BOOL",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSetBool();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.SET_NUMBER",
            "displayName": "SET_NUMBER",
            "id": "cdktf.VariableType.property.SET_NUMBER",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSetNumber();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.SET_STRING",
            "displayName": "SET_STRING",
            "id": "cdktf.VariableType.property.SET_STRING",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSetString();",
            "const": true
          },
          {
            "fqn": "com.hashicorp.cdktf.VariableType.property.STRING",
            "displayName": "STRING",
            "id": "cdktf.VariableType.property.STRING",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getString();",
            "const": true
          }
        ],
        "properties": [],
        "fqn": "com.hashicorp.cdktf.VariableType",
        "displayName": "VariableType",
        "id": "cdktf.VariableType",
        "docs": {}
      }
    ],
    "structs": [
      {
        "fqn": "com.hashicorp.cdktf.AppOptions",
        "displayName": "AppOptions",
        "id": "cdktf.AppOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.AppOptions.property.context",
            "displayName": "context",
            "id": "cdktf.AppOptions.property.context",
            "optional": true,
            "default": "- no additional context",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {
              "summary": "Additional context values for the application.",
              "remarks": "Context set by the CLI or the `context` key in `cdktf.json` has precedence.\n\nContext can be read from any construct using `node.getContext(key)`."
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getContext();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AppOptions.property.outdir",
            "displayName": "outdir",
            "id": "cdktf.AppOptions.property.outdir",
            "optional": true,
            "default": "- CDKTF_OUTDIR if defined, otherwise \"cdktf.out\"",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The directory to output Terraform resources."
            },
            "usage": "public java.lang.String getOutdir();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AppOptions.property.skipValidation",
            "displayName": "skipValidation",
            "id": "cdktf.AppOptions.property.skipValidation",
            "optional": true,
            "default": "- false",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Whether to skip the validation during synthesis of the app."
            },
            "usage": "public java.lang.Boolean getSkipValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AppOptions.property.stackTraces",
            "displayName": "stackTraces",
            "id": "cdktf.AppOptions.property.stackTraces",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getStackTraces();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.AppOptions;\n\nAppOptions.builder()\n//  .context(java.util.Map<java.lang.String, java.lang.Object>)\n//  .outdir(java.lang.String)\n//  .skipValidation(java.lang.Boolean)\n//  .stackTraces(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps",
        "displayName": "ArtifactoryBackendProps",
        "id": "cdktf.ArtifactoryBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps.property.password",
            "displayName": "password",
            "id": "cdktf.ArtifactoryBackendProps.property.password",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The password."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps.property.repo",
            "displayName": "repo",
            "id": "cdktf.ArtifactoryBackendProps.property.repo",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The repository name."
            },
            "usage": "public java.lang.String getRepo();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps.property.subpath",
            "displayName": "subpath",
            "id": "cdktf.ArtifactoryBackendProps.property.subpath",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - Path within the repository."
            },
            "usage": "public java.lang.String getSubpath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps.property.url",
            "displayName": "url",
            "id": "cdktf.ArtifactoryBackendProps.property.url",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The URL.",
              "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
            },
            "usage": "public java.lang.String getUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ArtifactoryBackendProps.property.username",
            "displayName": "username",
            "id": "cdktf.ArtifactoryBackendProps.property.username",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The username."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {
          "summary": "Stores the state as an artifact in a given repository in Artifactory.",
          "remarks": "Generic HTTP repositories are supported, and state from different configurations\nmay be kept at different subpaths within the repository.\n\nNote: The URL must include the path to the Artifactory installation.\nIt will likely end in /artifactory.\n\nThis backend does not support state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/artifactory"
        },
        "usage": "import com.hashicorp.cdktf.ArtifactoryBackendProps;\n\nArtifactoryBackendProps.builder()\n    .password(java.lang.String)\n    .repo(java.lang.String)\n    .subpath(java.lang.String)\n    .url(java.lang.String)\n    .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.AzurermBackendProps",
        "displayName": "AzurermBackendProps",
        "id": "cdktf.AzurermBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.containerName",
            "displayName": "containerName",
            "id": "cdktf.AzurermBackendProps.property.containerName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Container within the Storage Account."
            },
            "usage": "public java.lang.String getContainerName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.key",
            "displayName": "key",
            "id": "cdktf.AzurermBackendProps.property.key",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.storageAccountName",
            "displayName": "storageAccountName",
            "id": "cdktf.AzurermBackendProps.property.storageAccountName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Account."
            },
            "usage": "public java.lang.String getStorageAccountName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.AzurermBackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
            },
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.clientCertificatePassword",
            "displayName": "clientCertificatePassword",
            "id": "cdktf.AzurermBackendProps.property.clientCertificatePassword",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
            },
            "usage": "public java.lang.String getClientCertificatePassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.clientCertificatePath",
            "displayName": "clientCertificatePath",
            "id": "cdktf.AzurermBackendProps.property.clientCertificatePath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
            },
            "usage": "public java.lang.String getClientCertificatePath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.clientId",
            "displayName": "clientId",
            "id": "cdktf.AzurermBackendProps.property.clientId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Client ID of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
            },
            "usage": "public java.lang.String getClientId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.clientSecret",
            "displayName": "clientSecret",
            "id": "cdktf.AzurermBackendProps.property.clientSecret",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Client Secret of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
            },
            "usage": "public java.lang.String getClientSecret();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.AzurermBackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
              "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
            },
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.environment",
            "displayName": "environment",
            "id": "cdktf.AzurermBackendProps.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Azure Environment which should be used.",
              "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
            },
            "usage": "public java.lang.String getEnvironment();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.msiEndpoint",
            "displayName": "msiEndpoint",
            "id": "cdktf.AzurermBackendProps.property.msiEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
              "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getMsiEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.oidcRequestToken",
            "displayName": "oidcRequestToken",
            "id": "cdktf.AzurermBackendProps.property.oidcRequestToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The bearer token for the request to the OIDC provider.",
              "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
            },
            "usage": "public java.lang.String getOidcRequestToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.oidcRequestUrl",
            "displayName": "oidcRequestUrl",
            "id": "cdktf.AzurermBackendProps.property.oidcRequestUrl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
              "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
            },
            "usage": "public java.lang.String getOidcRequestUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.resourceGroupName",
            "displayName": "resourceGroupName",
            "id": "cdktf.AzurermBackendProps.property.resourceGroupName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
            },
            "usage": "public java.lang.String getResourceGroupName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.sasToken",
            "displayName": "sasToken",
            "id": "cdktf.AzurermBackendProps.property.sasToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
            },
            "usage": "public java.lang.String getSasToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.snapshot",
            "displayName": "snapshot",
            "id": "cdktf.AzurermBackendProps.property.snapshot",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
              "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
            },
            "usage": "public java.lang.Boolean getSnapshot();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.subscriptionId",
            "displayName": "subscriptionId",
            "id": "cdktf.AzurermBackendProps.property.subscriptionId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
              "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
            },
            "usage": "public java.lang.String getSubscriptionId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.tenantId",
            "displayName": "tenantId",
            "id": "cdktf.AzurermBackendProps.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Tenant ID in which the Subscription exists.",
              "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
            },
            "usage": "public java.lang.String getTenantId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.useAzureadAuth",
            "displayName": "useAzureadAuth",
            "id": "cdktf.AzurermBackendProps.property.useAzureadAuth",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
            },
            "usage": "public java.lang.Boolean getUseAzureadAuth();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.useMicrosoftGraph",
            "displayName": "useMicrosoftGraph",
            "id": "cdktf.AzurermBackendProps.property.useMicrosoftGraph",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
              "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
            },
            "usage": "public java.lang.Boolean getUseMicrosoftGraph();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.useMsi",
            "displayName": "useMsi",
            "id": "cdktf.AzurermBackendProps.property.useMsi",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should Managed Service Identity authentication be used?",
              "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
            },
            "usage": "public java.lang.Boolean getUseMsi();"
          },
          {
            "fqn": "com.hashicorp.cdktf.AzurermBackendProps.property.useOidc",
            "displayName": "useOidc",
            "id": "cdktf.AzurermBackendProps.property.useOidc",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
              "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
            },
            "usage": "public java.lang.Boolean getUseOidc();"
          }
        ],
        "docs": {
          "summary": "Stores the state as a Blob with the given Key within the Blob Container within the Blob Storage Account.",
          "remarks": "This backend supports state locking and consistency checking\nwith Azure Blob Storage native capabilities.\n\nNote: By default the Azure Backend uses ADAL for authentication which is deprecated\nin favour of MSAL - MSAL can be used by setting use_microsoft_graph to true.\nThe default for this will change in Terraform 1.2,\nso that MSAL authentication is used by default.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/azurerm"
        },
        "usage": "import com.hashicorp.cdktf.AzurermBackendProps;\n\nAzurermBackendProps.builder()\n    .containerName(java.lang.String)\n    .key(java.lang.String)\n    .storageAccountName(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .clientCertificatePassword(java.lang.String)\n//  .clientCertificatePath(java.lang.String)\n//  .clientId(java.lang.String)\n//  .clientSecret(java.lang.String)\n//  .endpoint(java.lang.String)\n//  .environment(java.lang.String)\n//  .msiEndpoint(java.lang.String)\n//  .oidcRequestToken(java.lang.String)\n//  .oidcRequestUrl(java.lang.String)\n//  .resourceGroupName(java.lang.String)\n//  .sasToken(java.lang.String)\n//  .snapshot(java.lang.Boolean)\n//  .subscriptionId(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .useAzureadAuth(java.lang.Boolean)\n//  .useMicrosoftGraph(java.lang.Boolean)\n//  .useMsi(java.lang.Boolean)\n//  .useOidc(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.CloudBackendProps",
        "displayName": "CloudBackendProps",
        "id": "cdktf.CloudBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.CloudBackendProps.property.organization",
            "displayName": "organization",
            "id": "cdktf.CloudBackendProps.property.organization",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The name of the organization containing the workspace(s) the current configuration should use."
            },
            "usage": "public java.lang.String getOrganization();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackendProps.property.workspaces",
            "displayName": "workspaces",
            "id": "cdktf.CloudBackendProps.property.workspaces",
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.NamedCloudWorkspace",
                      "displayName": "NamedCloudWorkspace",
                      "fqn": "com.hashicorp.cdktf.NamedCloudWorkspace",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TaggedCloudWorkspaces",
                      "displayName": "TaggedCloudWorkspaces",
                      "fqn": "com.hashicorp.cdktf.TaggedCloudWorkspaces",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "A nested block that specifies which remote Terraform Cloud workspaces to use for the current configuration.",
              "remarks": "The workspaces block must contain exactly one of the following arguments, each denoting a strategy for how workspaces should be mapped:"
            },
            "usage": "public java.lang.Object getWorkspaces();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackendProps.property.hostname",
            "displayName": "hostname",
            "id": "cdktf.CloudBackendProps.property.hostname",
            "optional": true,
            "default": "app.terraform.io",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The hostname of a Terraform Enterprise installation, if using Terraform Enterprise."
            },
            "usage": "public java.lang.String getHostname();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CloudBackendProps.property.token",
            "displayName": "token",
            "id": "cdktf.CloudBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The token used to authenticate with Terraform Cloud.",
              "remarks": "We recommend omitting the token from the configuration, and instead using terraform login or manually configuring credentials in the CLI config file."
            },
            "usage": "public java.lang.String getToken();"
          }
        ],
        "docs": {
          "summary": "The Cloud Backend synthesizes a {@link https://www.terraform.io/cli/cloud/settings#the-cloud-block cloud block}. The cloud block is a nested block within the top-level terraform settings block. It specifies which Terraform Cloud workspaces to use for the current working directory. The cloud block only affects Terraform CLI's behavior. When Terraform Cloud uses a configuration that contains a cloud block - for example, when a workspace is configured to use a VCS provider directly - it ignores the block and behaves according to its own workspace settings.",
          "remarks": "https://www.terraform.io/cli/cloud/settings#arguments"
        },
        "usage": "import com.hashicorp.cdktf.CloudBackendProps;\n\nCloudBackendProps.builder()\n    .organization(java.lang.String)\n    .workspaces(NamedCloudWorkspace)\n    .workspaces(TaggedCloudWorkspaces)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.ConsulBackendProps",
        "displayName": "ConsulBackendProps",
        "id": "cdktf.ConsulBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.accessToken",
            "displayName": "accessToken",
            "id": "cdktf.ConsulBackendProps.property.accessToken",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) Access token."
            },
            "usage": "public java.lang.String getAccessToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.path",
            "displayName": "path",
            "id": "cdktf.ConsulBackendProps.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) Path in the Consul KV store."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.address",
            "displayName": "address",
            "id": "cdktf.ConsulBackendProps.property.address",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
              "remarks": "Defaults to the local agent HTTP listener."
            },
            "usage": "public java.lang.String getAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.caFile",
            "displayName": "caFile",
            "id": "cdktf.ConsulBackendProps.property.caFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
            },
            "usage": "public java.lang.String getCaFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.certFile",
            "displayName": "certFile",
            "id": "cdktf.ConsulBackendProps.property.certFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
              "remarks": "requires use of key_file."
            },
            "usage": "public java.lang.String getCertFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.datacenter",
            "displayName": "datacenter",
            "id": "cdktf.ConsulBackendProps.property.datacenter",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The datacenter to use.",
              "remarks": "Defaults to that of the agent."
            },
            "usage": "public java.lang.String getDatacenter();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.gzip",
            "displayName": "gzip",
            "id": "cdktf.ConsulBackendProps.property.gzip",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
            },
            "usage": "public java.lang.Boolean getGzip();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.httpAuth",
            "displayName": "httpAuth",
            "id": "cdktf.ConsulBackendProps.property.httpAuth",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
            },
            "usage": "public java.lang.String getHttpAuth();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.keyFile",
            "displayName": "keyFile",
            "id": "cdktf.ConsulBackendProps.property.keyFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
            },
            "usage": "public java.lang.String getKeyFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.lock",
            "displayName": "lock",
            "id": "cdktf.ConsulBackendProps.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) false to disable locking.",
              "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
            },
            "usage": "public java.lang.Boolean getLock();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ConsulBackendProps.property.scheme",
            "displayName": "scheme",
            "id": "cdktf.ConsulBackendProps.property.scheme",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
              "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
            },
            "usage": "public java.lang.String getScheme();"
          }
        ],
        "docs": {
          "summary": "Stores the state in the Consul KV store at a given path. This backend supports state locking.",
          "remarks": "Read more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/consul"
        },
        "usage": "import com.hashicorp.cdktf.ConsulBackendProps;\n\nConsulBackendProps.builder()\n    .accessToken(java.lang.String)\n    .path(java.lang.String)\n//  .address(java.lang.String)\n//  .caFile(java.lang.String)\n//  .certFile(java.lang.String)\n//  .datacenter(java.lang.String)\n//  .gzip(java.lang.Boolean)\n//  .httpAuth(java.lang.String)\n//  .keyFile(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .scheme(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.CosBackendProps",
        "displayName": "CosBackendProps",
        "id": "cdktf.CosBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.CosBackendProps.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the COS bucket.",
              "remarks": "You shall manually create it first."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.acl",
            "displayName": "acl",
            "id": "cdktf.CosBackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
              "remarks": "Defaults to private."
            },
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.CosBackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to enable server side encryption of the state file.",
              "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
            },
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.key",
            "displayName": "key",
            "id": "cdktf.CosBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path for saving the state file in bucket.",
              "remarks": "Defaults to terraform.tfstate."
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.CosBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The directory for saving the state file in bucket.",
              "remarks": "Default to \"env:\"."
            },
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.region",
            "displayName": "region",
            "id": "cdktf.CosBackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The region of the COS bucket.",
              "remarks": "It supports environment variables TENCENTCLOUD_REGION."
            },
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.secretId",
            "displayName": "secretId",
            "id": "cdktf.CosBackendProps.property.secretId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Secret id of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
            },
            "usage": "public java.lang.String getSecretId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.CosBackendProps.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.CosBackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Secret key of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
            },
            "usage": "public java.lang.String getSecretKey();"
          }
        ],
        "docs": {
          "summary": "Stores the state as an object in a configurable prefix in a given bucket on Tencent Cloud Object Storage (COS).",
          "remarks": "This backend supports state locking.\n\nWarning! It is highly recommended that you enable Object Versioning on the COS bucket to allow for state recovery in the case of accidental deletions and human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/cos"
        },
        "usage": "import com.hashicorp.cdktf.CosBackendProps;\n\nCosBackendProps.builder()\n    .bucket(java.lang.String)\n//  .acl(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .region(java.lang.String)\n//  .secretId(java.lang.String)\n//  .secretKey(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig",
        "displayName": "DataTerraformRemoteStateArtifactoryConfig",
        "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.password",
            "displayName": "password",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.password",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The password."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.repo",
            "displayName": "repo",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.repo",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The repository name."
            },
            "usage": "public java.lang.String getRepo();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.subpath",
            "displayName": "subpath",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.subpath",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - Path within the repository."
            },
            "usage": "public java.lang.String getSubpath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.url",
            "displayName": "url",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.url",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The URL.",
              "remarks": "Note that this is the base url to artifactory not the full repo and subpath."
            },
            "usage": "public java.lang.String getUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig.property.username",
            "displayName": "username",
            "id": "cdktf.DataTerraformRemoteStateArtifactoryConfig.property.username",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) - The username."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateArtifactoryConfig;\n\nDataTerraformRemoteStateArtifactoryConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .password(java.lang.String)\n    .repo(java.lang.String)\n    .subpath(java.lang.String)\n    .url(java.lang.String)\n    .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig",
        "displayName": "DataTerraformRemoteStateAzurermConfig",
        "id": "cdktf.DataTerraformRemoteStateAzurermConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.containerName",
            "displayName": "containerName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.containerName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Container within the Storage Account."
            },
            "usage": "public java.lang.String getContainerName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.key",
            "displayName": "key",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.key",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the Blob used to retrieve/store Terraform's State file inside the Storage Container."
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.storageAccountName",
            "displayName": "storageAccountName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.storageAccountName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Storage Account."
            },
            "usage": "public java.lang.String getStorageAccountName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "access_key - (Optional) The Access Key used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_ACCESS_KEY environment variable."
            },
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePassword",
            "displayName": "clientCertificatePassword",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePassword",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password associated with the Client Certificate specified in client_certificate_path.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PASSWORD environment variable."
            },
            "usage": "public java.lang.String getClientCertificatePassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePath",
            "displayName": "clientCertificatePath",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientCertificatePath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to the PFX file used as the Client Certificate when authenticating as a Service Principal.",
              "remarks": "This can also be sourced from the\nARM_CLIENT_CERTIFICATE_PATH environment variable."
            },
            "usage": "public java.lang.String getClientCertificatePath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.clientId",
            "displayName": "clientId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Client ID of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_ID environment variable."
            },
            "usage": "public java.lang.String getClientId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.clientSecret",
            "displayName": "clientSecret",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.clientSecret",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Client Secret of the Service Principal.",
              "remarks": "This can also be sourced from the ARM_CLIENT_SECRET environment variable."
            },
            "usage": "public java.lang.String getClientSecret();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Custom Endpoint for Azure Resource Manager. This can also be sourced from the ARM_ENDPOINT environment variable.",
              "remarks": "NOTE: An endpoint should only be configured when using Azure Stack."
            },
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.environment",
            "displayName": "environment",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Azure Environment which should be used.",
              "remarks": "This can also be sourced from the ARM_ENVIRONMENT environment variable.\nPossible values are public, china, german, stack and usgovernment. Defaults to public."
            },
            "usage": "public java.lang.String getEnvironment();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.msiEndpoint",
            "displayName": "msiEndpoint",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.msiEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a custom Managed Service Identity endpoint which is automatically determined if not specified.",
              "remarks": "This can also be sourced from the ARM_MSI_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getMsiEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestToken",
            "displayName": "oidcRequestToken",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The bearer token for the request to the OIDC provider.",
              "remarks": "This can\nalso be sourced from the ARM_OIDC_REQUEST_TOKEN or\nACTIONS_ID_TOKEN_REQUEST_TOKEN environment variables."
            },
            "usage": "public java.lang.String getOidcRequestToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestUrl",
            "displayName": "oidcRequestUrl",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.oidcRequestUrl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The URL for the OIDC provider from which to request an ID token.",
              "remarks": "This can also be sourced from the ARM_OIDC_REQUEST_URL or\nACTIONS_ID_TOKEN_REQUEST_URL environment variables."
            },
            "usage": "public java.lang.String getOidcRequestUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.resourceGroupName",
            "displayName": "resourceGroupName",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.resourceGroupName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The Name of the Resource Group in which the Storage Account exists."
            },
            "usage": "public java.lang.String getResourceGroupName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.sasToken",
            "displayName": "sasToken",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.sasToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The SAS Token used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_SAS_TOKEN environment variable."
            },
            "usage": "public java.lang.String getSasToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.snapshot",
            "displayName": "snapshot",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.snapshot",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should the Blob used to store the Terraform Statefile be snapshotted before use?",
              "remarks": "Defaults to false. This value can also be sourced\nfrom the ARM_SNAPSHOT environment variable."
            },
            "usage": "public java.lang.Boolean getSnapshot();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.subscriptionId",
            "displayName": "subscriptionId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.subscriptionId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Subscription ID in which the Storage Account exists.",
              "remarks": "This can also be sourced from the ARM_SUBSCRIPTION_ID environment variable."
            },
            "usage": "public java.lang.String getSubscriptionId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.tenantId",
            "displayName": "tenantId",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The Tenant ID in which the Subscription exists.",
              "remarks": "This can also be sourced from the ARM_TENANT_ID environment variable."
            },
            "usage": "public java.lang.String getTenantId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.useAzureadAuth",
            "displayName": "useAzureadAuth",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useAzureadAuth",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should AzureAD Authentication be used to access the Blob Storage Account.",
              "remarks": "This can also be sourced from the ARM_USE_AZUREAD environment\nvariable.\n\nNote: When using AzureAD for Authentication to Storage you also need to\nensure the Storage Blob Data Owner role is assigned."
            },
            "usage": "public java.lang.Boolean getUseAzureadAuth();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.useMicrosoftGraph",
            "displayName": "useMicrosoftGraph",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useMicrosoftGraph",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should MSAL be used for authentication instead of ADAL, and should Microsoft Graph be used instead of Azure Active Directory Graph?",
              "remarks": "Defaults to true.\n\nNote: In Terraform 1.2 the Azure Backend uses MSAL (and Microsoft Graph)\nrather than ADAL (and Azure Active Directory Graph) for authentication by\ndefault - you can disable this by setting use_microsoft_graph to false.\nThis setting will be removed in Terraform 1.3, due to Microsoft's\ndeprecation of ADAL."
            },
            "usage": "public java.lang.Boolean getUseMicrosoftGraph();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.useMsi",
            "displayName": "useMsi",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useMsi",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should Managed Service Identity authentication be used?",
              "remarks": "This can also be sourced from the ARM_USE_MSI environment variable."
            },
            "usage": "public java.lang.Boolean getUseMsi();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig.property.useOidc",
            "displayName": "useOidc",
            "id": "cdktf.DataTerraformRemoteStateAzurermConfig.property.useOidc",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Should OIDC authentication be used? This can also be sourced from the ARM_USE_OIDC environment variable.",
              "remarks": "Note: When using OIDC for authentication, use_microsoft_graph\nmust be set to true (which is the default)."
            },
            "usage": "public java.lang.Boolean getUseOidc();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateAzurermConfig;\n\nDataTerraformRemoteStateAzurermConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .containerName(java.lang.String)\n    .key(java.lang.String)\n    .storageAccountName(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .clientCertificatePassword(java.lang.String)\n//  .clientCertificatePath(java.lang.String)\n//  .clientId(java.lang.String)\n//  .clientSecret(java.lang.String)\n//  .endpoint(java.lang.String)\n//  .environment(java.lang.String)\n//  .msiEndpoint(java.lang.String)\n//  .oidcRequestToken(java.lang.String)\n//  .oidcRequestUrl(java.lang.String)\n//  .resourceGroupName(java.lang.String)\n//  .sasToken(java.lang.String)\n//  .snapshot(java.lang.Boolean)\n//  .subscriptionId(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .useAzureadAuth(java.lang.Boolean)\n//  .useMicrosoftGraph(java.lang.Boolean)\n//  .useMsi(java.lang.Boolean)\n//  .useOidc(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConfig",
        "displayName": "DataTerraformRemoteStateConfig",
        "id": "cdktf.DataTerraformRemoteStateConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateConfig;\n\nDataTerraformRemoteStateConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig",
        "displayName": "DataTerraformRemoteStateConsulConfig",
        "id": "cdktf.DataTerraformRemoteStateConsulConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.accessToken",
            "displayName": "accessToken",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.accessToken",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) Access token."
            },
            "usage": "public java.lang.String getAccessToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.path",
            "displayName": "path",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) Path in the Consul KV store."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.address",
            "displayName": "address",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.address",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) DNS name and port of your Consul endpoint specified in the format dnsname:port.",
              "remarks": "Defaults to the local agent HTTP listener."
            },
            "usage": "public java.lang.String getAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.caFile",
            "displayName": "caFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.caFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate authority used to verify the remote agent's certificate."
            },
            "usage": "public java.lang.String getCaFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.certFile",
            "displayName": "certFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.certFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded certificate provided to the remote agent;",
              "remarks": "requires use of key_file."
            },
            "usage": "public java.lang.String getCertFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.datacenter",
            "displayName": "datacenter",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.datacenter",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The datacenter to use.",
              "remarks": "Defaults to that of the agent."
            },
            "usage": "public java.lang.String getDatacenter();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.gzip",
            "displayName": "gzip",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.gzip",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) true to compress the state data using gzip, or false (the default) to leave it uncompressed."
            },
            "usage": "public java.lang.Boolean getGzip();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.httpAuth",
            "displayName": "httpAuth",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.httpAuth",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) HTTP Basic Authentication credentials to be used when communicating with Consul, in the format of either user or user:pass."
            },
            "usage": "public java.lang.String getHttpAuth();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.keyFile",
            "displayName": "keyFile",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.keyFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A path to a PEM-encoded private key, required if cert_file is specified."
            },
            "usage": "public java.lang.String getKeyFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.lock",
            "displayName": "lock",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) false to disable locking.",
              "remarks": "This defaults to true, but will require session permissions with Consul and\nat least kv write permissions on $path/.lock to perform locking."
            },
            "usage": "public java.lang.Boolean getLock();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig.property.scheme",
            "displayName": "scheme",
            "id": "cdktf.DataTerraformRemoteStateConsulConfig.property.scheme",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Specifies what protocol to use when talking to the given address,either http or https.",
              "remarks": "SSL support can also be triggered by setting then environment variable CONSUL_HTTP_SSL to true."
            },
            "usage": "public java.lang.String getScheme();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateConsulConfig;\n\nDataTerraformRemoteStateConsulConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .accessToken(java.lang.String)\n    .path(java.lang.String)\n//  .address(java.lang.String)\n//  .caFile(java.lang.String)\n//  .certFile(java.lang.String)\n//  .datacenter(java.lang.String)\n//  .gzip(java.lang.Boolean)\n//  .httpAuth(java.lang.String)\n//  .keyFile(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .scheme(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig",
        "displayName": "DataTerraformRemoteStateCosConfig",
        "id": "cdktf.DataTerraformRemoteStateCosConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the COS bucket.",
              "remarks": "You shall manually create it first."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.acl",
            "displayName": "acl",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Object ACL to be applied to the state file, allows private and public-read.",
              "remarks": "Defaults to private."
            },
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to enable server side encryption of the state file.",
              "remarks": "If it is true, COS will use 'AES256' encryption algorithm to encrypt state file."
            },
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.key",
            "displayName": "key",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path for saving the state file in bucket.",
              "remarks": "Defaults to terraform.tfstate."
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The directory for saving the state file in bucket.",
              "remarks": "Default to \"env:\"."
            },
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.region",
            "displayName": "region",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The region of the COS bucket.",
              "remarks": "It supports environment variables TENCENTCLOUD_REGION."
            },
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.secretId",
            "displayName": "secretId",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.secretId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Secret id of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_ID."
            },
            "usage": "public java.lang.String getSecretId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.DataTerraformRemoteStateCosConfig.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Secret key of Tencent Cloud.",
              "remarks": "It supports environment variables TENCENTCLOUD_SECRET_KEY."
            },
            "usage": "public java.lang.String getSecretKey();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateCosConfig;\n\nDataTerraformRemoteStateCosConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .acl(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .region(java.lang.String)\n//  .secretId(java.lang.String)\n//  .secretKey(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig",
        "displayName": "DataTerraformRemoteStateEtcdConfig",
        "id": "cdktf.DataTerraformRemoteStateEtcdConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.endpoints",
            "displayName": "endpoints",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.endpoints",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) A space-separated list of the etcd endpoints."
            },
            "usage": "public java.lang.String getEndpoints();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.path",
            "displayName": "path",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The path where to store the state."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.password",
            "displayName": "password",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig.property.username",
            "displayName": "username",
            "id": "cdktf.DataTerraformRemoteStateEtcdConfig.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The username."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcdConfig;\n\nDataTerraformRemoteStateEtcdConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .endpoints(java.lang.String)\n    .path(java.lang.String)\n//  .password(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config",
        "displayName": "DataTerraformRemoteStateEtcdV3Config",
        "id": "cdktf.DataTerraformRemoteStateEtcdV3Config",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.endpoints",
            "displayName": "endpoints",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.endpoints",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Required) The list of 'etcd' endpoints which to connect to."
            },
            "usage": "public java.util.List<java.lang.String> getEndpoints();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.cacertPath",
            "displayName": "cacertPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.cacertPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
            },
            "usage": "public java.lang.String getCacertPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.certPath",
            "displayName": "certPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.certPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
            },
            "usage": "public java.lang.String getCertPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.keyPath",
            "displayName": "keyPath",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.keyPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
            },
            "usage": "public java.lang.String getKeyPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.lock",
            "displayName": "lock",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to lock state access.",
              "remarks": "Defaults to true."
            },
            "usage": "public java.lang.Boolean getLock();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.password",
            "displayName": "password",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Password used to connect to the etcd cluster."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
              "remarks": "Defaults to \"\"."
            },
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config.property.username",
            "displayName": "username",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3Config.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Username used to connect to the etcd cluster."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3Config;\n\nDataTerraformRemoteStateEtcdV3Config.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .endpoints(java.util.List<java.lang.String>)\n//  .cacertPath(java.lang.String)\n//  .certPath(java.lang.String)\n//  .keyPath(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .password(java.lang.String)\n//  .prefix(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig",
        "displayName": "DataTerraformRemoteStateGcsConfig",
        "id": "cdktf.DataTerraformRemoteStateGcsConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the GCS bucket.",
              "remarks": "This name must be globally unique."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.accessToken",
            "displayName": "accessToken",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.accessToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
            },
            "usage": "public java.lang.String getAccessToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.credentials",
            "displayName": "credentials",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.credentials",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
              "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
            },
            "usage": "public java.lang.String getCredentials();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.encryptionKey",
            "displayName": "encryptionKey",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.encryptionKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
            },
            "usage": "public java.lang.String getEncryptionKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccount",
            "displayName": "impersonateServiceAccount",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccount",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
              "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
            },
            "usage": "public java.lang.String getImpersonateServiceAccount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccountDelegates",
            "displayName": "impersonateServiceAccountDelegates",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.impersonateServiceAccountDelegates",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) The delegation chain for an impersonating a service account."
            },
            "usage": "public java.util.List<java.lang.String> getImpersonateServiceAccountDelegates();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.DataTerraformRemoteStateGcsConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) GCS prefix inside the bucket.",
              "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
            },
            "usage": "public java.lang.String getPrefix();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateGcsConfig;\n\nDataTerraformRemoteStateGcsConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .accessToken(java.lang.String)\n//  .credentials(java.lang.String)\n//  .encryptionKey(java.lang.String)\n//  .impersonateServiceAccount(java.lang.String)\n//  .impersonateServiceAccountDelegates(java.util.List<java.lang.String>)\n//  .prefix(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig",
        "displayName": "DataTerraformRemoteStateHttpConfig",
        "id": "cdktf.DataTerraformRemoteStateHttpConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.address",
            "displayName": "address",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.address",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The address of the REST endpoint."
            },
            "usage": "public java.lang.String getAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.lockAddress",
            "displayName": "lockAddress",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.lockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The address of the lock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "public java.lang.String getLockAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.lockMethod",
            "displayName": "lockMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.lockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when locking.",
              "remarks": "Defaults to LOCK."
            },
            "usage": "public java.lang.String getLockMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.password",
            "displayName": "password",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password for HTTP basic authentication."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.retryMax",
            "displayName": "retryMax",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryMax",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The number of HTTP request retries.",
              "remarks": "Defaults to 2."
            },
            "usage": "public java.lang.Number getRetryMax();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMax",
            "displayName": "retryWaitMax",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMax",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 30."
            },
            "usage": "public java.lang.Number getRetryWaitMax();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMin",
            "displayName": "retryWaitMin",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.retryWaitMin",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 1."
            },
            "usage": "public java.lang.Number getRetryWaitMin();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.skipCertVerification",
            "displayName": "skipCertVerification",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.skipCertVerification",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to skip TLS verification.",
              "remarks": "Defaults to false."
            },
            "usage": "public java.lang.Boolean getSkipCertVerification();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.unlockAddress",
            "displayName": "unlockAddress",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.unlockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The address of the unlock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "public java.lang.String getUnlockAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.unlockMethod",
            "displayName": "unlockMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.unlockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when unlocking.",
              "remarks": "Defaults to UNLOCK."
            },
            "usage": "public java.lang.String getUnlockMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.updateMethod",
            "displayName": "updateMethod",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.updateMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) HTTP method to use when updating state.",
              "remarks": "Defaults to POST."
            },
            "usage": "public java.lang.String getUpdateMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig.property.username",
            "displayName": "username",
            "id": "cdktf.DataTerraformRemoteStateHttpConfig.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The username for HTTP basic authentication."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateHttpConfig;\n\nDataTerraformRemoteStateHttpConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .address(java.lang.String)\n//  .lockAddress(java.lang.String)\n//  .lockMethod(java.lang.String)\n//  .password(java.lang.String)\n//  .retryMax(java.lang.Number)\n//  .retryWaitMax(java.lang.Number)\n//  .retryWaitMin(java.lang.Number)\n//  .skipCertVerification(java.lang.Boolean)\n//  .unlockAddress(java.lang.String)\n//  .unlockMethod(java.lang.String)\n//  .updateMethod(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig",
        "displayName": "DataTerraformRemoteStateLocalConfig",
        "id": "cdktf.DataTerraformRemoteStateLocalConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig.property.path",
            "displayName": "path",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.path",
            "optional": true,
            "default": "- defaults to terraform.${stackId}.tfstate",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Path where the state file is stored."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig.property.workspaceDir",
            "displayName": "workspaceDir",
            "id": "cdktf.DataTerraformRemoteStateLocalConfig.property.workspaceDir",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to non-default workspaces."
            },
            "usage": "public java.lang.String getWorkspaceDir();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateLocalConfig;\n\nDataTerraformRemoteStateLocalConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n//  .path(java.lang.String)\n//  .workspaceDir(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig",
        "displayName": "DataTerraformRemoteStateMantaConfig",
        "id": "cdktf.DataTerraformRemoteStateMantaConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.account",
            "displayName": "account",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.account",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAccount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.keyId",
            "displayName": "keyId",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.keyId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKeyId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.path",
            "displayName": "path",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.insecureSkipTlsVerify",
            "displayName": "insecureSkipTlsVerify",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.insecureSkipTlsVerify",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getInsecureSkipTlsVerify();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.keyMaterial",
            "displayName": "keyMaterial",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.keyMaterial",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKeyMaterial();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.objectName",
            "displayName": "objectName",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.objectName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getObjectName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.url",
            "displayName": "url",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.url",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig.property.user",
            "displayName": "user",
            "id": "cdktf.DataTerraformRemoteStateMantaConfig.property.user",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUser();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateMantaConfig;\n\nDataTerraformRemoteStateMantaConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .account(java.lang.String)\n    .keyId(java.lang.String)\n    .path(java.lang.String)\n//  .insecureSkipTlsVerify(java.lang.Boolean)\n//  .keyMaterial(java.lang.String)\n//  .objectName(java.lang.String)\n//  .url(java.lang.String)\n//  .user(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig",
        "displayName": "DataTerraformRemoteStateOssConfig",
        "id": "cdktf.DataTerraformRemoteStateOssConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.acl",
            "displayName": "acl",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.assumeRole",
            "displayName": "assumeRole",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.assumeRole",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.OssAssumeRole",
                  "displayName": "OssAssumeRole",
                  "fqn": "com.hashicorp.cdktf.OssAssumeRole",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public OssAssumeRole getAssumeRole();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.ecsRoleName",
            "displayName": "ecsRoleName",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.ecsRoleName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getEcsRoleName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.key",
            "displayName": "key",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.profile",
            "displayName": "profile",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProfile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.region",
            "displayName": "region",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSecretKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.securityToken",
            "displayName": "securityToken",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.securityToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSecurityToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.sharedCredentialsFile",
            "displayName": "sharedCredentialsFile",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSharedCredentialsFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreEndpoint",
            "displayName": "tablestoreEndpoint",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTablestoreEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreTable",
            "displayName": "tablestoreTable",
            "id": "cdktf.DataTerraformRemoteStateOssConfig.property.tablestoreTable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTablestoreTable();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateOssConfig;\n\nDataTerraformRemoteStateOssConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRole(OssAssumeRole)\n//  .ecsRoleName(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .securityToken(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .tablestoreEndpoint(java.lang.String)\n//  .tablestoreTable(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig",
        "displayName": "DataTerraformRemoteStatePgConfig",
        "id": "cdktf.DataTerraformRemoteStatePgConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig.property.connStr",
            "displayName": "connStr",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.connStr",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getConnStr();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig.property.schemaName",
            "displayName": "schemaName",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.schemaName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSchemaName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig.property.skipSchemaCreation",
            "displayName": "skipSchemaCreation",
            "id": "cdktf.DataTerraformRemoteStatePgConfig.property.skipSchemaCreation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipSchemaCreation();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStatePgConfig;\n\nDataTerraformRemoteStatePgConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .connStr(java.lang.String)\n//  .schemaName(java.lang.String)\n//  .skipSchemaCreation(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig",
        "displayName": "DataTerraformRemoteStateRemoteConfig",
        "id": "cdktf.DataTerraformRemoteStateRemoteConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.organization",
            "displayName": "organization",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.organization",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getOrganization();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.workspaces",
            "displayName": "workspaces",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.workspaces",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IRemoteWorkspace",
                  "displayName": "IRemoteWorkspace",
                  "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public IRemoteWorkspace getWorkspaces();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.hostname",
            "displayName": "hostname",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.hostname",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getHostname();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig.property.token",
            "displayName": "token",
            "id": "cdktf.DataTerraformRemoteStateRemoteConfig.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getToken();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateRemoteConfig;\n\nDataTerraformRemoteStateRemoteConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .organization(java.lang.String)\n    .workspaces(IRemoteWorkspace)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config",
        "displayName": "DataTerraformRemoteStateS3Config",
        "id": "cdktf.DataTerraformRemoteStateS3Config",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Name of the S3 Bucket."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.key",
            "displayName": "key",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.key",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Path to the state file inside the S3 Bucket.",
              "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) AWS access key.",
              "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
            },
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.acl",
            "displayName": "acl",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Canned ACL to be applied to the state file."
            },
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicy",
            "displayName": "assumeRolePolicy",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicy",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "public java.lang.String getAssumeRolePolicy();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicyArns",
            "displayName": "assumeRolePolicyArns",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRolePolicyArns",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "public java.util.List<java.lang.String> getAssumeRolePolicyArns();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTags",
            "displayName": "assumeRoleTags",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTags",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Map of assume role session tags."
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getAssumeRoleTags();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTransitiveTagKeys",
            "displayName": "assumeRoleTransitiveTagKeys",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.assumeRoleTransitiveTagKeys",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
            },
            "usage": "public java.util.List<java.lang.String> getAssumeRoleTransitiveTagKeys();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.dynamodbEndpoint",
            "displayName": "dynamodbEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.dynamodbEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
              "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getDynamodbEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.dynamodbTable",
            "displayName": "dynamodbTable",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.dynamodbTable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
              "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
            },
            "usage": "public java.lang.String getDynamodbTable();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Enable server side encryption of the state file."
            },
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS S3 API.",
              "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.externalId",
            "displayName": "externalId",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.externalId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) External identifier to use when assuming the role."
            },
            "usage": "public java.lang.String getExternalId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.forcePathStyle",
            "displayName": "forcePathStyle",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.forcePathStyle",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
            },
            "usage": "public java.lang.Boolean getForcePathStyle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.iamEndpoint",
            "displayName": "iamEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.iamEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
              "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getIamEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.kmsKeyId",
            "displayName": "kmsKeyId",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.kmsKeyId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
              "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
            },
            "usage": "public java.lang.String getKmsKeyId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.maxRetries",
            "displayName": "maxRetries",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.maxRetries",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
              "remarks": "Defaults to 5."
            },
            "usage": "public java.lang.Number getMaxRetries();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.profile",
            "displayName": "profile",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
            },
            "usage": "public java.lang.String getProfile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.region",
            "displayName": "region",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
              "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
            },
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.roleArn",
            "displayName": "roleArn",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.roleArn",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
            },
            "usage": "public java.lang.String getRoleArn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) AWS secret access key.",
              "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
            },
            "usage": "public java.lang.String getSecretKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.sessionName",
            "displayName": "sessionName",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Session name to use when assuming the role."
            },
            "usage": "public java.lang.String getSessionName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.sharedCredentialsFile",
            "displayName": "sharedCredentialsFile",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Path to the AWS shared credentials file.",
              "remarks": "Defaults to ~/.aws/credentials."
            },
            "usage": "public java.lang.String getSharedCredentialsFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.skipCredentialsValidation",
            "displayName": "skipCredentialsValidation",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipCredentialsValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip credentials validation via the STS API."
            },
            "usage": "public java.lang.Boolean getSkipCredentialsValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.skipMetadataApiCheck",
            "displayName": "skipMetadataApiCheck",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipMetadataApiCheck",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip usage of EC2 Metadata API."
            },
            "usage": "public java.lang.Boolean getSkipMetadataApiCheck();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.skipRegionValidation",
            "displayName": "skipRegionValidation",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.skipRegionValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip validation of provided region name."
            },
            "usage": "public java.lang.Boolean getSkipRegionValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.sseCustomerKey",
            "displayName": "sseCustomerKey",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.sseCustomerKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
              "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
            },
            "usage": "public java.lang.String getSseCustomerKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.stsEndpoint",
            "displayName": "stsEndpoint",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.stsEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
              "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getStsEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.token",
            "displayName": "token",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
              "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
            },
            "usage": "public java.lang.String getToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3Config.property.workspaceKeyPrefix",
            "displayName": "workspaceKeyPrefix",
            "id": "cdktf.DataTerraformRemoteStateS3Config.property.workspaceKeyPrefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Prefix applied to the state path inside the bucket.",
              "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
            },
            "usage": "public java.lang.String getWorkspaceKeyPrefix();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateS3Config;\n\nDataTerraformRemoteStateS3Config.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .bucket(java.lang.String)\n    .key(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRolePolicy(java.lang.String)\n//  .assumeRolePolicyArns(java.util.List<java.lang.String>)\n//  .assumeRoleTags(java.util.Map<java.lang.String, java.lang.String>)\n//  .assumeRoleTransitiveTagKeys(java.util.List<java.lang.String>)\n//  .dynamodbEndpoint(java.lang.String)\n//  .dynamodbTable(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .externalId(java.lang.String)\n//  .forcePathStyle(java.lang.Boolean)\n//  .iamEndpoint(java.lang.String)\n//  .kmsKeyId(java.lang.String)\n//  .maxRetries(java.lang.Number)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .roleArn(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .sessionName(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .skipCredentialsValidation(java.lang.Boolean)\n//  .skipMetadataApiCheck(java.lang.Boolean)\n//  .skipRegionValidation(java.lang.Boolean)\n//  .sseCustomerKey(java.lang.String)\n//  .stsEndpoint(java.lang.String)\n//  .token(java.lang.String)\n//  .workspaceKeyPrefix(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig",
        "displayName": "DataTerraformRemoteStateSwiftConfig",
        "id": "cdktf.DataTerraformRemoteStateSwiftConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.defaults",
            "displayName": "defaults",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.defaults",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getDefaults();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.workspace",
            "displayName": "workspace",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.workspace",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkspace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.container",
            "displayName": "container",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.container",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getContainer();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialId",
            "displayName": "applicationCredentialId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialName",
            "displayName": "applicationCredentialName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialSecret",
            "displayName": "applicationCredentialSecret",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.applicationCredentialSecret",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialSecret();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.archiveContainer",
            "displayName": "archiveContainer",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.archiveContainer",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getArchiveContainer();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.authUrl",
            "displayName": "authUrl",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.authUrl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAuthUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.cacertFile",
            "displayName": "cacertFile",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cacertFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCacertFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.cert",
            "displayName": "cert",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cert",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCert();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.cloud",
            "displayName": "cloud",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.cloud",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCloud();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.defaultDomain",
            "displayName": "defaultDomain",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.defaultDomain",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDefaultDomain();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.domainId",
            "displayName": "domainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.domainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.domainName",
            "displayName": "domainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.domainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.expireAfter",
            "displayName": "expireAfter",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.expireAfter",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getExpireAfter();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.insecure",
            "displayName": "insecure",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getInsecure();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.key",
            "displayName": "key",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.password",
            "displayName": "password",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainId",
            "displayName": "projectDomainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProjectDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainName",
            "displayName": "projectDomainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.projectDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProjectDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.regionName",
            "displayName": "regionName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.regionName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getRegionName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.stateName",
            "displayName": "stateName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.stateName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStateName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantId",
            "displayName": "tenantId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTenantId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantName",
            "displayName": "tenantName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.tenantName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTenantName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.token",
            "displayName": "token",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainId",
            "displayName": "userDomainId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainName",
            "displayName": "userDomainName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.userId",
            "displayName": "userId",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig.property.userName",
            "displayName": "userName",
            "id": "cdktf.DataTerraformRemoteStateSwiftConfig.property.userName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserName();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.DataTerraformRemoteStateSwiftConfig;\n\nDataTerraformRemoteStateSwiftConfig.builder()\n//  .defaults(java.util.Map<java.lang.String, java.lang.Object>)\n//  .workspace(java.lang.String)\n    .container(java.lang.String)\n//  .applicationCredentialId(java.lang.String)\n//  .applicationCredentialName(java.lang.String)\n//  .applicationCredentialSecret(java.lang.String)\n//  .archiveContainer(java.lang.String)\n//  .authUrl(java.lang.String)\n//  .cacertFile(java.lang.String)\n//  .cert(java.lang.String)\n//  .cloud(java.lang.String)\n//  .defaultDomain(java.lang.String)\n//  .domainId(java.lang.String)\n//  .domainName(java.lang.String)\n//  .expireAfter(java.lang.String)\n//  .insecure(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .password(java.lang.String)\n//  .projectDomainId(java.lang.String)\n//  .projectDomainName(java.lang.String)\n//  .regionName(java.lang.String)\n//  .stateName(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .tenantName(java.lang.String)\n//  .token(java.lang.String)\n//  .userDomainId(java.lang.String)\n//  .userDomainName(java.lang.String)\n//  .userId(java.lang.String)\n//  .userName(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.EncodingOptions",
        "displayName": "EncodingOptions",
        "id": "cdktf.EncodingOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.EncodingOptions.property.displayHint",
            "displayName": "displayHint",
            "id": "cdktf.EncodingOptions.property.displayHint",
            "optional": true,
            "default": "- no display hint",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "A hint for the Token's purpose when stringifying it."
            },
            "usage": "public java.lang.String getDisplayHint();"
          }
        ],
        "docs": {
          "summary": "Properties to string encodings."
        },
        "usage": "import com.hashicorp.cdktf.EncodingOptions;\n\nEncodingOptions.builder()\n//  .displayHint(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.EtcdBackendProps",
        "displayName": "EtcdBackendProps",
        "id": "cdktf.EtcdBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackendProps.property.endpoints",
            "displayName": "endpoints",
            "id": "cdktf.EtcdBackendProps.property.endpoints",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) A space-separated list of the etcd endpoints."
            },
            "usage": "public java.lang.String getEndpoints();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackendProps.property.path",
            "displayName": "path",
            "id": "cdktf.EtcdBackendProps.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The path where to store the state."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackendProps.property.password",
            "displayName": "password",
            "id": "cdktf.EtcdBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdBackendProps.property.username",
            "displayName": "username",
            "id": "cdktf.EtcdBackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The username."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {
          "summary": "Stores the state in etcd 2.x at a given path.",
          "remarks": "This backend does not support state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/etcd"
        },
        "usage": "import com.hashicorp.cdktf.EtcdBackendProps;\n\nEtcdBackendProps.builder()\n    .endpoints(java.lang.String)\n    .path(java.lang.String)\n//  .password(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps",
        "displayName": "EtcdV3BackendProps",
        "id": "cdktf.EtcdV3BackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.endpoints",
            "displayName": "endpoints",
            "id": "cdktf.EtcdV3BackendProps.property.endpoints",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Required) The list of 'etcd' endpoints which to connect to."
            },
            "usage": "public java.util.List<java.lang.String> getEndpoints();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.cacertPath",
            "displayName": "cacertPath",
            "id": "cdktf.EtcdV3BackendProps.property.cacertPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded CA bundle with which to verify certificates of TLS-enabled etcd servers."
            },
            "usage": "public java.lang.String getCacertPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.certPath",
            "displayName": "certPath",
            "id": "cdktf.EtcdV3BackendProps.property.certPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded certificate to provide to etcd for secure client identification."
            },
            "usage": "public java.lang.String getCertPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.keyPath",
            "displayName": "keyPath",
            "id": "cdktf.EtcdV3BackendProps.property.keyPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to a PEM-encoded key to provide to etcd for secure client identification."
            },
            "usage": "public java.lang.String getKeyPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.lock",
            "displayName": "lock",
            "id": "cdktf.EtcdV3BackendProps.property.lock",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to lock state access.",
              "remarks": "Defaults to true."
            },
            "usage": "public java.lang.Boolean getLock();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.password",
            "displayName": "password",
            "id": "cdktf.EtcdV3BackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Password used to connect to the etcd cluster."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.EtcdV3BackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) An optional prefix to be added to keys when to storing state in etcd.",
              "remarks": "Defaults to \"\"."
            },
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.EtcdV3BackendProps.property.username",
            "displayName": "username",
            "id": "cdktf.EtcdV3BackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Username used to connect to the etcd cluster."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {
          "summary": "Stores the state in the etcd KV store with a given prefix.",
          "remarks": "This backend supports state locking.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/etcdv3"
        },
        "usage": "import com.hashicorp.cdktf.EtcdV3BackendProps;\n\nEtcdV3BackendProps.builder()\n    .endpoints(java.util.List<java.lang.String>)\n//  .cacertPath(java.lang.String)\n//  .certPath(java.lang.String)\n//  .keyPath(java.lang.String)\n//  .lock(java.lang.Boolean)\n//  .password(java.lang.String)\n//  .prefix(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.FileProvisioner",
        "displayName": "FileProvisioner",
        "id": "cdktf.FileProvisioner",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.FileProvisioner.property.destination",
            "displayName": "destination",
            "id": "cdktf.FileProvisioner.property.destination",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The source file or directory.",
              "remarks": "Specify it either relative to the current working directory or as an absolute path.\nThis argument cannot be combined with content."
            },
            "usage": "public java.lang.String getDestination();"
          },
          {
            "fqn": "com.hashicorp.cdktf.FileProvisioner.property.type",
            "displayName": "type",
            "id": "cdktf.FileProvisioner.property.type",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.FileProvisioner.property.connection",
            "displayName": "connection",
            "id": "cdktf.FileProvisioner.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect."
            },
            "usage": "public java.lang.Object getConnection();"
          },
          {
            "fqn": "com.hashicorp.cdktf.FileProvisioner.property.content",
            "displayName": "content",
            "id": "cdktf.FileProvisioner.property.content",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The destination path to write to on the remote system.",
              "remarks": "See Destination Paths below for more information."
            },
            "usage": "public java.lang.String getContent();"
          },
          {
            "fqn": "com.hashicorp.cdktf.FileProvisioner.property.source",
            "displayName": "source",
            "id": "cdktf.FileProvisioner.property.source",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The direct content to copy on the destination.",
              "remarks": "If destination is a file, the content will be written on that file.\nIn case of a directory, a file named tf-file-content is created inside that directory.\nWe recommend using a file as the destination when using content.\nThis argument cannot be combined with source."
            },
            "usage": "public java.lang.String getSource();"
          }
        ],
        "docs": {
          "summary": "The file provisioner copies files or directories from the machine running Terraform to the newly created resource.",
          "remarks": "The file provisioner supports both ssh and winrm type connections.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/file file}"
        },
        "usage": "import com.hashicorp.cdktf.FileProvisioner;\n\nFileProvisioner.builder()\n    .destination(java.lang.String)\n    .type(java.lang.String)\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .content(java.lang.String)\n//  .source(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.GcsBackendProps",
        "displayName": "GcsBackendProps",
        "id": "cdktf.GcsBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.GcsBackendProps.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The name of the GCS bucket.",
              "remarks": "This name must be globally unique."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.accessToken",
            "displayName": "accessToken",
            "id": "cdktf.GcsBackendProps.property.accessToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A temporary [OAuth 2.0 access token] obtained from the Google Authorization server, i.e. the Authorization: Bearer token used to authenticate HTTP requests to GCP APIs. This is an alternative to credentials. If both are specified, access_token will be used over the credentials field."
            },
            "usage": "public java.lang.String getAccessToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.credentials",
            "displayName": "credentials",
            "id": "cdktf.GcsBackendProps.property.credentials",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Local path to Google Cloud Platform account credentials in JSON format.",
              "remarks": "If unset, Google Application Default Credentials are used.\nThe provided credentials must have Storage Object Admin role on the bucket.\n\nWarning: if using the Google Cloud Platform provider as well,\nit will also pick up the GOOGLE_CREDENTIALS environment variable."
            },
            "usage": "public java.lang.String getCredentials();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.encryptionKey",
            "displayName": "encryptionKey",
            "id": "cdktf.GcsBackendProps.property.encryptionKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) A 32 byte base64 encoded 'customer supplied encryption key' used to encrypt all state."
            },
            "usage": "public java.lang.String getEncryptionKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.impersonateServiceAccount",
            "displayName": "impersonateServiceAccount",
            "id": "cdktf.GcsBackendProps.property.impersonateServiceAccount",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The service account to impersonate for accessing the State Bucket.",
              "remarks": "You must have roles/iam.serviceAccountTokenCreator role on that account for the impersonation to succeed.\nIf you are using a delegation chain, you can specify that using the impersonate_service_account_delegates field.\nAlternatively, this can be specified using the GOOGLE_IMPERSONATE_SERVICE_ACCOUNT environment variable."
            },
            "usage": "public java.lang.String getImpersonateServiceAccount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.impersonateServiceAccountDelegates",
            "displayName": "impersonateServiceAccountDelegates",
            "id": "cdktf.GcsBackendProps.property.impersonateServiceAccountDelegates",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) The delegation chain for an impersonating a service account."
            },
            "usage": "public java.util.List<java.lang.String> getImpersonateServiceAccountDelegates();"
          },
          {
            "fqn": "com.hashicorp.cdktf.GcsBackendProps.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.GcsBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) GCS prefix inside the bucket.",
              "remarks": "Named states for workspaces are stored in an object called <prefix>/<name>.tfstate."
            },
            "usage": "public java.lang.String getPrefix();"
          }
        ],
        "docs": {
          "summary": "Stores the state as an object in a configurable prefix in a pre-existing bucket on Google Cloud Storage (GCS).",
          "remarks": "The bucket must exist prior to configuring the backend.\n\nThis backend supports state locking.\n\nWarning! It is highly recommended that you enable Object Versioning on the GCS bucket\nto allow for state recovery in the case of accidental deletions and human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/gcs"
        },
        "usage": "import com.hashicorp.cdktf.GcsBackendProps;\n\nGcsBackendProps.builder()\n    .bucket(java.lang.String)\n//  .accessToken(java.lang.String)\n//  .credentials(java.lang.String)\n//  .encryptionKey(java.lang.String)\n//  .impersonateServiceAccount(java.lang.String)\n//  .impersonateServiceAccountDelegates(java.util.List<java.lang.String>)\n//  .prefix(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.HttpBackendProps",
        "displayName": "HttpBackendProps",
        "id": "cdktf.HttpBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.address",
            "displayName": "address",
            "id": "cdktf.HttpBackendProps.property.address",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Required) The address of the REST endpoint."
            },
            "usage": "public java.lang.String getAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.lockAddress",
            "displayName": "lockAddress",
            "id": "cdktf.HttpBackendProps.property.lockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The address of the lock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "public java.lang.String getLockAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.lockMethod",
            "displayName": "lockMethod",
            "id": "cdktf.HttpBackendProps.property.lockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when locking.",
              "remarks": "Defaults to LOCK."
            },
            "usage": "public java.lang.String getLockMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.password",
            "displayName": "password",
            "id": "cdktf.HttpBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The password for HTTP basic authentication."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.retryMax",
            "displayName": "retryMax",
            "id": "cdktf.HttpBackendProps.property.retryMax",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The number of HTTP request retries.",
              "remarks": "Defaults to 2."
            },
            "usage": "public java.lang.Number getRetryMax();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.retryWaitMax",
            "displayName": "retryWaitMax",
            "id": "cdktf.HttpBackendProps.property.retryWaitMax",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The maximum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 30."
            },
            "usage": "public java.lang.Number getRetryWaitMax();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.retryWaitMin",
            "displayName": "retryWaitMin",
            "id": "cdktf.HttpBackendProps.property.retryWaitMin",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The minimum time in seconds to wait between HTTP request attempts.",
              "remarks": "Defaults to 1."
            },
            "usage": "public java.lang.Number getRetryWaitMin();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.skipCertVerification",
            "displayName": "skipCertVerification",
            "id": "cdktf.HttpBackendProps.property.skipCertVerification",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Whether to skip TLS verification.",
              "remarks": "Defaults to false."
            },
            "usage": "public java.lang.Boolean getSkipCertVerification();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.unlockAddress",
            "displayName": "unlockAddress",
            "id": "cdktf.HttpBackendProps.property.unlockAddress",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The address of the unlock REST endpoint.",
              "remarks": "Defaults to disabled."
            },
            "usage": "public java.lang.String getUnlockAddress();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.unlockMethod",
            "displayName": "unlockMethod",
            "id": "cdktf.HttpBackendProps.property.unlockMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The HTTP method to use when unlocking.",
              "remarks": "Defaults to UNLOCK."
            },
            "usage": "public java.lang.String getUnlockMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.updateMethod",
            "displayName": "updateMethod",
            "id": "cdktf.HttpBackendProps.property.updateMethod",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) HTTP method to use when updating state.",
              "remarks": "Defaults to POST."
            },
            "usage": "public java.lang.String getUpdateMethod();"
          },
          {
            "fqn": "com.hashicorp.cdktf.HttpBackendProps.property.username",
            "displayName": "username",
            "id": "cdktf.HttpBackendProps.property.username",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The username for HTTP basic authentication."
            },
            "usage": "public java.lang.String getUsername();"
          }
        ],
        "docs": {
          "summary": "Stores the state using a simple REST client.",
          "remarks": "State will be fetched via GET, updated via POST, and purged with DELETE.\nThe method used for updating is configurable.\n\nThis backend optionally supports state locking.\nWhen locking support is enabled it will use LOCK and UNLOCK requests providing the lock info in the body.\nThe endpoint should return a 423: Locked or 409: Conflict with the holding lock info when\nit's already taken, 200: OK for success. Any other status will be considered an error.\nThe ID of the holding lock info will be added as a query parameter to state updates requests.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/http"
        },
        "usage": "import com.hashicorp.cdktf.HttpBackendProps;\n\nHttpBackendProps.builder()\n    .address(java.lang.String)\n//  .lockAddress(java.lang.String)\n//  .lockMethod(java.lang.String)\n//  .password(java.lang.String)\n//  .retryMax(java.lang.Number)\n//  .retryWaitMax(java.lang.Number)\n//  .retryWaitMin(java.lang.Number)\n//  .skipCertVerification(java.lang.Boolean)\n//  .unlockAddress(java.lang.String)\n//  .unlockMethod(java.lang.String)\n//  .updateMethod(java.lang.String)\n//  .username(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.LazyAnyValueOptions",
        "displayName": "LazyAnyValueOptions",
        "id": "cdktf.LazyAnyValueOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LazyAnyValueOptions.property.displayHint",
            "displayName": "displayHint",
            "id": "cdktf.LazyAnyValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "public java.lang.String getDisplayHint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyAnyValueOptions.property.omitEmptyArray",
            "displayName": "omitEmptyArray",
            "id": "cdktf.LazyAnyValueOptions.property.omitEmptyArray",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "If the produced value is an array and it is empty, return 'undefined' instead."
            },
            "usage": "public java.lang.Boolean getOmitEmptyArray();"
          }
        ],
        "docs": {
          "summary": "Options for creating lazy untyped tokens."
        },
        "usage": "import com.hashicorp.cdktf.LazyAnyValueOptions;\n\nLazyAnyValueOptions.builder()\n//  .displayHint(java.lang.String)\n//  .omitEmptyArray(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.LazyListValueOptions",
        "displayName": "LazyListValueOptions",
        "id": "cdktf.LazyListValueOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LazyListValueOptions.property.displayHint",
            "displayName": "displayHint",
            "id": "cdktf.LazyListValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "public java.lang.String getDisplayHint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyListValueOptions.property.omitEmpty",
            "displayName": "omitEmpty",
            "id": "cdktf.LazyListValueOptions.property.omitEmpty",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "If the produced list is empty, return 'undefined' instead."
            },
            "usage": "public java.lang.Boolean getOmitEmpty();"
          }
        ],
        "docs": {
          "summary": "Options for creating a lazy list token."
        },
        "usage": "import com.hashicorp.cdktf.LazyListValueOptions;\n\nLazyListValueOptions.builder()\n//  .displayHint(java.lang.String)\n//  .omitEmpty(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.LazyStringValueOptions",
        "displayName": "LazyStringValueOptions",
        "id": "cdktf.LazyStringValueOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LazyStringValueOptions.property.displayHint",
            "displayName": "displayHint",
            "id": "cdktf.LazyStringValueOptions.property.displayHint",
            "optional": true,
            "default": "- No hint",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Use the given name as a display hint."
            },
            "usage": "public java.lang.String getDisplayHint();"
          }
        ],
        "docs": {
          "summary": "Options for creating a lazy string token."
        },
        "usage": "import com.hashicorp.cdktf.LazyStringValueOptions;\n\nLazyStringValueOptions.builder()\n//  .displayHint(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.LocalBackendProps",
        "displayName": "LocalBackendProps",
        "id": "cdktf.LocalBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LocalBackendProps.property.path",
            "displayName": "path",
            "id": "cdktf.LocalBackendProps.property.path",
            "optional": true,
            "default": "- defaults to terraform.${stackId}.tfstate",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Path where the state file is stored."
            },
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalBackendProps.property.workspaceDir",
            "displayName": "workspaceDir",
            "id": "cdktf.LocalBackendProps.property.workspaceDir",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The path to non-default workspaces."
            },
            "usage": "public java.lang.String getWorkspaceDir();"
          }
        ],
        "docs": {
          "summary": "The local backend stores state on the local filesystem, locks that state using system APIs, and performs operations locally.",
          "remarks": "Read more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/local"
        },
        "usage": "import com.hashicorp.cdktf.LocalBackendProps;\n\nLocalBackendProps.builder()\n//  .path(java.lang.String)\n//  .workspaceDir(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
        "displayName": "LocalExecProvisioner",
        "id": "cdktf.LocalExecProvisioner",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.command",
            "displayName": "command",
            "id": "cdktf.LocalExecProvisioner.property.command",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "This is the command to execute.",
              "remarks": "It can be provided as a relative path to the current working directory or as an absolute path.\nIt is evaluated in a shell, and can use environment variables or Terraform variables."
            },
            "usage": "public java.lang.String getCommand();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.type",
            "displayName": "type",
            "id": "cdktf.LocalExecProvisioner.property.type",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.environment",
            "displayName": "environment",
            "id": "cdktf.LocalExecProvisioner.property.environment",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "A record of key value pairs representing the environment of the executed command.",
              "remarks": "It inherits the current process environment."
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getEnvironment();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.interpreter",
            "displayName": "interpreter",
            "id": "cdktf.LocalExecProvisioner.property.interpreter",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "If provided, this is a list of interpreter arguments used to execute the command.",
              "remarks": "The first argument is the interpreter itself.\nIt can be provided as a relative path to the current working directory or as an absolute path\nThe remaining arguments are appended prior to the command.\nThis allows building command lines of the form \"/bin/bash\", \"-c\", \"echo foo\".\nIf interpreter is unspecified, sensible defaults will be chosen based on the system OS."
            },
            "usage": "public java.util.List<java.lang.String> getInterpreter();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.when",
            "displayName": "when",
            "id": "cdktf.LocalExecProvisioner.property.when",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "If provided, specifies when Terraform will execute the command.",
              "remarks": "For example, when = destroy specifies that the provisioner will run when the associated resource is destroyed"
            },
            "usage": "public java.lang.String getWhen();"
          },
          {
            "fqn": "com.hashicorp.cdktf.LocalExecProvisioner.property.workingDir",
            "displayName": "workingDir",
            "id": "cdktf.LocalExecProvisioner.property.workingDir",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "If provided, specifies the working directory where command will be executed.",
              "remarks": "It can be provided as a relative path to the current working directory or as an absolute path.\nThe directory must exist."
            },
            "usage": "public java.lang.String getWorkingDir();"
          }
        ],
        "docs": {
          "summary": "The local-exec provisioner invokes a local executable after a resource is created.",
          "remarks": "This invokes a process on the machine running Terraform, not on the resource.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/local-exec local-exec}"
        },
        "usage": "import com.hashicorp.cdktf.LocalExecProvisioner;\n\nLocalExecProvisioner.builder()\n    .command(java.lang.String)\n    .type(java.lang.String)\n//  .environment(java.util.Map<java.lang.String, java.lang.String>)\n//  .interpreter(java.util.List<java.lang.String>)\n//  .when(java.lang.String)\n//  .workingDir(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.MantaBackendProps",
        "displayName": "MantaBackendProps",
        "id": "cdktf.MantaBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.account",
            "displayName": "account",
            "id": "cdktf.MantaBackendProps.property.account",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAccount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.keyId",
            "displayName": "keyId",
            "id": "cdktf.MantaBackendProps.property.keyId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKeyId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.path",
            "displayName": "path",
            "id": "cdktf.MantaBackendProps.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.insecureSkipTlsVerify",
            "displayName": "insecureSkipTlsVerify",
            "id": "cdktf.MantaBackendProps.property.insecureSkipTlsVerify",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getInsecureSkipTlsVerify();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.keyMaterial",
            "displayName": "keyMaterial",
            "id": "cdktf.MantaBackendProps.property.keyMaterial",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKeyMaterial();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.objectName",
            "displayName": "objectName",
            "id": "cdktf.MantaBackendProps.property.objectName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getObjectName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.url",
            "displayName": "url",
            "id": "cdktf.MantaBackendProps.property.url",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.MantaBackendProps.property.user",
            "displayName": "user",
            "id": "cdktf.MantaBackendProps.property.user",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUser();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.MantaBackendProps;\n\nMantaBackendProps.builder()\n    .account(java.lang.String)\n    .keyId(java.lang.String)\n    .path(java.lang.String)\n//  .insecureSkipTlsVerify(java.lang.Boolean)\n//  .keyMaterial(java.lang.String)\n//  .objectName(java.lang.String)\n//  .url(java.lang.String)\n//  .user(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.OssAssumeRole",
        "displayName": "OssAssumeRole",
        "id": "cdktf.OssAssumeRole",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.OssAssumeRole.property.roleArn",
            "displayName": "roleArn",
            "id": "cdktf.OssAssumeRole.property.roleArn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getRoleArn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssAssumeRole.property.policy",
            "displayName": "policy",
            "id": "cdktf.OssAssumeRole.property.policy",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPolicy();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssAssumeRole.property.sessionExpiration",
            "displayName": "sessionExpiration",
            "id": "cdktf.OssAssumeRole.property.sessionExpiration",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getSessionExpiration();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssAssumeRole.property.sessionName",
            "displayName": "sessionName",
            "id": "cdktf.OssAssumeRole.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSessionName();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.OssAssumeRole;\n\nOssAssumeRole.builder()\n    .roleArn(java.lang.String)\n//  .policy(java.lang.String)\n//  .sessionExpiration(java.lang.Number)\n//  .sessionName(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.OssBackendProps",
        "displayName": "OssBackendProps",
        "id": "cdktf.OssBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.OssBackendProps.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.OssBackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.acl",
            "displayName": "acl",
            "id": "cdktf.OssBackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.assumeRole",
            "displayName": "assumeRole",
            "id": "cdktf.OssBackendProps.property.assumeRole",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.OssAssumeRole",
                  "displayName": "OssAssumeRole",
                  "fqn": "com.hashicorp.cdktf.OssAssumeRole",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public OssAssumeRole getAssumeRole();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.ecsRoleName",
            "displayName": "ecsRoleName",
            "id": "cdktf.OssBackendProps.property.ecsRoleName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getEcsRoleName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.OssBackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.OssBackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.key",
            "displayName": "key",
            "id": "cdktf.OssBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.prefix",
            "displayName": "prefix",
            "id": "cdktf.OssBackendProps.property.prefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPrefix();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.profile",
            "displayName": "profile",
            "id": "cdktf.OssBackendProps.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProfile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.region",
            "displayName": "region",
            "id": "cdktf.OssBackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.OssBackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSecretKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.securityToken",
            "displayName": "securityToken",
            "id": "cdktf.OssBackendProps.property.securityToken",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSecurityToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.sharedCredentialsFile",
            "displayName": "sharedCredentialsFile",
            "id": "cdktf.OssBackendProps.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSharedCredentialsFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.tablestoreEndpoint",
            "displayName": "tablestoreEndpoint",
            "id": "cdktf.OssBackendProps.property.tablestoreEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTablestoreEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.OssBackendProps.property.tablestoreTable",
            "displayName": "tablestoreTable",
            "id": "cdktf.OssBackendProps.property.tablestoreTable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTablestoreTable();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.OssBackendProps;\n\nOssBackendProps.builder()\n    .bucket(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRole(OssAssumeRole)\n//  .ecsRoleName(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .key(java.lang.String)\n//  .prefix(java.lang.String)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .securityToken(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .tablestoreEndpoint(java.lang.String)\n//  .tablestoreTable(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.PgBackendProps",
        "displayName": "PgBackendProps",
        "id": "cdktf.PgBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.PgBackendProps.property.connStr",
            "displayName": "connStr",
            "id": "cdktf.PgBackendProps.property.connStr",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getConnStr();"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackendProps.property.schemaName",
            "displayName": "schemaName",
            "id": "cdktf.PgBackendProps.property.schemaName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSchemaName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.PgBackendProps.property.skipSchemaCreation",
            "displayName": "skipSchemaCreation",
            "id": "cdktf.PgBackendProps.property.skipSchemaCreation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipSchemaCreation();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.PgBackendProps;\n\nPgBackendProps.builder()\n    .connStr(java.lang.String)\n//  .schemaName(java.lang.String)\n//  .skipSchemaCreation(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.RemoteBackendProps",
        "displayName": "RemoteBackendProps",
        "id": "cdktf.RemoteBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackendProps.property.organization",
            "displayName": "organization",
            "id": "cdktf.RemoteBackendProps.property.organization",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getOrganization();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackendProps.property.workspaces",
            "displayName": "workspaces",
            "id": "cdktf.RemoteBackendProps.property.workspaces",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.IRemoteWorkspace",
                  "displayName": "IRemoteWorkspace",
                  "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public IRemoteWorkspace getWorkspaces();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackendProps.property.hostname",
            "displayName": "hostname",
            "id": "cdktf.RemoteBackendProps.property.hostname",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getHostname();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteBackendProps.property.token",
            "displayName": "token",
            "id": "cdktf.RemoteBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getToken();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.RemoteBackendProps;\n\nRemoteBackendProps.builder()\n    .organization(java.lang.String)\n    .workspaces(IRemoteWorkspace)\n//  .hostname(java.lang.String)\n//  .token(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
        "displayName": "RemoteExecProvisioner",
        "id": "cdktf.RemoteExecProvisioner",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner.property.type",
            "displayName": "type",
            "id": "cdktf.RemoteExecProvisioner.property.type",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner.property.connection",
            "displayName": "connection",
            "id": "cdktf.RemoteExecProvisioner.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
              "remarks": "A connection must be provided here or in the parent resource."
            },
            "usage": "public java.lang.Object getConnection();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner.property.inline",
            "displayName": "inline",
            "id": "cdktf.RemoteExecProvisioner.property.inline",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "This is a list of command strings.",
              "remarks": "They are executed in the order they are provided.\nThis cannot be provided with script or scripts."
            },
            "usage": "public java.util.List<java.lang.String> getInline();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner.property.script",
            "displayName": "script",
            "id": "cdktf.RemoteExecProvisioner.property.script",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "This is a path (relative or absolute) to a local script that will be copied to the remote resource and then executed.",
              "remarks": "This cannot be provided with inline or scripts."
            },
            "usage": "public java.lang.String getScript();"
          },
          {
            "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner.property.scripts",
            "displayName": "scripts",
            "id": "cdktf.RemoteExecProvisioner.property.scripts",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "This is a list of paths (relative or absolute) to local scripts that will be copied to the remote resource and then executed.",
              "remarks": "They are executed in the order they are provided.\nThis cannot be provided with inline or script."
            },
            "usage": "public java.util.List<java.lang.String> getScripts();"
          }
        ],
        "docs": {
          "summary": "The remote-exec provisioner invokes a script on a remote resource after it is created.",
          "remarks": "This can be used to run a configuration management tool, bootstrap into a cluster, etc\nThe remote-exec provisioner requires a connection and supports both ssh and winrm.\n\nSee {@link https://www.terraform.io/language/resources/provisioners/remote-exec remote-exec}"
        },
        "usage": "import com.hashicorp.cdktf.RemoteExecProvisioner;\n\nRemoteExecProvisioner.builder()\n    .type(java.lang.String)\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .inline(java.util.List<java.lang.String>)\n//  .script(java.lang.String)\n//  .scripts(java.util.List<java.lang.String>)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.ResolveOptions",
        "displayName": "ResolveOptions",
        "id": "cdktf.ResolveOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ResolveOptions.property.resolver",
            "displayName": "resolver",
            "id": "cdktf.ResolveOptions.property.resolver",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITokenResolver",
                  "displayName": "ITokenResolver",
                  "fqn": "com.hashicorp.cdktf.ITokenResolver",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The resolver to apply to any resolvable tokens found."
            },
            "usage": "public ITokenResolver getResolver();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ResolveOptions.property.scope",
            "displayName": "scope",
            "id": "cdktf.ResolveOptions.property.scope",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.IConstruct",
                  "displayName": "IConstruct",
                  "fqn": "software.constructs.IConstruct",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The scope from which resolution is performed."
            },
            "usage": "public IConstruct getScope();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ResolveOptions.property.preparing",
            "displayName": "preparing",
            "id": "cdktf.ResolveOptions.property.preparing",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Whether the resolution is being executed during the prepare phase or not."
            },
            "usage": "public java.lang.Boolean getPreparing();"
          }
        ],
        "docs": {
          "summary": "Options to the resolve() operation.",
          "remarks": "NOT the same as the ResolveContext; ResolveContext is exposed to Token\nimplementors and resolution hooks, whereas this struct is just to bundle\na number of things that would otherwise be arguments to resolve() in a\nreadable way."
        },
        "usage": "import com.hashicorp.cdktf.ResolveOptions;\n\nResolveOptions.builder()\n    .resolver(ITokenResolver)\n    .scope(IConstruct)\n//  .preparing(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.S3BackendProps",
        "displayName": "S3BackendProps",
        "id": "cdktf.S3BackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.bucket",
            "displayName": "bucket",
            "id": "cdktf.S3BackendProps.property.bucket",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Name of the S3 Bucket."
            },
            "usage": "public java.lang.String getBucket();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.key",
            "displayName": "key",
            "id": "cdktf.S3BackendProps.property.key",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Path to the state file inside the S3 Bucket.",
              "remarks": "When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key"
            },
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.accessKey",
            "displayName": "accessKey",
            "id": "cdktf.S3BackendProps.property.accessKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) AWS access key.",
              "remarks": "If configured, must also configure secret_key.\nThis can also be sourced from\nthe AWS_ACCESS_KEY_ID environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)."
            },
            "usage": "public java.lang.String getAccessKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.acl",
            "displayName": "acl",
            "id": "cdktf.S3BackendProps.property.acl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Canned ACL to be applied to the state file."
            },
            "usage": "public java.lang.String getAcl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.assumeRolePolicy",
            "displayName": "assumeRolePolicy",
            "id": "cdktf.S3BackendProps.property.assumeRolePolicy",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) IAM Policy JSON describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "public java.lang.String getAssumeRolePolicy();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.assumeRolePolicyArns",
            "displayName": "assumeRolePolicyArns",
            "id": "cdktf.S3BackendProps.property.assumeRolePolicyArns",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed."
            },
            "usage": "public java.util.List<java.lang.String> getAssumeRolePolicyArns();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.assumeRoleTags",
            "displayName": "assumeRoleTags",
            "id": "cdktf.S3BackendProps.property.assumeRoleTags",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Map of assume role session tags."
            },
            "usage": "public java.util.Map<java.lang.String, java.lang.String> getAssumeRoleTags();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.assumeRoleTransitiveTagKeys",
            "displayName": "assumeRoleTransitiveTagKeys",
            "id": "cdktf.S3BackendProps.property.assumeRoleTransitiveTagKeys",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "(Optional) Set of assume role session tag keys to pass to any subsequent sessions."
            },
            "usage": "public java.util.List<java.lang.String> getAssumeRoleTransitiveTagKeys();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.dynamodbEndpoint",
            "displayName": "dynamodbEndpoint",
            "id": "cdktf.S3BackendProps.property.dynamodbEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS DynamoDB API.",
              "remarks": "This can also be sourced from the AWS_DYNAMODB_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getDynamodbEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.dynamodbTable",
            "displayName": "dynamodbTable",
            "id": "cdktf.S3BackendProps.property.dynamodbTable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Name of DynamoDB Table to use for state locking and consistency.",
              "remarks": "The table must have a partition key named LockID with type of String.\nIf not configured, state locking will be disabled."
            },
            "usage": "public java.lang.String getDynamodbTable();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.encrypt",
            "displayName": "encrypt",
            "id": "cdktf.S3BackendProps.property.encrypt",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Enable server side encryption of the state file."
            },
            "usage": "public java.lang.Boolean getEncrypt();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.endpoint",
            "displayName": "endpoint",
            "id": "cdktf.S3BackendProps.property.endpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS S3 API.",
              "remarks": "This can also be sourced from the AWS_S3_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.externalId",
            "displayName": "externalId",
            "id": "cdktf.S3BackendProps.property.externalId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) External identifier to use when assuming the role."
            },
            "usage": "public java.lang.String getExternalId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.forcePathStyle",
            "displayName": "forcePathStyle",
            "id": "cdktf.S3BackendProps.property.forcePathStyle",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Enable path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)."
            },
            "usage": "public java.lang.Boolean getForcePathStyle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.iamEndpoint",
            "displayName": "iamEndpoint",
            "id": "cdktf.S3BackendProps.property.iamEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Identity and Access Management (IAM) API.",
              "remarks": "This can also be sourced from the AWS_IAM_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getIamEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.kmsKeyId",
            "displayName": "kmsKeyId",
            "id": "cdktf.S3BackendProps.property.kmsKeyId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of a Key Management Service (KMS) Key to use for encrypting the state.",
              "remarks": "Note that if this value is specified,\nTerraform will need kms:Encrypt, kms:Decrypt and kms:GenerateDataKey permissions on this KMS key."
            },
            "usage": "public java.lang.String getKmsKeyId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.maxRetries",
            "displayName": "maxRetries",
            "id": "cdktf.S3BackendProps.property.maxRetries",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "(Optional) The maximum number of times an AWS API request is retried on retryable failure.",
              "remarks": "Defaults to 5."
            },
            "usage": "public java.lang.Number getMaxRetries();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.profile",
            "displayName": "profile",
            "id": "cdktf.S3BackendProps.property.profile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Name of AWS profile in AWS shared credentials file (e.g. ~/.aws/credentials) or AWS shared configuration file (e.g. ~/.aws/config) to use for credentials and/or configuration. This can also be sourced from the AWS_PROFILE environment variable."
            },
            "usage": "public java.lang.String getProfile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.region",
            "displayName": "region",
            "id": "cdktf.S3BackendProps.property.region",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "AWS Region of the S3 Bucket and DynamoDB Table (if used).",
              "remarks": "This can also\nbe sourced from the AWS_DEFAULT_REGION and AWS_REGION environment\nvariables."
            },
            "usage": "public java.lang.String getRegion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.roleArn",
            "displayName": "roleArn",
            "id": "cdktf.S3BackendProps.property.roleArn",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Amazon Resource Name (ARN) of the IAM Role to assume."
            },
            "usage": "public java.lang.String getRoleArn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.secretKey",
            "displayName": "secretKey",
            "id": "cdktf.S3BackendProps.property.secretKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) AWS secret access key.",
              "remarks": "If configured, must also configure access_key.\nThis can also be sourced from\nthe AWS_SECRET_ACCESS_KEY environment variable,\nAWS shared credentials file (e.g. ~/.aws/credentials),\nor AWS shared configuration file (e.g. ~/.aws/config)"
            },
            "usage": "public java.lang.String getSecretKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.sessionName",
            "displayName": "sessionName",
            "id": "cdktf.S3BackendProps.property.sessionName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Session name to use when assuming the role."
            },
            "usage": "public java.lang.String getSessionName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.sharedCredentialsFile",
            "displayName": "sharedCredentialsFile",
            "id": "cdktf.S3BackendProps.property.sharedCredentialsFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Path to the AWS shared credentials file.",
              "remarks": "Defaults to ~/.aws/credentials."
            },
            "usage": "public java.lang.String getSharedCredentialsFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.skipCredentialsValidation",
            "displayName": "skipCredentialsValidation",
            "id": "cdktf.S3BackendProps.property.skipCredentialsValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip credentials validation via the STS API."
            },
            "usage": "public java.lang.Boolean getSkipCredentialsValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.skipMetadataApiCheck",
            "displayName": "skipMetadataApiCheck",
            "id": "cdktf.S3BackendProps.property.skipMetadataApiCheck",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip usage of EC2 Metadata API."
            },
            "usage": "public java.lang.Boolean getSkipMetadataApiCheck();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.skipRegionValidation",
            "displayName": "skipRegionValidation",
            "id": "cdktf.S3BackendProps.property.skipRegionValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "(Optional) Skip validation of provided region name."
            },
            "usage": "public java.lang.Boolean getSkipRegionValidation();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.sseCustomerKey",
            "displayName": "sseCustomerKey",
            "id": "cdktf.S3BackendProps.property.sseCustomerKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) The key to use for encrypting state with Server-Side Encryption with Customer-Provided Keys (SSE-C).",
              "remarks": "This is the base64-encoded value of the key, which must decode to 256 bits.\nThis can also be sourced from the AWS_SSE_CUSTOMER_KEY environment variable,\nwhich is recommended due to the sensitivity of the value.\nSetting it inside a terraform file will cause it to be persisted to disk in terraform.tfstate."
            },
            "usage": "public java.lang.String getSseCustomerKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.stsEndpoint",
            "displayName": "stsEndpoint",
            "id": "cdktf.S3BackendProps.property.stsEndpoint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Custom endpoint for the AWS Security Token Service (STS) API.",
              "remarks": "This can also be sourced from the AWS_STS_ENDPOINT environment variable."
            },
            "usage": "public java.lang.String getStsEndpoint();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.token",
            "displayName": "token",
            "id": "cdktf.S3BackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Multi-Factor Authentication (MFA) token.",
              "remarks": "This can also be sourced from the AWS_SESSION_TOKEN environment variable."
            },
            "usage": "public java.lang.String getToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.S3BackendProps.property.workspaceKeyPrefix",
            "displayName": "workspaceKeyPrefix",
            "id": "cdktf.S3BackendProps.property.workspaceKeyPrefix",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "(Optional) Prefix applied to the state path inside the bucket.",
              "remarks": "This is only relevant when using a non-default workspace. Defaults to env:"
            },
            "usage": "public java.lang.String getWorkspaceKeyPrefix();"
          }
        ],
        "docs": {
          "summary": "Stores the state as a given key in a given bucket on Amazon S3.",
          "remarks": "This backend\nalso supports state locking and consistency checking via Dynamo DB, which\ncan be enabled by setting the dynamodb_table field to an existing DynamoDB\ntable name. A single DynamoDB table can be used to lock multiple remote\nstate files. Terraform generates key names that include the values of the\nbucket and key variables.\n\nWarning! It is highly recommended that you enable Bucket Versioning on the\nS3 bucket to allow for state recovery in the case of accidental deletions\nand human error.\n\nRead more about this backend in the Terraform docs:\nhttps://www.terraform.io/language/settings/backends/s3"
        },
        "usage": "import com.hashicorp.cdktf.S3BackendProps;\n\nS3BackendProps.builder()\n    .bucket(java.lang.String)\n    .key(java.lang.String)\n//  .accessKey(java.lang.String)\n//  .acl(java.lang.String)\n//  .assumeRolePolicy(java.lang.String)\n//  .assumeRolePolicyArns(java.util.List<java.lang.String>)\n//  .assumeRoleTags(java.util.Map<java.lang.String, java.lang.String>)\n//  .assumeRoleTransitiveTagKeys(java.util.List<java.lang.String>)\n//  .dynamodbEndpoint(java.lang.String)\n//  .dynamodbTable(java.lang.String)\n//  .encrypt(java.lang.Boolean)\n//  .endpoint(java.lang.String)\n//  .externalId(java.lang.String)\n//  .forcePathStyle(java.lang.Boolean)\n//  .iamEndpoint(java.lang.String)\n//  .kmsKeyId(java.lang.String)\n//  .maxRetries(java.lang.Number)\n//  .profile(java.lang.String)\n//  .region(java.lang.String)\n//  .roleArn(java.lang.String)\n//  .secretKey(java.lang.String)\n//  .sessionName(java.lang.String)\n//  .sharedCredentialsFile(java.lang.String)\n//  .skipCredentialsValidation(java.lang.Boolean)\n//  .skipMetadataApiCheck(java.lang.Boolean)\n//  .skipRegionValidation(java.lang.Boolean)\n//  .sseCustomerKey(java.lang.String)\n//  .stsEndpoint(java.lang.String)\n//  .token(java.lang.String)\n//  .workspaceKeyPrefix(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
        "displayName": "SSHProvisionerConnection",
        "id": "cdktf.SSHProvisionerConnection",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.host",
            "displayName": "host",
            "id": "cdktf.SSHProvisionerConnection.property.host",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The address of the resource to connect to."
            },
            "usage": "public java.lang.String getHost();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.type",
            "displayName": "type",
            "id": "cdktf.SSHProvisionerConnection.property.type",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The connection type.",
              "remarks": "Valid values are \"ssh\" and \"winrm\".\nProvisioners typically assume that the remote system runs Microsoft Windows when using WinRM.\nBehaviors based on the SSH target_platform will force Windows-specific behavior for WinRM, unless otherwise specified."
            },
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.agent",
            "displayName": "agent",
            "id": "cdktf.SSHProvisionerConnection.property.agent",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Set to false to disable using ssh-agent to authenticate.",
              "remarks": "On Windows the only supported SSH authentication agent is Pageant."
            },
            "usage": "public java.lang.String getAgent();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.agentIdentity",
            "displayName": "agentIdentity",
            "id": "cdktf.SSHProvisionerConnection.property.agentIdentity",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The preferred identity from the ssh agent for authentication."
            },
            "usage": "public java.lang.String getAgentIdentity();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionCertificate",
            "displayName": "bastionCertificate",
            "id": "cdktf.SSHProvisionerConnection.property.bastionCertificate",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The contents of a signed CA Certificate.",
              "remarks": "The certificate argument must be used in conjunction with a bastion_private_key.\nThese can be loaded from a file on disk using the the file function."
            },
            "usage": "public java.lang.String getBastionCertificate();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionHost",
            "displayName": "bastionHost",
            "id": "cdktf.SSHProvisionerConnection.property.bastionHost",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Setting this enables the bastion Host connection.",
              "remarks": "The provisioner will connect to bastion_host first, and then connect from there to host."
            },
            "usage": "public java.lang.String getBastionHost();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionHostKey",
            "displayName": "bastionHostKey",
            "id": "cdktf.SSHProvisionerConnection.property.bastionHostKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The public key from the remote host or the signing CA, used to verify the host connection."
            },
            "usage": "public java.lang.String getBastionHostKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionPassword",
            "displayName": "bastionPassword",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPassword",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The password to use for the bastion host."
            },
            "usage": "public java.lang.String getBastionPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionPort",
            "displayName": "bastionPort",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPort",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "The port to use connect to the bastion host."
            },
            "usage": "public java.lang.Number getBastionPort();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionPrivateKey",
            "displayName": "bastionPrivateKey",
            "id": "cdktf.SSHProvisionerConnection.property.bastionPrivateKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The contents of an SSH key file to use for the bastion host.",
              "remarks": "These can be loaded from a file on disk using the file function."
            },
            "usage": "public java.lang.String getBastionPrivateKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.bastionUser",
            "displayName": "bastionUser",
            "id": "cdktf.SSHProvisionerConnection.property.bastionUser",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The user for the connection to the bastion host."
            },
            "usage": "public java.lang.String getBastionUser();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.certificate",
            "displayName": "certificate",
            "id": "cdktf.SSHProvisionerConnection.property.certificate",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The contents of a signed CA Certificate.",
              "remarks": "The certificate argument must be used in conjunction with a private_key.\nThese can be loaded from a file on disk using the the file function."
            },
            "usage": "public java.lang.String getCertificate();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.hostKey",
            "displayName": "hostKey",
            "id": "cdktf.SSHProvisionerConnection.property.hostKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The public key from the remote host or the signing CA, used to verify the connection."
            },
            "usage": "public java.lang.String getHostKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.password",
            "displayName": "password",
            "id": "cdktf.SSHProvisionerConnection.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The password to use for the connection."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.port",
            "displayName": "port",
            "id": "cdktf.SSHProvisionerConnection.property.port",
            "optional": true,
            "default": "22",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "The port to connect to."
            },
            "usage": "public java.lang.Number getPort();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.privateKey",
            "displayName": "privateKey",
            "id": "cdktf.SSHProvisionerConnection.property.privateKey",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The contents of an SSH key to use for the connection.",
              "remarks": "These can be loaded from a file on disk using the file function.\nThis takes preference over password if provided."
            },
            "usage": "public java.lang.String getPrivateKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.proxyHost",
            "displayName": "proxyHost",
            "id": "cdktf.SSHProvisionerConnection.property.proxyHost",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "Setting this enables the SSH over HTTP connection.",
              "remarks": "This host will be connected to first, and then the host or bastion_host connection will be made from there."
            },
            "usage": "public java.lang.String getProxyHost();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.proxyPort",
            "displayName": "proxyPort",
            "id": "cdktf.SSHProvisionerConnection.property.proxyPort",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "The port to use connect to the proxy host."
            },
            "usage": "public java.lang.Number getProxyPort();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.proxyScheme",
            "displayName": "proxyScheme",
            "id": "cdktf.SSHProvisionerConnection.property.proxyScheme",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The ssh connection also supports the following fields to facilitate connections by SSH over HTTP proxy."
            },
            "usage": "public java.lang.String getProxyScheme();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.proxyUserName",
            "displayName": "proxyUserName",
            "id": "cdktf.SSHProvisionerConnection.property.proxyUserName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The username to use connect to the private proxy host.",
              "remarks": "This argument should be specified only if authentication is required for the HTTP Proxy server."
            },
            "usage": "public java.lang.String getProxyUserName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.proxyUserPassword",
            "displayName": "proxyUserPassword",
            "id": "cdktf.SSHProvisionerConnection.property.proxyUserPassword",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The password to use connect to the private proxy host.",
              "remarks": "This argument should be specified only if authentication is required for the HTTP Proxy server."
            },
            "usage": "public java.lang.String getProxyUserPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.scriptPath",
            "displayName": "scriptPath",
            "id": "cdktf.SSHProvisionerConnection.property.scriptPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The path used to copy scripts meant for remote execution.",
              "remarks": "Refer to {@link https://www.terraform.io/language/resources/provisioners/connection#how-provisioners-execute-remote-scripts How Provisioners Execute Remote Scripts below for more details}"
            },
            "usage": "public java.lang.String getScriptPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.targetPlatform",
            "displayName": "targetPlatform",
            "id": "cdktf.SSHProvisionerConnection.property.targetPlatform",
            "optional": true,
            "default": "unix",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The target platform to connect to.",
              "remarks": "Valid values are \"windows\" and \"unix\".\nIf the platform is set to windows, the default script_path is c:\\windows\\temp\\terraform_%RAND%.cmd, assuming the SSH default shell is cmd.exe.\nIf the SSH default shell is PowerShell, set script_path to \"c:/windows/temp/terraform_%RAND%.ps1\""
            },
            "usage": "public java.lang.String getTargetPlatform();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.timeout",
            "displayName": "timeout",
            "id": "cdktf.SSHProvisionerConnection.property.timeout",
            "optional": true,
            "default": "5m",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The timeout to wait for the connection to become available.",
              "remarks": "Should be provided as a string (e.g., \"30s\" or \"5m\".)"
            },
            "usage": "public java.lang.String getTimeout();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection.property.user",
            "displayName": "user",
            "id": "cdktf.SSHProvisionerConnection.property.user",
            "optional": true,
            "default": "root",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The user to use for the connection."
            },
            "usage": "public java.lang.String getUser();"
          }
        ],
        "docs": {
          "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
          "remarks": "See {@link https://www.terraform.io/language/resources/provisioners/connection connection}"
        },
        "usage": "import com.hashicorp.cdktf.SSHProvisionerConnection;\n\nSSHProvisionerConnection.builder()\n    .host(java.lang.String)\n    .type(java.lang.String)\n//  .agent(java.lang.String)\n//  .agentIdentity(java.lang.String)\n//  .bastionCertificate(java.lang.String)\n//  .bastionHost(java.lang.String)\n//  .bastionHostKey(java.lang.String)\n//  .bastionPassword(java.lang.String)\n//  .bastionPort(java.lang.Number)\n//  .bastionPrivateKey(java.lang.String)\n//  .bastionUser(java.lang.String)\n//  .certificate(java.lang.String)\n//  .hostKey(java.lang.String)\n//  .password(java.lang.String)\n//  .port(java.lang.Number)\n//  .privateKey(java.lang.String)\n//  .proxyHost(java.lang.String)\n//  .proxyPort(java.lang.Number)\n//  .proxyScheme(java.lang.String)\n//  .proxyUserName(java.lang.String)\n//  .proxyUserPassword(java.lang.String)\n//  .scriptPath(java.lang.String)\n//  .targetPlatform(java.lang.String)\n//  .timeout(java.lang.String)\n//  .user(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.StackAnnotation",
        "displayName": "StackAnnotation",
        "id": "cdktf.StackAnnotation",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.StackAnnotation.property.constructPath",
            "displayName": "constructPath",
            "id": "cdktf.StackAnnotation.property.constructPath",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getConstructPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackAnnotation.property.level",
            "displayName": "level",
            "id": "cdktf.StackAnnotation.property.level",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AnnotationMetadataEntryType",
                  "displayName": "AnnotationMetadataEntryType",
                  "fqn": "com.hashicorp.cdktf.AnnotationMetadataEntryType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public AnnotationMetadataEntryType getLevel();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackAnnotation.property.message",
            "displayName": "message",
            "id": "cdktf.StackAnnotation.property.message",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getMessage();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackAnnotation.property.stacktrace",
            "displayName": "stacktrace",
            "id": "cdktf.StackAnnotation.property.stacktrace",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getStacktrace();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.StackAnnotation;\n\nStackAnnotation.builder()\n    .constructPath(java.lang.String)\n    .level(AnnotationMetadataEntryType)\n    .message(java.lang.String)\n//  .stacktrace(java.util.List<java.lang.String>)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.StackManifest",
        "displayName": "StackManifest",
        "id": "cdktf.StackManifest",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.annotations",
            "displayName": "annotations",
            "id": "cdktf.StackManifest.property.annotations",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackAnnotation",
                      "displayName": "StackAnnotation",
                      "fqn": "com.hashicorp.cdktf.StackAnnotation",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<StackAnnotation> getAnnotations();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.constructPath",
            "displayName": "constructPath",
            "id": "cdktf.StackManifest.property.constructPath",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getConstructPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.dependencies",
            "displayName": "dependencies",
            "id": "cdktf.StackManifest.property.dependencies",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependencies();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.name",
            "displayName": "name",
            "id": "cdktf.StackManifest.property.name",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.synthesizedStackPath",
            "displayName": "synthesizedStackPath",
            "id": "cdktf.StackManifest.property.synthesizedStackPath",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSynthesizedStackPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.StackManifest.property.workingDirectory",
            "displayName": "workingDirectory",
            "id": "cdktf.StackManifest.property.workingDirectory",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getWorkingDirectory();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.StackManifest;\n\nStackManifest.builder()\n    .annotations(java.util.List<StackAnnotation>)\n    .constructPath(java.lang.String)\n    .dependencies(java.util.List<java.lang.String>)\n    .name(java.lang.String)\n    .synthesizedStackPath(java.lang.String)\n    .workingDirectory(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.SwiftBackendProps",
        "displayName": "SwiftBackendProps",
        "id": "cdktf.SwiftBackendProps",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.container",
            "displayName": "container",
            "id": "cdktf.SwiftBackendProps.property.container",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getContainer();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.applicationCredentialId",
            "displayName": "applicationCredentialId",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.applicationCredentialName",
            "displayName": "applicationCredentialName",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.applicationCredentialSecret",
            "displayName": "applicationCredentialSecret",
            "id": "cdktf.SwiftBackendProps.property.applicationCredentialSecret",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getApplicationCredentialSecret();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.archiveContainer",
            "displayName": "archiveContainer",
            "id": "cdktf.SwiftBackendProps.property.archiveContainer",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getArchiveContainer();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.authUrl",
            "displayName": "authUrl",
            "id": "cdktf.SwiftBackendProps.property.authUrl",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAuthUrl();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.cacertFile",
            "displayName": "cacertFile",
            "id": "cdktf.SwiftBackendProps.property.cacertFile",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCacertFile();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.cert",
            "displayName": "cert",
            "id": "cdktf.SwiftBackendProps.property.cert",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCert();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.cloud",
            "displayName": "cloud",
            "id": "cdktf.SwiftBackendProps.property.cloud",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getCloud();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.defaultDomain",
            "displayName": "defaultDomain",
            "id": "cdktf.SwiftBackendProps.property.defaultDomain",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDefaultDomain();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.domainId",
            "displayName": "domainId",
            "id": "cdktf.SwiftBackendProps.property.domainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.domainName",
            "displayName": "domainName",
            "id": "cdktf.SwiftBackendProps.property.domainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.expireAfter",
            "displayName": "expireAfter",
            "id": "cdktf.SwiftBackendProps.property.expireAfter",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getExpireAfter();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.insecure",
            "displayName": "insecure",
            "id": "cdktf.SwiftBackendProps.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getInsecure();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.key",
            "displayName": "key",
            "id": "cdktf.SwiftBackendProps.property.key",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getKey();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.password",
            "displayName": "password",
            "id": "cdktf.SwiftBackendProps.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.projectDomainId",
            "displayName": "projectDomainId",
            "id": "cdktf.SwiftBackendProps.property.projectDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProjectDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.projectDomainName",
            "displayName": "projectDomainName",
            "id": "cdktf.SwiftBackendProps.property.projectDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProjectDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.regionName",
            "displayName": "regionName",
            "id": "cdktf.SwiftBackendProps.property.regionName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getRegionName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.stateName",
            "displayName": "stateName",
            "id": "cdktf.SwiftBackendProps.property.stateName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStateName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.tenantId",
            "displayName": "tenantId",
            "id": "cdktf.SwiftBackendProps.property.tenantId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTenantId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.tenantName",
            "displayName": "tenantName",
            "id": "cdktf.SwiftBackendProps.property.tenantName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTenantName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.token",
            "displayName": "token",
            "id": "cdktf.SwiftBackendProps.property.token",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getToken();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.userDomainId",
            "displayName": "userDomainId",
            "id": "cdktf.SwiftBackendProps.property.userDomainId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserDomainId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.userDomainName",
            "displayName": "userDomainName",
            "id": "cdktf.SwiftBackendProps.property.userDomainName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserDomainName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.userId",
            "displayName": "userId",
            "id": "cdktf.SwiftBackendProps.property.userId",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.SwiftBackendProps.property.userName",
            "displayName": "userName",
            "id": "cdktf.SwiftBackendProps.property.userName",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUserName();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.SwiftBackendProps;\n\nSwiftBackendProps.builder()\n    .container(java.lang.String)\n//  .applicationCredentialId(java.lang.String)\n//  .applicationCredentialName(java.lang.String)\n//  .applicationCredentialSecret(java.lang.String)\n//  .archiveContainer(java.lang.String)\n//  .authUrl(java.lang.String)\n//  .cacertFile(java.lang.String)\n//  .cert(java.lang.String)\n//  .cloud(java.lang.String)\n//  .defaultDomain(java.lang.String)\n//  .domainId(java.lang.String)\n//  .domainName(java.lang.String)\n//  .expireAfter(java.lang.String)\n//  .insecure(java.lang.Boolean)\n//  .key(java.lang.String)\n//  .password(java.lang.String)\n//  .projectDomainId(java.lang.String)\n//  .projectDomainName(java.lang.String)\n//  .regionName(java.lang.String)\n//  .stateName(java.lang.String)\n//  .tenantId(java.lang.String)\n//  .tenantName(java.lang.String)\n//  .token(java.lang.String)\n//  .userDomainId(java.lang.String)\n//  .userDomainName(java.lang.String)\n//  .userId(java.lang.String)\n//  .userName(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformAssetConfig",
        "displayName": "TerraformAssetConfig",
        "id": "cdktf.TerraformAssetConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformAssetConfig.property.path",
            "displayName": "path",
            "id": "cdktf.TerraformAssetConfig.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAssetConfig.property.assetHash",
            "displayName": "assetHash",
            "id": "cdktf.TerraformAssetConfig.property.assetHash",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getAssetHash();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformAssetConfig.property.type",
            "displayName": "type",
            "id": "cdktf.TerraformAssetConfig.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.AssetType",
                  "displayName": "AssetType",
                  "fqn": "com.hashicorp.cdktf.AssetType",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public AssetType getType();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformAssetConfig;\n\nTerraformAssetConfig.builder()\n    .path(java.lang.String)\n//  .assetHash(java.lang.String)\n//  .type(AssetType)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.testing_matchers.TerraformConstructor",
        "displayName": "TerraformConstructor",
        "id": "cdktf.testingMatchers.TerraformConstructor",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.testing_matchers.TerraformConstructor.property.tfResourceType",
            "displayName": "tfResourceType",
            "id": "cdktf.testingMatchers.TerraformConstructor.property.tfResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTfResourceType();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.testing_matchers.TerraformConstructor;\n\nTerraformConstructor.builder()\n    .tfResourceType(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformElementMetadata",
        "displayName": "TerraformElementMetadata",
        "id": "cdktf.TerraformElementMetadata",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformElementMetadata.property.path",
            "displayName": "path",
            "id": "cdktf.TerraformElementMetadata.property.path",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElementMetadata.property.stackTrace",
            "displayName": "stackTrace",
            "id": "cdktf.TerraformElementMetadata.property.stackTrace",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getStackTrace();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformElementMetadata.property.uniqueId",
            "displayName": "uniqueId",
            "id": "cdktf.TerraformElementMetadata.property.uniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getUniqueId();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformElementMetadata;\n\nTerraformElementMetadata.builder()\n    .path(java.lang.String)\n    .stackTrace(java.util.List<java.lang.String>)\n    .uniqueId(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions",
        "displayName": "TerraformHclModuleOptions",
        "id": "cdktf.TerraformHclModuleOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformHclModuleOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformHclModuleOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.providers",
            "displayName": "providers",
            "id": "cdktf.TerraformHclModuleOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProviders();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.skipAssetCreationFromLocalModules",
            "displayName": "skipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformHclModuleOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipAssetCreationFromLocalModules();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.source",
            "displayName": "source",
            "id": "cdktf.TerraformHclModuleOptions.property.source",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSource();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.version",
            "displayName": "version",
            "id": "cdktf.TerraformHclModuleOptions.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModuleOptions.property.variables",
            "displayName": "variables",
            "id": "cdktf.TerraformHclModuleOptions.property.variables",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "java.lang.Object"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, java.lang.Object> getVariables();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformHclModuleOptions;\n\nTerraformHclModuleOptions.builder()\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .providers(java.util.List<TerraformProvider)\n//  .providers(TerraformModuleProvider>)\n//  .skipAssetCreationFromLocalModules(java.lang.Boolean)\n    .source(java.lang.String)\n//  .version(java.lang.String)\n//  .variables(java.util.Map<java.lang.String, java.lang.Object>)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformMetaArguments",
        "displayName": "TerraformMetaArguments",
        "id": "cdktf.TerraformMetaArguments",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.connection",
            "displayName": "connection",
            "id": "cdktf.TerraformMetaArguments.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getConnection();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.count",
            "displayName": "count",
            "id": "cdktf.TerraformMetaArguments.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getCount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformMetaArguments.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformMetaArguments.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.lifecycle",
            "displayName": "lifecycle",
            "id": "cdktf.TerraformMetaArguments.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformResourceLifecycle getLifecycle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.provider",
            "displayName": "provider",
            "id": "cdktf.TerraformMetaArguments.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformMetaArguments.property.provisioners",
            "displayName": "provisioners",
            "id": "cdktf.TerraformMetaArguments.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "com.hashicorp.cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProvisioners();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformMetaArguments;\n\nTerraformMetaArguments.builder()\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .count(java.lang.Number)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .lifecycle(TerraformResourceLifecycle)\n//  .provider(TerraformProvider)\n//  .provisioners(java.util.List<FileProvisioner)\n//  .provisioners(LocalExecProvisioner)\n//  .provisioners(RemoteExecProvisioner>)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformModuleOptions",
        "displayName": "TerraformModuleOptions",
        "id": "cdktf.TerraformModuleOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformModuleOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformModuleOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.providers",
            "displayName": "providers",
            "id": "cdktf.TerraformModuleOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProviders();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.skipAssetCreationFromLocalModules",
            "displayName": "skipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModuleOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipAssetCreationFromLocalModules();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.source",
            "displayName": "source",
            "id": "cdktf.TerraformModuleOptions.property.source",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getSource();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleOptions.property.version",
            "displayName": "version",
            "id": "cdktf.TerraformModuleOptions.property.version",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformModuleOptions;\n\nTerraformModuleOptions.builder()\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .providers(java.util.List<TerraformProvider)\n//  .providers(TerraformModuleProvider>)\n//  .skipAssetCreationFromLocalModules(java.lang.Boolean)\n    .source(java.lang.String)\n//  .version(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
        "displayName": "TerraformModuleProvider",
        "id": "cdktf.TerraformModuleProvider",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleProvider.property.moduleAlias",
            "displayName": "moduleAlias",
            "id": "cdktf.TerraformModuleProvider.property.moduleAlias",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getModuleAlias();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleProvider.property.provider",
            "displayName": "provider",
            "id": "cdktf.TerraformModuleProvider.property.provider",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformModuleProvider;\n\nTerraformModuleProvider.builder()\n    .moduleAlias(java.lang.String)\n    .provider(TerraformProvider)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformModuleUserOptions",
        "displayName": "TerraformModuleUserOptions",
        "id": "cdktf.TerraformModuleUserOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleUserOptions.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformModuleUserOptions.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleUserOptions.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformModuleUserOptions.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleUserOptions.property.providers",
            "displayName": "providers",
            "id": "cdktf.TerraformModuleUserOptions.property.providers",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformProvider",
                          "displayName": "TerraformProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.TerraformModuleProvider",
                          "displayName": "TerraformModuleProvider",
                          "fqn": "com.hashicorp.cdktf.TerraformModuleProvider",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProviders();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModuleUserOptions.property.skipAssetCreationFromLocalModules",
            "displayName": "skipAssetCreationFromLocalModules",
            "id": "cdktf.TerraformModuleUserOptions.property.skipAssetCreationFromLocalModules",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipAssetCreationFromLocalModules();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformModuleUserOptions;\n\nTerraformModuleUserOptions.builder()\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .providers(java.util.List<TerraformProvider)\n//  .providers(TerraformModuleProvider>)\n//  .skipAssetCreationFromLocalModules(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformOutputConfig",
        "displayName": "TerraformOutputConfig",
        "id": "cdktf.TerraformOutputConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutputConfig.property.value",
            "displayName": "value",
            "id": "cdktf.TerraformOutputConfig.property.value",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getValue();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutputConfig.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformOutputConfig.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutputConfig.property.description",
            "displayName": "description",
            "id": "cdktf.TerraformOutputConfig.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDescription();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutputConfig.property.sensitive",
            "displayName": "sensitive",
            "id": "cdktf.TerraformOutputConfig.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSensitive();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformOutputConfig.property.staticId",
            "displayName": "staticId",
            "id": "cdktf.TerraformOutputConfig.property.staticId",
            "optional": true,
            "default": "false",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "If set to true the synthesized Terraform Output will be named after the `id` passed to the constructor instead of the default (TerraformOutput.friendlyUniqueId)."
            },
            "usage": "public java.lang.Boolean getStaticId();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformOutputConfig;\n\nTerraformOutputConfig.builder()\n    .value(java.lang.Object)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .description(java.lang.String)\n//  .sensitive(java.lang.Boolean)\n//  .staticId(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformProviderConfig",
        "displayName": "TerraformProviderConfig",
        "id": "cdktf.TerraformProviderConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderConfig.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.TerraformProviderConfig.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderConfig.property.terraformGeneratorMetadata",
            "displayName": "terraformGeneratorMetadata",
            "id": "cdktf.TerraformProviderConfig.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProviderGeneratorMetadata getTerraformGeneratorMetadata();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderConfig.property.terraformProviderSource",
            "displayName": "terraformProviderSource",
            "id": "cdktf.TerraformProviderConfig.property.terraformProviderSource",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformProviderSource();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformProviderConfig;\n\nTerraformProviderConfig.builder()\n    .terraformResourceType(java.lang.String)\n//  .terraformGeneratorMetadata(TerraformProviderGeneratorMetadata)\n//  .terraformProviderSource(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
        "displayName": "TerraformProviderGeneratorMetadata",
        "id": "cdktf.TerraformProviderGeneratorMetadata",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata.property.providerName",
            "displayName": "providerName",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProviderName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata.property.providerVersion",
            "displayName": "providerVersion",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerVersion",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProviderVersion();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata.property.providerVersionConstraint",
            "displayName": "providerVersionConstraint",
            "id": "cdktf.TerraformProviderGeneratorMetadata.property.providerVersionConstraint",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getProviderVersionConstraint();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformProviderGeneratorMetadata;\n\nTerraformProviderGeneratorMetadata.builder()\n    .providerName(java.lang.String)\n//  .providerVersion(java.lang.String)\n//  .providerVersionConstraint(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformResourceConfig",
        "displayName": "TerraformResourceConfig",
        "id": "cdktf.TerraformResourceConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.connection",
            "displayName": "connection",
            "id": "cdktf.TerraformResourceConfig.property.connection",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.SSHProvisionerConnection",
                      "displayName": "SSHProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.SSHProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.WinrmProvisionerConnection",
                      "displayName": "WinrmProvisionerConnection",
                      "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getConnection();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.count",
            "displayName": "count",
            "id": "cdktf.TerraformResourceConfig.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getCount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.TerraformResourceConfig.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ITerraformDependable",
                      "displayName": "ITerraformDependable",
                      "fqn": "com.hashicorp.cdktf.ITerraformDependable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<ITerraformDependable> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.TerraformResourceConfig.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.lifecycle",
            "displayName": "lifecycle",
            "id": "cdktf.TerraformResourceConfig.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformResourceLifecycle getLifecycle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.provider",
            "displayName": "provider",
            "id": "cdktf.TerraformResourceConfig.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.provisioners",
            "displayName": "provisioners",
            "id": "cdktf.TerraformResourceConfig.property.provisioners",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "% OR % OR %",
                  "types": [
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.FileProvisioner",
                          "displayName": "FileProvisioner",
                          "fqn": "com.hashicorp.cdktf.FileProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.LocalExecProvisioner",
                          "displayName": "LocalExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.LocalExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    },
                    {
                      "formattingPattern": "%",
                      "types": [
                        {
                          "id": "cdktf.RemoteExecProvisioner",
                          "displayName": "RemoteExecProvisioner",
                          "fqn": "com.hashicorp.cdktf.RemoteExecProvisioner",
                          "packageName": "cdktf",
                          "packageVersion": "0.0.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getProvisioners();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.TerraformResourceConfig.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceConfig.property.terraformGeneratorMetadata",
            "displayName": "terraformGeneratorMetadata",
            "id": "cdktf.TerraformResourceConfig.property.terraformGeneratorMetadata",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProviderGeneratorMetadata",
                  "displayName": "TerraformProviderGeneratorMetadata",
                  "fqn": "com.hashicorp.cdktf.TerraformProviderGeneratorMetadata",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProviderGeneratorMetadata getTerraformGeneratorMetadata();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformResourceConfig;\n\nTerraformResourceConfig.builder()\n//  .connection(SSHProvisionerConnection)\n//  .connection(WinrmProvisionerConnection)\n//  .count(java.lang.Number)\n//  .dependsOn(java.util.List<ITerraformDependable>)\n//  .forEach(ITerraformIterator)\n//  .lifecycle(TerraformResourceLifecycle)\n//  .provider(TerraformProvider)\n//  .provisioners(java.util.List<FileProvisioner)\n//  .provisioners(LocalExecProvisioner)\n//  .provisioners(RemoteExecProvisioner>)\n    .terraformResourceType(java.lang.String)\n//  .terraformGeneratorMetadata(TerraformProviderGeneratorMetadata)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
        "displayName": "TerraformResourceLifecycle",
        "id": "cdktf.TerraformResourceLifecycle",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle.property.createBeforeDestroy",
            "displayName": "createBeforeDestroy",
            "id": "cdktf.TerraformResourceLifecycle.property.createBeforeDestroy",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getCreateBeforeDestroy();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle.property.ignoreChanges",
            "displayName": "ignoreChanges",
            "id": "cdktf.TerraformResourceLifecycle.property.ignoreChanges",
            "optional": true,
            "type": {
              "formattingPattern": "% OR %",
              "types": [
                {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.lang.Object getIgnoreChanges();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle.property.preventDestroy",
            "displayName": "preventDestroy",
            "id": "cdktf.TerraformResourceLifecycle.property.preventDestroy",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getPreventDestroy();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformResourceLifecycle;\n\nTerraformResourceLifecycle.builder()\n//  .createBeforeDestroy(java.lang.Boolean)\n//  .ignoreChanges(java.util.List<java.lang.String>)\n//  .ignoreChanges(java.lang.String)\n//  .preventDestroy(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformStackMetadata",
        "displayName": "TerraformStackMetadata",
        "id": "cdktf.TerraformStackMetadata",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformStackMetadata.property.backend",
            "displayName": "backend",
            "id": "cdktf.TerraformStackMetadata.property.backend",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getBackend();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStackMetadata.property.stackName",
            "displayName": "stackName",
            "id": "cdktf.TerraformStackMetadata.property.stackName",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getStackName();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformStackMetadata.property.version",
            "displayName": "version",
            "id": "cdktf.TerraformStackMetadata.property.version",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformStackMetadata;\n\nTerraformStackMetadata.builder()\n    .backend(java.lang.String)\n    .stackName(java.lang.String)\n    .version(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformVariableConfig",
        "displayName": "TerraformVariableConfig",
        "id": "cdktf.TerraformVariableConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.default",
            "displayName": "default",
            "id": "cdktf.TerraformVariableConfig.property.default",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getDefault();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.description",
            "displayName": "description",
            "id": "cdktf.TerraformVariableConfig.property.description",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getDescription();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.nullable",
            "displayName": "nullable",
            "id": "cdktf.TerraformVariableConfig.property.nullable",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getNullable();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.sensitive",
            "displayName": "sensitive",
            "id": "cdktf.TerraformVariableConfig.property.sensitive",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSensitive();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.type",
            "displayName": "type",
            "id": "cdktf.TerraformVariableConfig.property.type",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The type argument in a variable block allows you to restrict the type of value that will be accepted as the value for a variable.",
              "remarks": "If no type constraint is set then a value of any type is accepted.\n\nWhile type constraints are optional, we recommend specifying them; they serve as easy reminders for users of the module, and allow Terraform to return a helpful error message if the wrong type is used.\n\nType constraints are created from a mixture of type keywords and type constructors. The supported type keywords are:\n\n* string\n* number\n* bool\n\nThe type constructors allow you to specify complex types such as collections:\n\n* list(<TYPE>)\n* set(<TYPE>)\n* map(<TYPE>)\n* object({<ATTR NAME> = <TYPE>, ... })\n* tuple([<TYPE>, ...])\n\nThe keyword any may be used to indicate that any type is acceptable. For more information on the meaning and behavior of these different types, as well as detailed information about automatic conversion of complex types, see {@link https://www.terraform.io/docs/configuration/types.html|Type Constraints}.\n\nIf both the type and default arguments are specified, the given default value must be convertible to the specified type."
            },
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableConfig.property.validation",
            "displayName": "validation",
            "id": "cdktf.TerraformVariableConfig.property.validation",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TerraformVariableValidationConfig",
                      "displayName": "TerraformVariableValidationConfig",
                      "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {
              "summary": "Specify arbitrary custom validation rules for a particular variable using a validation block nested within the corresponding variable block."
            },
            "usage": "public java.util.List<TerraformVariableValidationConfig> getValidation();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformVariableConfig;\n\nTerraformVariableConfig.builder()\n//  .default(java.lang.Object)\n//  .description(java.lang.String)\n//  .nullable(java.lang.Boolean)\n//  .sensitive(java.lang.Boolean)\n//  .type(java.lang.String)\n//  .validation(java.util.List<TerraformVariableValidationConfig>)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig",
        "displayName": "TerraformVariableValidationConfig",
        "id": "cdktf.TerraformVariableValidationConfig",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig.property.condition",
            "displayName": "condition",
            "id": "cdktf.TerraformVariableValidationConfig.property.condition",
            "type": {
              "formattingPattern": "java.lang.Object"
            },
            "docs": {},
            "usage": "public java.lang.Object getCondition();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariableValidationConfig.property.errorMessage",
            "displayName": "errorMessage",
            "id": "cdktf.TerraformVariableValidationConfig.property.errorMessage",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getErrorMessage();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TerraformVariableValidationConfig;\n\nTerraformVariableValidationConfig.builder()\n    .condition(java.lang.Object)\n    .errorMessage(java.lang.String)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.TestingAppOptions",
        "displayName": "TestingAppOptions",
        "id": "cdktf.TestingAppOptions",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.TestingAppOptions.property.enableFutureFlags",
            "displayName": "enableFutureFlags",
            "id": "cdktf.TestingAppOptions.property.enableFutureFlags",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getEnableFutureFlags();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TestingAppOptions.property.fakeCdktfJsonPath",
            "displayName": "fakeCdktfJsonPath",
            "id": "cdktf.TestingAppOptions.property.fakeCdktfJsonPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getFakeCdktfJsonPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TestingAppOptions.property.outdir",
            "displayName": "outdir",
            "id": "cdktf.TestingAppOptions.property.outdir",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getOutdir();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TestingAppOptions.property.stackTraces",
            "displayName": "stackTraces",
            "id": "cdktf.TestingAppOptions.property.stackTraces",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getStackTraces();"
          },
          {
            "fqn": "com.hashicorp.cdktf.TestingAppOptions.property.stubVersion",
            "displayName": "stubVersion",
            "id": "cdktf.TestingAppOptions.property.stubVersion",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getStubVersion();"
          }
        ],
        "docs": {},
        "usage": "import com.hashicorp.cdktf.TestingAppOptions;\n\nTestingAppOptions.builder()\n//  .enableFutureFlags(java.lang.Boolean)\n//  .fakeCdktfJsonPath(java.lang.Boolean)\n//  .outdir(java.lang.String)\n//  .stackTraces(java.lang.Boolean)\n//  .stubVersion(java.lang.Boolean)\n    .build();"
      },
      {
        "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection",
        "displayName": "WinrmProvisionerConnection",
        "id": "cdktf.WinrmProvisionerConnection",
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.host",
            "displayName": "host",
            "id": "cdktf.WinrmProvisionerConnection.property.host",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The address of the resource to connect to."
            },
            "usage": "public java.lang.String getHost();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.type",
            "displayName": "type",
            "id": "cdktf.WinrmProvisionerConnection.property.type",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The connection type.",
              "remarks": "Valid values are \"ssh\" and \"winrm\".\nProvisioners typically assume that the remote system runs Microsoft Windows when using WinRM.\nBehaviors based on the SSH target_platform will force Windows-specific behavior for WinRM, unless otherwise specified."
            },
            "usage": "public java.lang.String getType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.cacert",
            "displayName": "cacert",
            "id": "cdktf.WinrmProvisionerConnection.property.cacert",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The CA certificate to validate against."
            },
            "usage": "public java.lang.String getCacert();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.https",
            "displayName": "https",
            "id": "cdktf.WinrmProvisionerConnection.property.https",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Set to true to connect using HTTPS instead of HTTP."
            },
            "usage": "public java.lang.Boolean getHttps();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.insecure",
            "displayName": "insecure",
            "id": "cdktf.WinrmProvisionerConnection.property.insecure",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Set to true to skip validating the HTTPS certificate chain."
            },
            "usage": "public java.lang.Boolean getInsecure();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.password",
            "displayName": "password",
            "id": "cdktf.WinrmProvisionerConnection.property.password",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The password to use for the connection."
            },
            "usage": "public java.lang.String getPassword();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.port",
            "displayName": "port",
            "id": "cdktf.WinrmProvisionerConnection.property.port",
            "optional": true,
            "default": "22",
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {
              "summary": "The port to connect to."
            },
            "usage": "public java.lang.Number getPort();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.scriptPath",
            "displayName": "scriptPath",
            "id": "cdktf.WinrmProvisionerConnection.property.scriptPath",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The path used to copy scripts meant for remote execution.",
              "remarks": "Refer to {@link https://www.terraform.io/language/resources/provisioners/connection#how-provisioners-execute-remote-scripts How Provisioners Execute Remote Scripts below for more details}"
            },
            "usage": "public java.lang.String getScriptPath();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.timeout",
            "displayName": "timeout",
            "id": "cdktf.WinrmProvisionerConnection.property.timeout",
            "optional": true,
            "default": "5m",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The timeout to wait for the connection to become available.",
              "remarks": "Should be provided as a string (e.g., \"30s\" or \"5m\".)"
            },
            "usage": "public java.lang.String getTimeout();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.useNtlm",
            "displayName": "useNtlm",
            "id": "cdktf.WinrmProvisionerConnection.property.useNtlm",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "Set to true to use NTLM authentication rather than default (basic authentication), removing the requirement for basic authentication to be enabled within the target guest.",
              "remarks": "Refer to Authentication for Remote Connections in the Windows App Development documentation for more details."
            },
            "usage": "public java.lang.Boolean getUseNtlm();"
          },
          {
            "fqn": "com.hashicorp.cdktf.WinrmProvisionerConnection.property.user",
            "displayName": "user",
            "id": "cdktf.WinrmProvisionerConnection.property.user",
            "optional": true,
            "default": "root",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The user to use for the connection."
            },
            "usage": "public java.lang.String getUser();"
          }
        ],
        "docs": {
          "summary": "Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.",
          "remarks": "See {@link https://www.terraform.io/language/resources/provisioners/connection connection}"
        },
        "usage": "import com.hashicorp.cdktf.WinrmProvisionerConnection;\n\nWinrmProvisionerConnection.builder()\n    .host(java.lang.String)\n    .type(java.lang.String)\n//  .cacert(java.lang.String)\n//  .https(java.lang.Boolean)\n//  .insecure(java.lang.Boolean)\n//  .password(java.lang.String)\n//  .port(java.lang.Number)\n//  .scriptPath(java.lang.String)\n//  .timeout(java.lang.String)\n//  .useNtlm(java.lang.Boolean)\n//  .user(java.lang.String)\n    .build();"
      }
    ],
    "interfaces": [
      {
        "fqn": "com.hashicorp.cdktf.IAnyProducer",
        "displayName": "IAnyProducer",
        "id": "cdktf.IAnyProducer",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IAnyProducer",
            "displayName": "IAnyProducer",
            "id": "cdktf.IAnyProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IAnyProducer.produce",
            "displayName": "produce",
            "id": "cdktf.IAnyProducer.produce",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IAnyProducer.produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IAnyProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the value."
            },
            "usage": "public java.lang.Object produce(IResolveContext context)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy untyped value producers."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IAspect",
        "displayName": "IAspect",
        "id": "cdktf.IAspect",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IAspect",
            "displayName": "IAspect",
            "id": "cdktf.IAspect",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IAspect.visit",
            "displayName": "visit",
            "id": "cdktf.IAspect.visit",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IAspect.visit.parameter.node",
                "displayName": "node",
                "id": "cdktf.IAspect.visit.parameter.node",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "constructs.IConstruct",
                      "displayName": "IConstruct",
                      "fqn": "software.constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "10.1.45"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "All aspects can visit an IConstruct."
            },
            "usage": "public void visit(IConstruct node)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Represents an Aspect."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IFragmentConcatenator",
        "displayName": "IFragmentConcatenator",
        "id": "cdktf.IFragmentConcatenator",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.StringConcat",
            "displayName": "StringConcat",
            "id": "cdktf.StringConcat",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IFragmentConcatenator",
            "displayName": "IFragmentConcatenator",
            "id": "cdktf.IFragmentConcatenator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IFragmentConcatenator.join",
            "displayName": "join",
            "id": "cdktf.IFragmentConcatenator.join",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IFragmentConcatenator.join.parameter.left",
                "displayName": "left",
                "id": "cdktf.IFragmentConcatenator.join.parameter.left",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.IFragmentConcatenator.join.parameter.right",
                "displayName": "right",
                "id": "cdktf.IFragmentConcatenator.join.parameter.right",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Join the fragment on the left and on the right."
            },
            "usage": "public java.lang.Object join(java.lang.Object left, java.lang.Object right)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Function used to concatenate symbols in the target document language.",
          "remarks": "Interface so it could potentially be exposed over jsii."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
        "displayName": "IInterpolatingParent",
        "id": "cdktf.IInterpolatingParent",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent",
            "displayName": "IInterpolatingParent",
            "id": "cdktf.IInterpolatingParent",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IInterpolatingParent.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.IInterpolatingParent.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IInterpolatingParent.interpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.IInterpolatingParent.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String terraformAttribute)"
          }
        ],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.IListProducer",
        "displayName": "IListProducer",
        "id": "cdktf.IListProducer",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IListProducer",
            "displayName": "IListProducer",
            "id": "cdktf.IListProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IListProducer.produce",
            "displayName": "produce",
            "id": "cdktf.IListProducer.produce",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IListProducer.produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IListProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the list value."
            },
            "usage": "public java.util.List<java.lang.String> produce(IResolveContext context)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy list producers."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IManifest",
        "displayName": "IManifest",
        "id": "cdktf.IManifest",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.Manifest",
            "displayName": "Manifest",
            "id": "cdktf.Manifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IManifest",
            "displayName": "IManifest",
            "id": "cdktf.IManifest",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.IManifest.property.stacks",
            "displayName": "stacks",
            "id": "cdktf.IManifest.property.stacks",
            "type": {
              "formattingPattern": "java.util.Map<java.lang.String, %>",
              "types": [
                {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.StackManifest",
                      "displayName": "StackManifest",
                      "fqn": "com.hashicorp.cdktf.StackManifest",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.Map<java.lang.String, StackManifest> getStacks();"
          },
          {
            "fqn": "com.hashicorp.cdktf.IManifest.property.version",
            "displayName": "version",
            "id": "cdktf.IManifest.property.version",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getVersion();"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.INumberProducer",
        "displayName": "INumberProducer",
        "id": "cdktf.INumberProducer",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.INumberProducer",
            "displayName": "INumberProducer",
            "id": "cdktf.INumberProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.INumberProducer.produce",
            "displayName": "produce",
            "id": "cdktf.INumberProducer.produce",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.INumberProducer.produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.INumberProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the number value."
            },
            "usage": "public java.lang.Number produce(IResolveContext context)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy number producers."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IPostProcessor",
        "displayName": "IPostProcessor",
        "id": "cdktf.IPostProcessor",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IPostProcessor",
            "displayName": "IPostProcessor",
            "id": "cdktf.IPostProcessor",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IPostProcessor.postProcess",
            "displayName": "postProcess",
            "id": "cdktf.IPostProcessor.postProcess",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IPostProcessor.postProcess.parameter.input",
                "displayName": "input",
                "id": "cdktf.IPostProcessor.postProcess.parameter.input",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.IPostProcessor.postProcess.parameter.context",
                "displayName": "context",
                "id": "cdktf.IPostProcessor.postProcess.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Process the completely resolved value, after full recursion/resolution has happened."
            },
            "usage": "public java.lang.Object postProcess(java.lang.Object input, IResolveContext context)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "A Token that can post-process the complete resolved value, after resolve() has recursed over it."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
        "displayName": "IRemoteWorkspace",
        "id": "cdktf.IRemoteWorkspace",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.NamedRemoteWorkspace",
            "displayName": "NamedRemoteWorkspace",
            "id": "cdktf.NamedRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.PrefixedRemoteWorkspaces",
            "displayName": "PrefixedRemoteWorkspaces",
            "id": "cdktf.PrefixedRemoteWorkspaces",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IRemoteWorkspace",
            "displayName": "IRemoteWorkspace",
            "id": "cdktf.IRemoteWorkspace",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.IResolvable",
        "displayName": "IResolvable",
        "id": "cdktf.IResolvable",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMap",
            "displayName": "AnyMap",
            "id": "cdktf.AnyMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap",
            "displayName": "BooleanMap",
            "id": "cdktf.BooleanMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexList",
            "displayName": "ComplexList",
            "id": "cdktf.ComplexList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap",
            "displayName": "ComplexMap",
            "id": "cdktf.ComplexMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.LazyBase",
            "displayName": "LazyBase",
            "id": "cdktf.LazyBase",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap",
            "displayName": "NumberMap",
            "id": "cdktf.NumberMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap",
            "displayName": "StringMap",
            "id": "cdktf.StringMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable",
            "displayName": "IResolvable",
            "id": "cdktf.IResolvable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IResolvable.resolve",
            "displayName": "resolve",
            "id": "cdktf.IResolvable.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IResolvable.resolve.parameter.context",
                "displayName": "context",
                "id": "cdktf.IResolvable.resolve.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the Token's value at resolution time."
            },
            "usage": "public java.lang.Object resolve(IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolvable.toString",
            "displayName": "toString",
            "id": "cdktf.IResolvable.toString",
            "parameters": [],
            "docs": {
              "summary": "Return a string representation of this resolvable object.",
              "remarks": "Returns a reversible string representation."
            },
            "usage": "public java.lang.String toString()"
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.IResolvable.property.creationStack",
            "displayName": "creationStack",
            "id": "cdktf.IResolvable.property.creationStack",
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {
              "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution.",
              "remarks": "If this returns an empty array the stack will not be attached."
            },
            "usage": "public java.util.List<java.lang.String> getCreationStack();"
          }
        ],
        "docs": {
          "summary": "Interface for values that can be resolvable later.",
          "remarks": "Tokens are special objects that participate in synthesis."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IResolveContext",
        "displayName": "IResolveContext",
        "id": "cdktf.IResolveContext",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext",
            "displayName": "IResolveContext",
            "id": "cdktf.IResolveContext",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.registerPostProcessor",
            "displayName": "registerPostProcessor",
            "id": "cdktf.IResolveContext.registerPostProcessor",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IResolveContext.registerPostProcessor.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.IResolveContext.registerPostProcessor.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "com.hashicorp.cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Use this postprocessor after the entire token structure has been resolved."
            },
            "usage": "public void registerPostProcessor(IPostProcessor postProcessor)"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.resolve",
            "displayName": "resolve",
            "id": "cdktf.IResolveContext.resolve",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IResolveContext.resolve.parameter.x",
                "displayName": "x",
                "id": "cdktf.IResolveContext.resolve.parameter.x",
                "type": {
                  "formattingPattern": "java.lang.Object"
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve an inner object."
            },
            "usage": "public java.lang.Object resolve(java.lang.Object x)"
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.property.preparing",
            "displayName": "preparing",
            "id": "cdktf.IResolveContext.property.preparing",
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "True when we are still preparing, false if we're rendering the final output."
            },
            "usage": "public java.lang.Boolean getPreparing();"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.property.scope",
            "displayName": "scope",
            "id": "cdktf.IResolveContext.property.scope",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.IConstruct",
                  "displayName": "IConstruct",
                  "fqn": "software.constructs.IConstruct",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The scope from which resolution has been initiated."
            },
            "usage": "public IConstruct getScope();"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.property.iteratorContext",
            "displayName": "iteratorContext",
            "id": "cdktf.IResolveContext.property.iteratorContext",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "TerraformIterators can be passed for block attributes and normal list attributes both require different handling when the iterable variable is accessed e.g. a dynamic block needs each.key while a for expression just needs key."
            },
            "usage": "public java.lang.String getIteratorContext();"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResolveContext.property.suppressBraces",
            "displayName": "suppressBraces",
            "id": "cdktf.IResolveContext.property.suppressBraces",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {
              "summary": "True when ${} should be ommitted (because already inside them), false otherwise."
            },
            "usage": "public java.lang.Boolean getSuppressBraces();"
          }
        ],
        "docs": {
          "summary": "Current resolution context for tokens."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IResource",
        "displayName": "IResource",
        "id": "cdktf.IResource",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.Resource",
            "displayName": "Resource",
            "id": "cdktf.Resource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResource",
            "displayName": "IResource",
            "id": "cdktf.IResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [
          {
            "fqn": "software.constructs.IConstruct",
            "displayName": "IConstruct",
            "id": "constructs.IConstruct",
            "packageName": "constructs",
            "packageVersion": "10.1.45"
          }
        ],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.IResource.property.node",
            "displayName": "node",
            "id": "cdktf.IResource.property.node",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "constructs.Node",
                  "displayName": "Node",
                  "fqn": "software.constructs.Node",
                  "packageName": "constructs",
                  "packageVersion": "10.1.45"
                }
              ]
            },
            "docs": {
              "summary": "The tree node."
            },
            "usage": "public Node getNode();"
          },
          {
            "fqn": "com.hashicorp.cdktf.IResource.property.stack",
            "displayName": "stack",
            "id": "cdktf.IResource.property.stack",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformStack",
                  "displayName": "TerraformStack",
                  "fqn": "com.hashicorp.cdktf.TerraformStack",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {
              "summary": "The stack in which this resource is defined."
            },
            "usage": "public TerraformStack getStack();"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.IResourceConstructor",
        "displayName": "IResourceConstructor",
        "id": "cdktf.IResourceConstructor",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IResourceConstructor",
            "displayName": "IResourceConstructor",
            "id": "cdktf.IResourceConstructor",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.IScopeCallback",
        "displayName": "IScopeCallback",
        "id": "cdktf.IScopeCallback",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IScopeCallback",
            "displayName": "IScopeCallback",
            "id": "cdktf.IScopeCallback",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.IStackSynthesizer",
        "displayName": "IStackSynthesizer",
        "id": "cdktf.IStackSynthesizer",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IStackSynthesizer",
            "displayName": "IStackSynthesizer",
            "id": "cdktf.IStackSynthesizer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IStackSynthesizer.synthesize",
            "displayName": "synthesize",
            "id": "cdktf.IStackSynthesizer.synthesize",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IStackSynthesizer.synthesize.parameter.session",
                "displayName": "session",
                "id": "cdktf.IStackSynthesizer.synthesize.parameter.session",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.ISynthesisSession",
                      "displayName": "ISynthesisSession",
                      "fqn": "com.hashicorp.cdktf.ISynthesisSession",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Synthesize the associated stack to the session."
            },
            "usage": "public void synthesize(ISynthesisSession session)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Encodes information how a certain Stack should be deployed inspired by AWS CDK v2 implementation (synth functionality was removed in constructs v10)."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.IStringProducer",
        "displayName": "IStringProducer",
        "id": "cdktf.IStringProducer",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.IStringProducer",
            "displayName": "IStringProducer",
            "id": "cdktf.IStringProducer",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.IStringProducer.produce",
            "displayName": "produce",
            "id": "cdktf.IStringProducer.produce",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.IStringProducer.produce.parameter.context",
                "displayName": "context",
                "id": "cdktf.IStringProducer.produce.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Produce the string value."
            },
            "usage": "public java.lang.String produce(IResolveContext context)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface for lazy string producers."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.ISynthesisSession",
        "displayName": "ISynthesisSession",
        "id": "cdktf.ISynthesisSession",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.ISynthesisSession",
            "displayName": "ISynthesisSession",
            "id": "cdktf.ISynthesisSession",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ISynthesisSession.property.manifest",
            "displayName": "manifest",
            "id": "cdktf.ISynthesisSession.property.manifest",
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.Manifest",
                  "displayName": "Manifest",
                  "fqn": "com.hashicorp.cdktf.Manifest",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public Manifest getManifest();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ISynthesisSession.property.outdir",
            "displayName": "outdir",
            "id": "cdktf.ISynthesisSession.property.outdir",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {
              "summary": "The output directory for this synthesis session."
            },
            "usage": "public java.lang.String getOutdir();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ISynthesisSession.property.skipValidation",
            "displayName": "skipValidation",
            "id": "cdktf.ISynthesisSession.property.skipValidation",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Boolean"
            },
            "docs": {},
            "usage": "public java.lang.Boolean getSkipValidation();"
          }
        ],
        "docs": {
          "summary": "Represents a single session of synthesis.",
          "remarks": "Passed into `TerraformStack.onSynthesize()` methods.\noriginally from aws/constructs lib v3.3.126 (synth functionality was removed in constructs v10)"
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
        "displayName": "ITerraformAddressable",
        "id": "cdktf.ITerraformAddressable",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.AnyMap",
            "displayName": "AnyMap",
            "id": "cdktf.AnyMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.AnyMapList",
            "displayName": "AnyMapList",
            "id": "cdktf.AnyMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMap",
            "displayName": "BooleanMap",
            "id": "cdktf.BooleanMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.BooleanMapList",
            "displayName": "BooleanMapList",
            "id": "cdktf.BooleanMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexComputedList",
            "displayName": "ComplexComputedList",
            "id": "cdktf.ComplexComputedList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexList",
            "displayName": "ComplexList",
            "id": "cdktf.ComplexList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexMap",
            "displayName": "ComplexMap",
            "id": "cdktf.ComplexMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ComplexObject",
            "displayName": "ComplexObject",
            "id": "cdktf.ComplexObject",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteState",
            "displayName": "DataTerraformRemoteState",
            "id": "cdktf.DataTerraformRemoteState",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateArtifactory",
            "displayName": "DataTerraformRemoteStateArtifactory",
            "id": "cdktf.DataTerraformRemoteStateArtifactory",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateAzurerm",
            "displayName": "DataTerraformRemoteStateAzurerm",
            "id": "cdktf.DataTerraformRemoteStateAzurerm",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateConsul",
            "displayName": "DataTerraformRemoteStateConsul",
            "id": "cdktf.DataTerraformRemoteStateConsul",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateCos",
            "displayName": "DataTerraformRemoteStateCos",
            "id": "cdktf.DataTerraformRemoteStateCos",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcd",
            "displayName": "DataTerraformRemoteStateEtcd",
            "id": "cdktf.DataTerraformRemoteStateEtcd",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateEtcdV3",
            "displayName": "DataTerraformRemoteStateEtcdV3",
            "id": "cdktf.DataTerraformRemoteStateEtcdV3",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateGcs",
            "displayName": "DataTerraformRemoteStateGcs",
            "id": "cdktf.DataTerraformRemoteStateGcs",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateHttp",
            "displayName": "DataTerraformRemoteStateHttp",
            "id": "cdktf.DataTerraformRemoteStateHttp",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateLocal",
            "displayName": "DataTerraformRemoteStateLocal",
            "id": "cdktf.DataTerraformRemoteStateLocal",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateManta",
            "displayName": "DataTerraformRemoteStateManta",
            "id": "cdktf.DataTerraformRemoteStateManta",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateOss",
            "displayName": "DataTerraformRemoteStateOss",
            "id": "cdktf.DataTerraformRemoteStateOss",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStatePg",
            "displayName": "DataTerraformRemoteStatePg",
            "id": "cdktf.DataTerraformRemoteStatePg",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateS3",
            "displayName": "DataTerraformRemoteStateS3",
            "id": "cdktf.DataTerraformRemoteStateS3",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.DataTerraformRemoteStateSwift",
            "displayName": "DataTerraformRemoteStateSwift",
            "id": "cdktf.DataTerraformRemoteStateSwift",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMap",
            "displayName": "NumberMap",
            "id": "cdktf.NumberMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.NumberMapList",
            "displayName": "NumberMapList",
            "id": "cdktf.NumberMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMap",
            "displayName": "StringMap",
            "id": "cdktf.StringMap",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.StringMapList",
            "displayName": "StringMapList",
            "id": "cdktf.StringMapList",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule",
            "displayName": "TerraformHclModule",
            "id": "cdktf.TerraformHclModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformLocal",
            "displayName": "TerraformLocal",
            "id": "cdktf.TerraformLocal",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule",
            "displayName": "TerraformModule",
            "id": "cdktf.TerraformModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformRemoteState",
            "displayName": "TerraformRemoteState",
            "id": "cdktf.TerraformRemoteState",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformVariable",
            "displayName": "TerraformVariable",
            "id": "cdktf.TerraformVariable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ITerraformAddressable.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.ITerraformDependable",
        "displayName": "ITerraformDependable",
        "id": "cdktf.ITerraformDependable",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformHclModule",
            "displayName": "TerraformHclModule",
            "id": "cdktf.TerraformHclModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformModule",
            "displayName": "TerraformModule",
            "id": "cdktf.TerraformModule",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable",
            "displayName": "ITerraformDependable",
            "id": "cdktf.ITerraformDependable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformAddressable",
            "displayName": "ITerraformAddressable",
            "id": "cdktf.ITerraformAddressable",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "instanceMethods": [],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformDependable.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ITerraformDependable.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.ITerraformIterator",
        "displayName": "ITerraformIterator",
        "id": "cdktf.ITerraformIterator",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.ListTerraformIterator",
            "displayName": "ListTerraformIterator",
            "id": "cdktf.ListTerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.MapTerraformIterator",
            "displayName": "MapTerraformIterator",
            "id": "cdktf.MapTerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformIterator",
            "displayName": "TerraformIterator",
            "id": "cdktf.TerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformIterator",
            "displayName": "ITerraformIterator",
            "id": "cdktf.ITerraformIterator",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [],
        "properties": [],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.ITerraformResource",
        "displayName": "ITerraformResource",
        "id": "cdktf.ITerraformResource",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.TerraformDataSource",
            "displayName": "TerraformDataSource",
            "id": "cdktf.TerraformDataSource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.TerraformResource",
            "displayName": "TerraformResource",
            "id": "cdktf.TerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource",
            "displayName": "ITerraformResource",
            "id": "cdktf.ITerraformResource",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.interpolationForAttribute",
            "displayName": "interpolationForAttribute",
            "id": "cdktf.ITerraformResource.interpolationForAttribute",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "displayName": "terraformAttribute",
                "id": "cdktf.ITerraformResource.interpolationForAttribute.parameter.terraformAttribute",
                "type": {
                  "formattingPattern": "java.lang.String"
                },
                "docs": {}
              }
            ],
            "docs": {},
            "usage": "public IResolvable interpolationForAttribute(java.lang.String terraformAttribute)"
          }
        ],
        "properties": [
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.fqn",
            "displayName": "fqn",
            "id": "cdktf.ITerraformResource.property.fqn",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFqn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.friendlyUniqueId",
            "displayName": "friendlyUniqueId",
            "id": "cdktf.ITerraformResource.property.friendlyUniqueId",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getFriendlyUniqueId();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.terraformResourceType",
            "displayName": "terraformResourceType",
            "id": "cdktf.ITerraformResource.property.terraformResourceType",
            "type": {
              "formattingPattern": "java.lang.String"
            },
            "docs": {},
            "usage": "public java.lang.String getTerraformResourceType();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.count",
            "displayName": "count",
            "id": "cdktf.ITerraformResource.property.count",
            "optional": true,
            "type": {
              "formattingPattern": "java.lang.Number"
            },
            "docs": {},
            "usage": "public java.lang.Number getCount();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.dependsOn",
            "displayName": "dependsOn",
            "id": "cdktf.ITerraformResource.property.dependsOn",
            "optional": true,
            "type": {
              "formattingPattern": "java.util.List<%>",
              "types": [
                {
                  "formattingPattern": "java.lang.String"
                }
              ]
            },
            "docs": {},
            "usage": "public java.util.List<java.lang.String> getDependsOn();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.forEach",
            "displayName": "forEach",
            "id": "cdktf.ITerraformResource.property.forEach",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.ITerraformIterator",
                  "displayName": "ITerraformIterator",
                  "fqn": "com.hashicorp.cdktf.ITerraformIterator",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public ITerraformIterator getForEach();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.lifecycle",
            "displayName": "lifecycle",
            "id": "cdktf.ITerraformResource.property.lifecycle",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformResourceLifecycle",
                  "displayName": "TerraformResourceLifecycle",
                  "fqn": "com.hashicorp.cdktf.TerraformResourceLifecycle",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformResourceLifecycle getLifecycle();"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITerraformResource.property.provider",
            "displayName": "provider",
            "id": "cdktf.ITerraformResource.property.provider",
            "optional": true,
            "type": {
              "formattingPattern": "%",
              "types": [
                {
                  "id": "cdktf.TerraformProvider",
                  "displayName": "TerraformProvider",
                  "fqn": "com.hashicorp.cdktf.TerraformProvider",
                  "packageName": "cdktf",
                  "packageVersion": "0.0.0"
                }
              ]
            },
            "docs": {},
            "usage": "public TerraformProvider getProvider();"
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.ITokenMapper",
        "displayName": "ITokenMapper",
        "id": "cdktf.ITokenMapper",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.ITokenMapper",
            "displayName": "ITokenMapper",
            "id": "cdktf.ITokenMapper",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ITokenMapper.mapToken",
            "displayName": "mapToken",
            "id": "cdktf.ITokenMapper.mapToken",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenMapper.mapToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.ITokenMapper.mapToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Replace a single token."
            },
            "usage": "public java.lang.Object mapToken(IResolvable t)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "Interface to apply operation to tokens in a string.",
          "remarks": "Interface so it can be exported via jsii."
        }
      },
      {
        "fqn": "com.hashicorp.cdktf.ITokenResolver",
        "displayName": "ITokenResolver",
        "id": "cdktf.ITokenResolver",
        "implementations": [
          {
            "fqn": "com.hashicorp.cdktf.DefaultTokenResolver",
            "displayName": "DefaultTokenResolver",
            "id": "cdktf.DefaultTokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver",
            "displayName": "ITokenResolver",
            "id": "cdktf.ITokenResolver",
            "packageName": "cdktf",
            "packageVersion": "0.0.0"
          }
        ],
        "interfaces": [],
        "instanceMethods": [
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveList",
            "displayName": "resolveList",
            "id": "cdktf.ITokenResolver.resolveList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveList.parameter.l",
                "displayName": "l",
                "id": "cdktf.ITokenResolver.resolveList.parameter.l",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.String"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveList.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized list."
            },
            "usage": "public java.lang.Object resolveList(java.util.List<java.lang.String> l, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveMap",
            "displayName": "resolveMap",
            "id": "cdktf.ITokenResolver.resolveMap",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveMap.parameter.m",
                "displayName": "m",
                "id": "cdktf.ITokenResolver.resolveMap.parameter.m",
                "type": {
                  "formattingPattern": "java.util.Map<java.lang.String, %>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Object"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveMap.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveMap.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized map."
            },
            "usage": "public java.lang.Object resolveMap(java.util.Map<java.lang.String, java.lang.Object> m, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveNumberList",
            "displayName": "resolveNumberList",
            "id": "cdktf.ITokenResolver.resolveNumberList",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveNumberList.parameter.l",
                "displayName": "l",
                "id": "cdktf.ITokenResolver.resolveNumberList.parameter.l",
                "type": {
                  "formattingPattern": "java.util.List<%>",
                  "types": [
                    {
                      "formattingPattern": "java.lang.Number"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveNumberList.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveNumberList.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a tokenized number list."
            },
            "usage": "public java.lang.Object resolveNumberList(java.util.List<java.lang.Number> l, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveString",
            "displayName": "resolveString",
            "id": "cdktf.ITokenResolver.resolveString",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveString.parameter.s",
                "displayName": "s",
                "id": "cdktf.ITokenResolver.resolveString.parameter.s",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.TokenizedStringFragments",
                      "displayName": "TokenizedStringFragments",
                      "fqn": "com.hashicorp.cdktf.TokenizedStringFragments",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveString.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveString.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a string with at least one stringified token in it.",
              "remarks": "(May use concatenation)"
            },
            "usage": "public java.lang.Object resolveString(TokenizedStringFragments s, IResolveContext context)"
          },
          {
            "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveToken",
            "displayName": "resolveToken",
            "id": "cdktf.ITokenResolver.resolveToken",
            "parameters": [
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveToken.parameter.t",
                "displayName": "t",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.t",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolvable",
                      "displayName": "IResolvable",
                      "fqn": "com.hashicorp.cdktf.IResolvable",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveToken.parameter.context",
                "displayName": "context",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.context",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IResolveContext",
                      "displayName": "IResolveContext",
                      "fqn": "com.hashicorp.cdktf.IResolveContext",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              },
              {
                "fqn": "com.hashicorp.cdktf.ITokenResolver.resolveToken.parameter.postProcessor",
                "displayName": "postProcessor",
                "id": "cdktf.ITokenResolver.resolveToken.parameter.postProcessor",
                "type": {
                  "formattingPattern": "%",
                  "types": [
                    {
                      "id": "cdktf.IPostProcessor",
                      "displayName": "IPostProcessor",
                      "fqn": "com.hashicorp.cdktf.IPostProcessor",
                      "packageName": "cdktf",
                      "packageVersion": "0.0.0"
                    }
                  ]
                },
                "docs": {}
              }
            ],
            "docs": {
              "summary": "Resolve a single token."
            },
            "usage": "public java.lang.Object resolveToken(IResolvable t, IResolveContext context, IPostProcessor postProcessor)"
          }
        ],
        "properties": [],
        "docs": {
          "summary": "How to resolve tokens."
        }
      }
    ],
    "enums": [
      {
        "fqn": "com.hashicorp.cdktf.AnnotationMetadataEntryType",
        "displayName": "AnnotationMetadataEntryType",
        "id": "cdktf.AnnotationMetadataEntryType",
        "members": [
          {
            "id": "cdktf.AnnotationMetadataEntryType.INFO",
            "displayName": "INFO",
            "fqn": "com.hashicorp.cdktf.AnnotationMetadataEntryType.INFO",
            "docs": {}
          },
          {
            "id": "cdktf.AnnotationMetadataEntryType.WARN",
            "displayName": "WARN",
            "fqn": "com.hashicorp.cdktf.AnnotationMetadataEntryType.WARN",
            "docs": {}
          },
          {
            "id": "cdktf.AnnotationMetadataEntryType.ERROR",
            "displayName": "ERROR",
            "fqn": "com.hashicorp.cdktf.AnnotationMetadataEntryType.ERROR",
            "docs": {}
          }
        ],
        "docs": {}
      },
      {
        "fqn": "com.hashicorp.cdktf.AssetType",
        "displayName": "AssetType",
        "id": "cdktf.AssetType",
        "members": [
          {
            "id": "cdktf.AssetType.FILE",
            "displayName": "FILE",
            "fqn": "com.hashicorp.cdktf.AssetType.FILE",
            "docs": {}
          },
          {
            "id": "cdktf.AssetType.DIRECTORY",
            "displayName": "DIRECTORY",
            "fqn": "com.hashicorp.cdktf.AssetType.DIRECTORY",
            "docs": {}
          },
          {
            "id": "cdktf.AssetType.ARCHIVE",
            "displayName": "ARCHIVE",
            "fqn": "com.hashicorp.cdktf.AssetType.ARCHIVE",
            "docs": {}
          }
        ],
        "docs": {}
      }
    ]
  }
}